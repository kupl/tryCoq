Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nat list), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), tf4 (ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
tf4 (ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:4.)
rewrite <- IH1 in goal at 0(rank:11.)
case match (nat1) with
| true -> false
| false -> true(rank:4.)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case nat1(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- Case1 in goal at 1(rank:20.)
rewrite <- Case1 in goal at 2(rank:20.)
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case nat1(rank:5.)
rewrite <- IH1 in goal at 0(rank:20.)
=================================================
Progress: 8


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case nat1(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case2 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 2(rank:13.)
rewrite <- Case2 in goal at 3(rank:13.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
rewrite <- Case1 in goal at 2(rank:21.)
=================================================
Progress: 9


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case nat1(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:6.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 10


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 11


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 12


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case nat1(rank:4.)
=================================================
Progress: 13


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

0 conjecture(s) more...
>>> case nat1(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:5.)
rewrite <- Case1 in goal at 3(rank:20.)
case match (ZERO) with
| true -> false
| false -> true(rank:5.)
rewrite <- Case1 in goal at 0(rank:12.)
rewrite IH1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 2(rank:12.)
rewrite <- Case1 in goal at 1(rank:20.)
=================================================
Progress: 14


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 2(rank:13.)
rewrite <- Case1 in goal at 3(rank:13.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 15


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:6.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 16


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 2(rank:14.)
rewrite <- Case1 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
=================================================
Progress: 17


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 2(rank:14.)
rewrite <- Case1 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
=================================================
Progress: 18


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case nat1(rank:5.)
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 1(rank:20.)
rewrite <- Case1 in goal at 2(rank:20.)
=================================================
Progress: 19


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case nat1(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case2 in goal at 0(rank:13.)
rewrite <- Case2 in goal at 2(rank:13.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 3(rank:13.)
rewrite <- Case2 in goal at 1(rank:21.)
=================================================
Progress: 20


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 21


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1 = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank:5.)
case match (nat1) with
| true -> false
| false -> true(rank:5.)
=================================================
Progress: 22


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1 = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 8
case match (nat1) with
| true -> false
| false -> true(rank:6.)
rewrite Case1 in goal at 0(rank:21.)
rewrite Case1 in goal at 2(rank:21.)
rewrite Case1 in goal at 3(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
rewrite Case1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 2(rank:21.)
=================================================
Progress: 23


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1 = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1 = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank:6.)
rewrite Case1 in goal at 0(rank:21.)
rewrite Case1 in goal at 1(rank:21.)
rewrite Case1 in goal at 2(rank:21.)
rewrite Case1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 24


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
rewrite Case1 in goal at 1(rank:22.)
rewrite Case1 in goal at 2(rank:22.)
rewrite Case1 in goal at 3(rank:22.)
=================================================
Progress: 25


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1 = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
rewrite Case1 in goal at 1(rank:22.)
rewrite Case1 in goal at 2(rank:22.)
rewrite Case1 in goal at 3(rank:22.)
=================================================
Progress: 26


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 12.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:5.)
rewrite IH1 in goal at 0(rank:20.)
case match (ZERO) with
| true -> false
| false -> true(rank:5.)
=================================================
Progress: 27


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 9
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 2(rank:13.)
rewrite <- Case1 in goal at 3(rank:13.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
=================================================
Progress: 28


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 5.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:6.)
rewrite Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 3(rank:21.)
rewrite <- IH1 in goal at 0(rank:21.)
=================================================
Progress: 29


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 2(rank:14.)
rewrite <- Case1 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
=================================================
Progress: 30


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 2(rank:14.)
rewrite <- Case1 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
=================================================
Progress: 31


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (nat1) with
| true -> false
| false -> true(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
=================================================
Progress: 32


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
rewrite Case2 in goal at 1(rank:22.)
rewrite Case2 in goal at 2(rank:22.)
rewrite Case2 in goal at 3(rank:22.)
=================================================
Progress: 33


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
=================================================
Progress: 34


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
=================================================
Progress: 35


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
=================================================
Progress: 36


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
=================================================
Progress: 37


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case2 in goal at 0(rank:13.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
=================================================
Progress: 38


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
=================================================
Progress: 39


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (nat1) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case2 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
=================================================
Progress: 40


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
rewrite Case1 in goal at 1(rank:22.)
rewrite Case1 in goal at 2(rank:22.)
rewrite Case1 in goal at 3(rank:22.)
=================================================
Progress: 41


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 2(rank:21.)
=================================================
Progress: 42


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite <- Case1 in goal at 2(rank:14.)
rewrite <- Case1 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
=================================================
Progress: 43


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 2(rank:21.)
=================================================
Progress: 44


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite <- Case1 in goal at 2(rank:14.)
rewrite <- Case1 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
=================================================
Progress: 45


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (nat1) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
=================================================
Progress: 46


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
rewrite Case2 in goal at 1(rank:22.)
rewrite Case2 in goal at 2(rank:22.)
rewrite Case2 in goal at 3(rank:22.)
=================================================
Progress: 47


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
rewrite <- Case1 in goal at 2(rank:21.)
=================================================
Progress: 48


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
=================================================
Progress: 49


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
rewrite <- Case1 in goal at 2(rank:21.)
=================================================
Progress: 50


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
=================================================
Progress: 51


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (nat1) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case2 in goal at 2(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
=================================================
Progress: 52


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
rewrite Case1 in goal at 1(rank:22.)
rewrite Case1 in goal at 2(rank:22.)
rewrite Case1 in goal at 3(rank:22.)
=================================================
Progress: 53


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 2(rank:21.)
=================================================
Progress: 54


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite <- Case1 in goal at 2(rank:14.)
rewrite <- Case1 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
=================================================
Progress: 55


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite IH1 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 0(rank:21.)
rewrite <- Case2 in goal at 1(rank:21.)
rewrite <- Case2 in goal at 2(rank:21.)
=================================================
Progress: 56


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case1 in goal at 0(rank:14.)
rewrite <- Case1 in goal at 1(rank:14.)
rewrite <- Case1 in goal at 2(rank:14.)
rewrite <- Case1 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case1 in goal at 0(rank:22.)
=================================================
Progress: 57


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (nat1) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
=================================================
Progress: 58


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
rewrite Case2 in goal at 1(rank:22.)
rewrite Case2 in goal at 2(rank:22.)
rewrite Case2 in goal at 3(rank:22.)
=================================================
Progress: 59


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
=================================================
Progress: 60


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
=================================================
Progress: 61


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (ZERO) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
=================================================
Progress: 62


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (ZERO) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:14.)
rewrite <- Case2 in goal at 1(rank:14.)
rewrite <- Case2 in goal at 2(rank:14.)
rewrite <- Case2 in goal at 3(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
=================================================
Progress: 63


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case match (nat1) with
| true -> false
| false -> true(rank:6.)
rewrite <- Case1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:21.)
rewrite <- Case1 in goal at 1(rank:21.)
=================================================
Progress: 64


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

0 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:14.)
rewrite Case2 in goal at 0(rank:22.)
rewrite Case2 in goal at 1(rank:22.)
rewrite Case2 in goal at 2(rank:22.)
rewrite Case2 in goal at 3(rank:22.)
=================================================
Progress: 65


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 66


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 67


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 68


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 69


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 70


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 71


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 72


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 73


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 74


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat1(rank:10.)
rewrite <- Cond1 in goal at 1(rank:17.)
rewrite <- Cond1 in goal at 2(rank:17.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- Cond1 in goal at 0(rank:25.)
=================================================
Progress: 75


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 11
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- IH1 in goal at 1(rank:20.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:11.)
rewrite <- Case1 in goal at 0(rank:18.)
rewrite <- Cond1 in goal at 1(rank:18.)
rewrite <- Case1 in goal at 1(rank:26.)
rewrite <- Case1 in goal at 2(rank:26.)
rewrite <- Case1 in goal at 3(rank:26.)
rewrite <- Cond1 in goal at 0(rank:26.)
rewrite <- Cond1 in goal at 2(rank:18.)
rewrite Cond2 in goal at 0(rank:26.)
=================================================
Progress: 76


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:12.)
rewrite <- Cond1 in goal at 0(rank:27.)
rewrite <- Cond1 in goal at 1(rank:27.)
rewrite <- Cond1 in goal at 2(rank:27.)
rewrite <- IH1 in goal at 1(rank:29.)
rewrite Cond2 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 2(rank:19.)
rewrite <- Case1 in goal at 3(rank:19.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 1(rank:27.)
rewrite <- Case2 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 77


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:12.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 78


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 12.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
=================================================
Progress: 79


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 12.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
=================================================
Progress: 80


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 81


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (SUCC (SUCC (ZERO)))) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 82


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 83


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 84


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 85


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 86


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 87


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = match (tf6 ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))))) = match (tf6 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 88


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 89


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 90


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 91


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 92


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 93


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 94


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 95


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 96


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 97


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil))))) = tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil)))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 98


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 99


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 100


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 101


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 102


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 103


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 104


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat1(rank:10.)
=================================================
Progress: 105


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat1(rank : 10.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case1 in goal at 2(rank:26.)
rewrite <- Case1 in goal at 3(rank:26.)
rewrite IH1 in goal at 1(rank:28.)
rewrite IH1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 1(rank:26.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
=================================================
Progress: 106


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:12.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite IH1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
=================================================
Progress: 107


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:12.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
=================================================
Progress: 108


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 12.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
rewrite IH1 in goal at 1(rank:30.)
=================================================
Progress: 109


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 12.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
rewrite IH1 in goal at 1(rank:30.)
=================================================
Progress: 110


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 111


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil))))) ((SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil))))) ((SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = match (tf6 ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 112


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 113


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 114


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 115


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 116


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 117


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 118


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 119


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat1(rank:10.)
rewrite <- Cond2 in goal at 1(rank:17.)
rewrite <- Cond2 in goal at 2(rank:17.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- Cond2 in goal at 0(rank:25.)
=================================================
Progress: 120


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat1(rank : 10.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 11
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- IH1 in goal at 1(rank:20.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:11.)
rewrite <- Case1 in goal at 0(rank:18.)
rewrite <- Cond2 in goal at 1(rank:18.)
rewrite <- Case1 in goal at 1(rank:26.)
rewrite <- Case1 in goal at 2(rank:26.)
rewrite <- Case1 in goal at 3(rank:26.)
rewrite <- Cond2 in goal at 0(rank:26.)
rewrite <- Cond2 in goal at 2(rank:18.)
rewrite Cond1 in goal at 0(rank:26.)
=================================================
Progress: 121


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:12.)
rewrite <- Cond2 in goal at 0(rank:27.)
rewrite <- Cond2 in goal at 1(rank:27.)
rewrite <- Cond2 in goal at 2(rank:27.)
rewrite <- IH1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 0(rank:19.)
rewrite <- Case1 in goal at 2(rank:19.)
rewrite <- Case1 in goal at 3(rank:19.)
rewrite <- Case2 in goal at 0(rank:27.)
rewrite <- Case2 in goal at 1(rank:27.)
rewrite <- Case2 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 0(rank:19.)
=================================================
Progress: 122


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 11.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:12.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
rewrite <- IH1 in goal at 1(rank:21.)
=================================================
Progress: 123


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 12.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
=================================================
Progress: 124


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 12.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:20.)
rewrite <- Case1 in goal at 1(rank:20.)
rewrite <- IH1 in goal at 1(rank:22.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
=================================================
Progress: 125


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 126


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 127


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 128


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 129


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 130


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 131


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 132


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(Nil))))) ((ZERO::(ZERO::(ZERO::(Nil)))))) = match (tf6 ((ZERO::(ZERO::(ZERO::(Nil)))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 133


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 134


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 135


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 136


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))) ((SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(ZERO::(Nil))))))) = match (tf6 ((SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(ZERO::(Nil))))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = match (tf6 ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 137


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 138


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 139


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 140


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 141


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 142


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))) ((SUCC (ZERO)::(ZERO::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))) ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
previous tactics
simpl in goal
case match (nat1) with
| true -> false
| false -> true
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 143


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:10.)
=================================================
Progress: 144


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 145


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 10.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 146


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 147


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 148


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:9.)
=================================================
Progress: 149


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 9.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat1(rank:10.)
=================================================
Progress: 150


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat1(rank : 10.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
rewrite <- Case1 in goal at 0(rank:26.)
rewrite <- Case1 in goal at 2(rank:26.)
rewrite <- Case1 in goal at 3(rank:26.)
rewrite IH1 in goal at 1(rank:28.)
rewrite IH1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 1(rank:26.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:11.)
=================================================
Progress: 151


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:12.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite IH1 in goal at 1(rank:29.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
=================================================
Progress: 152


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 11.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:12.)
rewrite IH1 in goal at 1(rank:21.)
rewrite IH1 in goal at 2(rank:21.)
rewrite <- Case1 in goal at 0(rank:27.)
rewrite <- Case1 in goal at 1(rank:27.)
rewrite <- Case1 in goal at 2(rank:27.)
rewrite <- Case1 in goal at 3(rank:27.)
=================================================
Progress: 153


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 12.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
rewrite IH1 in goal at 1(rank:30.)
=================================================
Progress: 154


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 12.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:28.)
rewrite <- Case1 in goal at 1(rank:28.)
rewrite <- Case1 in goal at 2(rank:28.)
rewrite <- Case1 in goal at 3(rank:28.)
rewrite IH1 in goal at 1(rank:30.)
=================================================
Progress: 155


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 156


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))) ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))) ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 157


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 158


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 159


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 160


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 161


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 162


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 163


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 164


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 165


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 166


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))) ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) = match (tf6 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 167


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 168


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 169


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 170


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 171


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 172


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 173


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 174


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 175


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:6.)
=================================================
Progress: 176


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 177


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 178


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 179


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 180


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 181


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 182


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 183


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(SUCC (SUCC (ZERO))::(Nil))))) ((ZERO::(ZERO::(SUCC (SUCC (ZERO))::(Nil)))))) = match (tf6 ((ZERO::(ZERO::(SUCC (SUCC (ZERO))::(Nil)))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 184


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 185


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 186


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 187


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 188


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 189


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 190


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 191


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 192


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 193


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 194


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 195


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 196


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 197


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 198


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:6.)
=================================================
Progress: 199


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 200


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 201


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 202


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (SUCC (ZERO)))) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> SUCC (SUCC (SUCC (ZERO)))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))) ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) = match (tf6 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) with
| Tuple2 a _ -> a
=================================================
Progress: 203


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 204


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
=================================================
Progress: 205


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 206


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 207


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 208


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 209


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 210


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 211


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:14.)
rewrite Case1 in goal at 3(rank:14.)
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 1(rank:14.)
=================================================
Progress: 212


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:14.)
rewrite Case1 in goal at 3(rank:14.)
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 1(rank:14.)
=================================================
Progress: 213


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 214


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 215


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 216


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 217


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 218


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
forall (nat_list1:nat list), tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 219


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
forall (nat_list1:nat list), tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 220


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 221


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = match (tf6 ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
case lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:6.)
rewrite <- IH1 in goal at 0(rank:13.)
case match (nat1) with
| true -> false
| false -> true(rank:6.)
=================================================
Progress: 222


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 6.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat1(rank:7.)
rewrite <- Case1 in goal at 1(rank:22.)
rewrite <- Case1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 0(rank:22.)
=================================================
Progress: 223


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 6.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case nat1(rank:7.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 224


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case nat1(rank : 7.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:8.)
rewrite Cond1 in goal at 0(rank:15.)
rewrite <- Case2 in goal at 0(rank:15.)
rewrite <- Case2 in goal at 2(rank:15.)
rewrite <- Case2 in goal at 3(rank:15.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 225


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> case nat1(rank : 7.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 226


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 1(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 3(rank:24.)
=================================================
Progress: 227


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 1(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 3(rank:24.)
=================================================
Progress: 228


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat1(rank:6.)
=================================================
Progress: 229


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat1(rank : 6.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:7.)
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite IH1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 2(rank:22.)
rewrite <- Case1 in goal at 3(rank:22.)
rewrite <- Case1 in goal at 1(rank:22.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:7.)
=================================================
Progress: 230


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 7.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 10
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite Cond1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite IH1 in goal at 0(rank:15.)
rewrite <- Case2 in goal at 2(rank:23.)
=================================================
Progress: 231


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 7.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 232


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
=================================================
Progress: 233


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
=================================================
Progress: 234


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 235


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 236


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 237


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 238


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 239


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 240


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 241


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 242


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 243


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 244


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 245


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil)))) ((SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))))) = match (tf6 ((SUCC (SUCC (SUCC (ZERO)))::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = match (tf6 ((ZERO::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 246


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 247


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 248


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 249


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 250


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:6.)
=================================================
Progress: 251


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (SUCC (SUCC (ZERO))) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil))))) ((ZERO::(ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil)))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil))))) ((ZERO::(ZERO::(SUCC (SUCC (SUCC (ZERO)))::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 252


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 253


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 254


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
forall (nat_list1:nat list), tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
=================================================
Progress: 255


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 256


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 257


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 258


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 259


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 260


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))) ((SUCC (SUCC (ZERO))::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))) ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (SUCC (SUCC (ZERO)))) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 261


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 262


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 263


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 264


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 265


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 266


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 267


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 268


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 269


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 270


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 271


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 272


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 273


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 274


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 275


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:6.)
=================================================
Progress: 276


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = match (tf6 ((ZERO::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 277


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (ZERO) with
| true -> false
| false -> true = true
Case3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 278


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:14.)
rewrite Case2 in goal at 3(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 1(rank:14.)
=================================================
Progress: 279


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 280


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 281


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 282


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 283


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 284


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 285


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 286


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) ((ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))) = match (tf6 ((ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = match (tf6 ((ZERO::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 287


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 288


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 289


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 290


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 291


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 292


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 293


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:22.)
rewrite <- Case2 in goal at 0(rank:22.)
=================================================
Progress: 294


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 295


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 296


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 297


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) = match (tf6 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = match (tf6 ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 298


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 299


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 300


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 301


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 302


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 303


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(SUCC (ZERO)::(Nil)))) ((SUCC (SUCC (SUCC (ZERO)))::(SUCC (ZERO)::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(SUCC (ZERO)::(Nil)))) ((SUCC (SUCC (SUCC (ZERO)))::(SUCC (ZERO)::(Nil)))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 304


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 305


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> SUCC (SUCC (SUCC (ZERO)))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = match (tf6 ((ZERO::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 306


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 307


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 308


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 309


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 310


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:22.)
rewrite <- Case2 in goal at 0(rank:22.)
=================================================
Progress: 311


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 312


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = match (tf6 ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (SUCC (ZERO))::(Nil)))) ((ZERO::(SUCC (SUCC (ZERO))::(Nil))))) = match (tf6 ((ZERO::(SUCC (SUCC (ZERO))::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 313


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 314


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil)))))) ((ZERO::(ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))))) = match (tf6 ((ZERO::(ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 315


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 316


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 317


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 318


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((ZERO::(SUCC (SUCC (ZERO))::(Nil)))) ((ZERO::(SUCC (SUCC (ZERO))::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (SUCC (ZERO))::(Nil)))) ((ZERO::(SUCC (SUCC (ZERO))::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 319


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- Case2 in goal at 0(rank:6.)
=================================================
Progress: 320


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(Nil))))) ((SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(Nil))))) ((SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))) ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) = match (tf6 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 321


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:14.)
rewrite Case1 in goal at 3(rank:14.)
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 1(rank:14.)
=================================================
Progress: 322


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 323


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(Nil)))))) ((ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(Nil))))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(Nil)))))) ((ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(ZERO::(Nil)))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))) ((SUCC (SUCC (ZERO))::(ZERO::(Nil))))) = match (tf6 ((SUCC (SUCC (ZERO))::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
=================================================
Progress: 324


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 325


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (SUCC (SUCC (ZERO))))) with
| true -> plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(ZERO::(Nil)))) ((SUCC (SUCC (ZERO))::(ZERO::(Nil))))) = match (tf6 ((SUCC (SUCC (ZERO))::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))) ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) = match (tf6 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 326


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 327


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 328


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 329


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = match (tf6 ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 330


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 331


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 332


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 333


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
| false -> SUCC (SUCC (SUCC (ZERO)))) (tf1 ((SUCC (ZERO)::(ZERO::(SUCC (SUCC (ZERO))::(Nil))))) ((SUCC (ZERO)::(ZERO::(SUCC (SUCC (ZERO))::(Nil)))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(SUCC (SUCC (ZERO))::(Nil))))) ((SUCC (ZERO)::(ZERO::(SUCC (SUCC (ZERO))::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 334


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 335


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 336


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 0(rank:22.)
=================================================
Progress: 337


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 338


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil))))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 339


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 340


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = match (tf6 ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) ((SUCC (ZERO)::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))) = match (tf6 ((SUCC (ZERO)::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 341


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 342


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 343


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 344


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 345


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 346


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 347


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 348


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = match (tf6 ((ZERO::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 349


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 350


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 351


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 352


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 353


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 0(rank:22.)
=================================================
Progress: 354


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:14.)
rewrite Case2 in goal at 3(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 1(rank:14.)
=================================================
Progress: 355


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 356


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil))))) = match (tf6 ((SUCC (ZERO)::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 357


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 358


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 359


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 360


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil)))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 361


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 362


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 363


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:22.)
rewrite <- Case2 in goal at 0(rank:22.)
=================================================
Progress: 364


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 365


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 366


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 367


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 368


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 369


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 370


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 371


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
=================================================
Progress: 372


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:22.)
rewrite <- Case2 in goal at 0(rank:22.)
=================================================
Progress: 373


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 2(rank:14.)
rewrite Case1 in goal at 3(rank:14.)
rewrite <- Case1 in goal at 0(rank:14.)
rewrite Case1 in goal at 1(rank:14.)
=================================================
Progress: 374


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 375


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (SUCC (ZERO)))) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> SUCC (SUCC (SUCC (ZERO)))) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = match (tf6 ((ZERO::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 376


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 377


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 378


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 379


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 380


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 381


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))) ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))) ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil))))))) ((ZERO::(SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil))))))) ((ZERO::(SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(SUCC (ZERO)::(Nil))))))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil))))) = match (tf6 ((SUCC (ZERO)::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(Nil))))) ((SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(Nil)))))) = match (tf6 ((SUCC (ZERO)::(ZERO::(SUCC (ZERO)::(Nil)))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 382


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 383


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 384


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 385


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 2
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 386


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 387


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 388


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 0(rank:22.)
=================================================
Progress: 389


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 390


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(Nil))))) ((ZERO::(ZERO::(ZERO::(Nil)))))) = match (tf6 ((ZERO::(ZERO::(ZERO::(Nil)))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 391


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 392


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 393


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 394


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 395


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 396


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 397


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 398


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 399


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 400


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 3
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = match (tf6 ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 401


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 402


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 403


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 404


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 405


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 0(rank:22.)
=================================================
Progress: 406


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:14.)
rewrite Case2 in goal at 3(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 1(rank:14.)
=================================================
Progress: 407


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 408


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil)))))) ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) = match (tf6 ((ZERO::(ZERO::(ZERO::(ZERO::(Nil))))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = match (tf6 ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 409


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 410


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 411


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 412


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 413


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 414


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = match (tf6 ((ZERO::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 415


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:22.)
rewrite <- Case2 in goal at 0(rank:22.)
=================================================
Progress: 416


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 417


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 418


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 419


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (SUCC (ZERO)))) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
=================================================
Progress: 420


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 421


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 422


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 423


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (SUCC (ZERO)))::(Nil))) ((SUCC (SUCC (SUCC (ZERO)))::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
rewrite <- Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 3
rewrite <- IH1 in goal at 0
case match (ZERO) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
=================================================
Progress: 424


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite Case2 in goal at 0(rank:22.)
rewrite <- Case2 in goal at 0(rank:22.)
=================================================
Progress: 425


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 5
rewrite Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 2(rank:14.)
rewrite Case2 in goal at 3(rank:14.)
rewrite <- Case2 in goal at 0(rank:14.)
rewrite Case2 in goal at 1(rank:14.)
=================================================
Progress: 426


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 427


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 428


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 429


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 430


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 431


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 432


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 433


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 1(rank:21.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 2(rank:21.)
rewrite <- Cond2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
=================================================
Progress: 434


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 435


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 436


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 437


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 438


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 439


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 440


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 441


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 442


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 443


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 444


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 445


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 446


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 447


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 1(rank:21.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 2(rank:21.)
rewrite <- Cond2 in goal at 0(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
=================================================
Progress: 448


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 449


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 450


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 451


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 452


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 453


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 454


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 455


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 456


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 457


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 458


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 459


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 460


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 461


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 462


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond2 in goal at 0(rank:21.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond2 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 0(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond3 in goal at 2(rank:21.)
=================================================
Progress: 463


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 464


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 465


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 466


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 467


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 468


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 469


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 470


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 471


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 472


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 473


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 474


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 475


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 476


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond2 in goal at 0(rank:21.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond2 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 0(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond3 in goal at 2(rank:21.)
=================================================
Progress: 477


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 478


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 479


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 480


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 481


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 482


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 483


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 484


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 485


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 486


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 487


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 488


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 489


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 490


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 491


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 2(rank:21.)
=================================================
Progress: 492


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 493


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 494


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 495


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 496


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 497


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 498


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 499


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 500


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 501


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 502


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 503


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 504


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 505


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 2(rank:21.)
=================================================
Progress: 506


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 507


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 508


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 509


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 510


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 511


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 512


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 513


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 514


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 515


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 516


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 517


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 518


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 519


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 520


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 0(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond3 in goal at 2(rank:21.)
=================================================
Progress: 521


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 522


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 523


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 524


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 525


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 526


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 527


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 528


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 529


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 530


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 531


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 532


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 533


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 534


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 0(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond3 in goal at 2(rank:21.)
=================================================
Progress: 535


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 536


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 537


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 538


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 539


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 540


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 541


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 542


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(ZERO::(Nil))))) ((ZERO::(SUCC (ZERO)::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(ZERO::(Nil))))) ((ZERO::(SUCC (ZERO)::(ZERO::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 543


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 544


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 545


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 546


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 547


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 548


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 549


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 550


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (SUCC (ZERO)))) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (ZERO))
| false -> SUCC (SUCC (SUCC (ZERO)))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (SUCC (ZERO)))) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> SUCC (SUCC (SUCC (ZERO)))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 551


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 552


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil))))) ((SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil)))))) = match (tf6 ((SUCC (SUCC (ZERO))::(ZERO::(ZERO::(Nil)))))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 553


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 554


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 555


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 556


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 557


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil)))) ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) = match (tf6 ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 558


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 559


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(SUCC (SUCC (SUCC (ZERO)))::(ZERO::(SUCC (ZERO)::(Nil)))))) ((ZERO::(SUCC (SUCC (SUCC (ZERO)))::(ZERO::(SUCC (ZERO)::(Nil))))))) = match (tf6 ((ZERO::(SUCC (SUCC (SUCC (ZERO)))::(ZERO::(SUCC (ZERO)::(Nil))))))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 560


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 561


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 562


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 563


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 564


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (SUCC (SUCC (ZERO)))) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> SUCC (SUCC (SUCC (ZERO)))) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (SUCC (SUCC (ZERO)))) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
case lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 565


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 566


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 567


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 568


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat1(rank:7.)
=================================================
Progress: 569


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
Case1 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

1 goal(s) more...

1 conjecture(s) more...
>>> case nat1(rank : 7.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite IH1 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 570


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 571


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1 = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank:7.)
case match (nat1) with
| true -> false
| false -> true(rank:7.)
=================================================
Progress: 572


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1 = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank : 7.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case match (nat1) with
| true -> false
| false -> true(rank:8.)
rewrite Case1 in goal at 0(rank:23.)
rewrite Case1 in goal at 2(rank:23.)
rewrite Case1 in goal at 3(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite Case1 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
=================================================
Progress: 573


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1 = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 7.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1 = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite Case1 in goal at 0(rank:23.)
rewrite Case1 in goal at 1(rank:23.)
rewrite Case1 in goal at 2(rank:23.)
rewrite Case1 in goal at 3(rank:23.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 574


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:16.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
rewrite Case1 in goal at 2(rank:24.)
rewrite Case1 in goal at 3(rank:24.)
=================================================
Progress: 575


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1 = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:16.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
rewrite Case1 in goal at 2(rank:24.)
rewrite Case1 in goal at 3(rank:24.)
=================================================
Progress: 576


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 577


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 578


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 579


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 580


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 581


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 2(rank:21.)
=================================================
Progress: 582


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 583


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 584


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 585


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 586


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 587


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 588


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 589


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 590


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 591


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 592


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 593


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 594


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 595


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 2(rank:21.)
=================================================
Progress: 596


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 597


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 598


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 599


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 600


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 601


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 602


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 603


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 604


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 605


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 606


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 607


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 608


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 609


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 610


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 0(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond3 in goal at 2(rank:21.)
=================================================
Progress: 611


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 612


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 613


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 614


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 615


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 616


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 617


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 618


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 619


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 620


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 621


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 622


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 623


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 624


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 1(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond1 in goal at 3(rank:29.)
rewrite <- Cond3 in goal at 0(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond3 in goal at 2(rank:21.)
=================================================
Progress: 625


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 626


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 627


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 628


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 629


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 630


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 631


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 632


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))) ((SUCC (ZERO)::(ZERO::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))) ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (SUCC (ZERO))::(Nil)))) ((ZERO::(SUCC (SUCC (ZERO))::(Nil))))) = match (tf6 ((ZERO::(SUCC (SUCC (ZERO))::(Nil))))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 633


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 634


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 635


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:6.)
=================================================
Progress: 636


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 637


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 638


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2))) = tf4 (ZERO) (tf1 ((nat1::nat_list2)) ((nat1::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 639


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat1(rank:6.)
=================================================
Progress: 640


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat1::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat1(rank : 6.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:7.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 2(rank:22.)
rewrite <- Case1 in goal at 3(rank:22.)
rewrite IH1 in goal at 1(rank:23.)
rewrite IH1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 1(rank:22.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:7.)
=================================================
Progress: 641


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite IH1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
=================================================
Progress: 642


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 7.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite IH1 in goal at 1(rank:16.)
rewrite IH1 in goal at 2(rank:16.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
=================================================
Progress: 643


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
rewrite IH1 in goal at 1(rank:25.)
=================================================
Progress: 644


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
rewrite IH1 in goal at 1(rank:25.)
=================================================
Progress: 645


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = match (tf6 ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 646


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 647


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))) ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))) ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 648


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 649


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 650


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))) ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))) ((ZERO::(SUCC (SUCC (ZERO))::(ZERO::(Nil))))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 651


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 652


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 653


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 654


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 655


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 656


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 657


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 658


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 659


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 660


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 661


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 662


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 663


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 664


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 665


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 1(rank:21.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 2(rank:21.)
rewrite Cond2 in goal at 0(rank:21.)
rewrite <- Cond2 in goal at 0(rank:21.)
rewrite <- Cond2 in goal at 3(rank:21.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond2 in goal at 1(rank:29.)
=================================================
Progress: 666


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 667


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 668


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 669


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 670


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 671


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 672


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 673


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 674


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 675


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 676


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 677


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 1(rank:21.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 2(rank:21.)
rewrite <- Cond2 in goal at 0(rank:21.)
rewrite <- Cond2 in goal at 3(rank:21.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
=================================================
Progress: 678


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 679


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 680


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 681


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 682


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 683


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 684


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))) ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))) ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 685


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 686


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 687


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 688


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 689


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (SUCC (ZERO))::(Nil))) ((SUCC (SUCC (ZERO))::(Nil)))) = match (tf6 ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 690


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 691


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 692


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 693


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 694


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 695


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 696


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 697


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 698


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 699


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 700


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 701


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 702


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 703


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 704


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 705


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 706


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 707


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 3(rank:21.)
rewrite <- Cond2 in goal at 1(rank:21.)
rewrite <- Cond2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond2 in goal at 0(rank:29.)
=================================================
Progress: 708


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 709


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 710


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 711


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 712


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 713


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 714


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 715


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 716


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 717


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 718


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 719


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 3(rank:21.)
rewrite <- Cond2 in goal at 1(rank:21.)
rewrite <- Cond2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
=================================================
Progress: 720


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 721


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 722


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 723


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 724


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 725


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 726


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(Nil))))) ((ZERO::(ZERO::(ZERO::(Nil)))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(ZERO::(Nil))))) ((ZERO::(ZERO::(ZERO::(Nil))))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 727


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))) ((SUCC (ZERO)::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))) ((SUCC (ZERO)::(SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 728


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 729


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 730


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 731


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 732


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 733


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 734


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 735


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 736


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 737


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:13.)
=================================================
Progress: 738


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:14.)
=================================================
Progress: 739


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case1 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case1 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 740


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 741


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))) ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil))))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))) ((SUCC (ZERO)::(SUCC (SUCC (ZERO))::(Nil)))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case nat1
rewrite <- Case1 in goal at 2
case lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
rewrite <- Case1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 742


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:14.)
=================================================
Progress: 743


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 744


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 745


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 746


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 747


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 748


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 749


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 750


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 751


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 752


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 753


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 754


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite Cond1 in goal at 0(rank:21.)
rewrite <- Cond1 in goal at 3(rank:21.)
rewrite <- Cond2 in goal at 1(rank:21.)
rewrite <- Cond2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite <- Cond2 in goal at 0(rank:29.)
=================================================
Progress: 755


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 756


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 757


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 758


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 759


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 760


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 761


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 762


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 763


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 764


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 765


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 766


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 13
case nat2(rank:14.)
rewrite <- Cond1 in goal at 0(rank:21.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 3(rank:21.)
rewrite <- Cond2 in goal at 1(rank:21.)
rewrite <- Cond2 in goal at 2(rank:21.)
rewrite <- IH1 in goal at 1(rank:24.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
=================================================
Progress: 767


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 768


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 769


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 770


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 771


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 772


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 773


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (SUCC (ZERO)))) with
| true -> plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))
| false -> SUCC (SUCC (SUCC (ZERO)))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
=================================================
Progress: 774


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 775


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
=================================================
Progress: 776


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = match (tf6 ((SUCC (ZERO)::(Nil)))) with
| Tuple2 a _ -> a
=================================================
Progress: 777


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (SUCC (ZERO)) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(SUCC (ZERO)::(Nil)))) ((ZERO::(SUCC (ZERO)::(Nil)))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- Case2 in goal at 0
rewrite <- IH1 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
=================================================
Progress: 778


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))) ((SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))) ((SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 779


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 1(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 1
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = tf4 (ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil)))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(ZERO::(Nil)))) ((ZERO::(ZERO::(Nil))))) = match (tf6 ((ZERO::(ZERO::(Nil))))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 780


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 2(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 2
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (ZERO) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (SUCC (ZERO))) with
| true -> plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))
| false -> SUCC (SUCC (ZERO))) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 781


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite Case2 in goal at 3(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite Case2 in goal at 3
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (ZERO))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil)))) = tf4 (ZERO) (tf1 ((SUCC (ZERO)::(Nil))) ((SUCC (ZERO)::(Nil))))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil))) ((SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))) = match (tf6 ((SUCC (SUCC (SUCC (SUCC (ZERO))))::(Nil)))) with
| Tuple2 a _ -> a
=================================================
Progress: 782


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 14.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (nat1) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = tf4 (ZERO) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil))))
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))
previous tactics
simpl in goal
case lq (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))
case nat1
rewrite <- IH1 in goal at 0
rewrite <- Case2 in goal at 0
case match (nat1) with
| true -> false
| false -> true
validate generalize_common_subterm_goal
Prop: tf4 (match (SUCC (ZERO)) with
| true -> plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))
| false -> SUCC (ZERO)) (tf1 ((ZERO::(Nil))) ((ZERO::(Nil)))) = match (tf6 ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
Prop: tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a
=================================================
Progress: 783


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:22.)
rewrite Cond3 in goal at 0(rank:30.)
=================================================
Progress: 784


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
=================================================
Progress: 785


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:22.)
rewrite Cond3 in goal at 0(rank:30.)
=================================================
Progress: 786


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
=================================================
Progress: 787


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 0(rank:22.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
rewrite <- Cond3 in goal at 0(rank:30.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 788


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
=================================================
Progress: 789


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 0(rank:22.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
rewrite <- Cond3 in goal at 0(rank:30.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 790


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : nat1 = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
=================================================
Progress: 791


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite Cond3 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 792


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 793


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite Cond3 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 794


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 795


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond3 in goal at 0(rank:30.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 796


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 797


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond3 in goal at 0(rank:30.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 798


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 799


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 800


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 801


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 802


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 803


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 804


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 805


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 806


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 807


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 808


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 809


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 810


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 811


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 812


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 813


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 814


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 815


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 816


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 817


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 818


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (nat1) with
| true -> false
| false -> true = true
Cond3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 819


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 820


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 821


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite Cond3 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 822


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 823


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite Cond3 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 824


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 825


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond3 in goal at 0(rank:30.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 826


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 827


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond3 in goal at 0(rank:30.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 828


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 829


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 830


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 831


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 832


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 833


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 834


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 835


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 836


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 837


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond2 in goal at 1(rank:29.)
rewrite Cond2 in goal at 3(rank:29.)
rewrite <- Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 1(rank:29.)
rewrite <- Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 2(rank:29.)
rewrite Cond2 in goal at 0(rank:29.)
rewrite <- Cond2 in goal at 3(rank:29.)
=================================================
Progress: 838


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 839


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 840


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite Cond2 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond3 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:22.)
rewrite Cond2 in goal at 1(rank:30.)
=================================================
Progress: 841


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
=================================================
Progress: 842


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:22.)
rewrite Cond3 in goal at 0(rank:30.)
=================================================
Progress: 843


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
=================================================
Progress: 844


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 845


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 846


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 847


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 848


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 849


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 850


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 851


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 852


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 853


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 854


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 855


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond3 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 856


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 857


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite Cond3 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 858


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 859


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 860


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 861


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 862


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
---------------------------------------
forall (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:13.)
=================================================
Progress: 863


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:13.)
=================================================
Progress: 864


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:13.)
=================================================
Progress: 865


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:13.)
=================================================
Progress: 866


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:13.)
=================================================
Progress: 867


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (nat1) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 13.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case nat2(rank:14.)
rewrite Cond1 in goal at 1(rank:29.)
rewrite Cond1 in goal at 3(rank:29.)
rewrite <- Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 1(rank:29.)
rewrite <- Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 2(rank:29.)
rewrite Cond1 in goal at 0(rank:29.)
rewrite <- Cond1 in goal at 3(rank:29.)
=================================================
Progress: 868


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 869


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:15.)
=================================================
Progress: 870


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite Cond1 in goal at 0(rank:22.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond3 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 871


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 872


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 19
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- IH1 in goal at 1(rank:25.)
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:15.)
rewrite <- Case1 in goal at 0(rank:22.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 0(rank:22.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite Cond3 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
=================================================
Progress: 873


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 874


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (nat1) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 875


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (nat1) with
| true -> false
| false -> true = true
Cond3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : match (nat1) with
| true -> false
| false -> true = true
Cond3 : lq (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 876


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> nat1 = ZERO -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : nat1 = ZERO
Cond3 : match (nat1) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond2 in goal at 0(rank:30.)
rewrite <- Cond2 in goal at 1(rank:30.)
rewrite <- Cond2 in goal at 2(rank:30.)
rewrite <- Cond2 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond2 in goal at 0(rank:30.)
rewrite Cond2 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond2 in goal at 3(rank:30.)
rewrite Cond2 in goal at 1(rank:30.)
=================================================
Progress: 877


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (nat1) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 878


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

0 goal(s) more...

1 conjecture(s) more...
>>> case nat2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (nat1) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (ZERO::nat_list2)
Cond1 : nat1 = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (nat1) with
| true -> false
| false -> true = true
Case1 : nat2 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO = if lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 14
case lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite <- Cond1 in goal at 0(rank:30.)
rewrite <- Cond1 in goal at 1(rank:30.)
rewrite <- Cond1 in goal at 2(rank:30.)
rewrite <- Cond1 in goal at 3(rank:30.)
case lq (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (nat1))
| false -> nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:15.)
rewrite Cond1 in goal at 0(rank:30.)
rewrite Cond1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 0(rank:30.)
rewrite <- Case1 in goal at 1(rank:30.)
rewrite <- Case1 in goal at 2(rank:30.)
rewrite <- Case1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 3(rank:30.)
rewrite Cond1 in goal at 1(rank:30.)
=================================================
Progress: 879


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 880


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case2 in goal at 0(rank:15.)
rewrite <- Case2 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 881


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case match (nat1) with
| true -> false
| false -> true(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 882


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:16.)
rewrite Case2 in goal at 0(rank:24.)
rewrite Case2 in goal at 1(rank:24.)
rewrite Case2 in goal at 2(rank:24.)
rewrite Case2 in goal at 3(rank:24.)
=================================================
Progress: 883


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 2(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 884


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (nat1) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 1(rank:16.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 3(rank:24.)
rewrite Case2 in goal at 0(rank:24.)
=================================================
Progress: 885


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case2 in goal at 3(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- IH1 in goal at 0(rank:23.)
=================================================
Progress: 886


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case2 : nat1 = ZERO
Case3 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite <- Case2 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 1(rank:16.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case2 in goal at 3(rank:24.)
rewrite Case2 in goal at 0(rank:24.)
=================================================
Progress: 887


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 3(rank:23.)
=================================================
Progress: 888


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : match (ZERO) with
| true -> false
| false -> true = true
Case2 : nat1 = ZERO
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:24.)
rewrite <- Case2 in goal at 1(rank:24.)
rewrite <- Case2 in goal at 2(rank:24.)
rewrite <- Case2 in goal at 3(rank:24.)
rewrite <- Case2 in goal at 0(rank:24.)
=================================================
Progress: 889


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite Cond1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 890


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 1(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
=================================================
Progress: 891


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 8
case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank:8.)
rewrite <- Case1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 2(rank:15.)
rewrite <- Case1 in goal at 3(rank:15.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case2 in goal at 2(rank:23.)
=================================================
Progress: 892


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a)(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- Case1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 1(rank:16.)
rewrite <- IH1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
=================================================
Progress: 893


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = if if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
case match (nat1) with
| true -> false
| false -> true(rank:8.)
rewrite <- Case2 in goal at 2(rank:23.)
rewrite <- Case2 in goal at 0(rank:23.)
rewrite <- Case2 in goal at 1(rank:23.)
=================================================
Progress: 894


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = if if match (nat1) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then fst2 (tf6 (nat_list2)) else plus (SUCC (nat1)) (fst2 (tf6 (nat_list2)))

2 goal(s) more...

1 conjecture(s) more...
>>> case match (nat1) with
| true -> false
| false -> true(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite <- IH1 in goal at 0(rank:16.)
rewrite Case1 in goal at 0(rank:24.)
rewrite Case1 in goal at 1(rank:24.)
rewrite Case1 in goal at 2(rank:24.)
rewrite Case1 in goal at 3(rank:24.)
=================================================
Progress: 895


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite <- Case1 in goal at 0(rank:23.)
rewrite <- Case1 in goal at 1(rank:23.)
rewrite <- Case1 in goal at 2(rank:23.)
rewrite <- Case1 in goal at 3(rank:23.)
=================================================
Progress: 896


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
if lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : if match (ZERO) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
Case3 : lq (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (ZERO) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:24.)
rewrite <- Case1 in goal at 2(rank:24.)
rewrite <- Case1 in goal at 3(rank:24.)
rewrite <- Case1 in goal at 0(rank:24.)
=================================================
Progress: 897


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 898


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 899


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 900


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 901


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 902


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond1 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 0(rank:30.)
=================================================
Progress: 903


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 904


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 905


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 906


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 907


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 908


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 909


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 910


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 911


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 912


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 913


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 914


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond1 in goal at 1(rank:22.)
rewrite <- Cond1 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond1 in goal at 0(rank:30.)
=================================================
Progress: 915


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 916


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 917


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 918


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 919


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 920


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 921


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 922


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 923


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 924


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 925


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 926


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond2 : ZERO = ZERO
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 927


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 928


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 929


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 930


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 931


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 932


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond3 in goal at 0(rank:30.)
=================================================
Progress: 933


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 934


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 935


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 936


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 937


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 938


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 939


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 940


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 941


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 942


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 943


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 944


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond3 in goal at 0(rank:30.)
=================================================
Progress: 945


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 946


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 947


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 948


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 949


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 950


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 951


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 952


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 953


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 954


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 955


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 956


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (ZERO) with
| true -> false
| false -> true = true -> ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
Cond2 : ZERO = ZERO
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 957


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 958


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 959


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 960


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 961


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 962


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond2 in goal at 0(rank:30.)
=================================================
Progress: 963


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 964


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 965


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 966


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 967


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 968


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 969


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 970


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 971


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 972


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 973


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 974


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond2 in goal at 0(rank:30.)
=================================================
Progress: 975


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 976


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 977


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 978


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 979


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 980


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 981


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 982


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 983


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 984


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 985


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 986


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 987


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 988


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 989


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 990


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 991


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 992


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond3 in goal at 0(rank:30.)
=================================================
Progress: 993


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 994


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 995


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 996


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 997


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 998


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 999


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1000


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1001


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1002


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 1003


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 1004


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond3 in goal at 1(rank:22.)
rewrite <- Cond3 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond3 in goal at 0(rank:30.)
=================================================
Progress: 1005


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1006


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1007


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1008


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 1009


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 1010


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 1011


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1012


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1013


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1014


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 1015


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 1016


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : match (ZERO) with
| true -> false
| false -> true = true
Cond3 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 1017


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1018


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1019


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1020


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 1021


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 1022


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond2 in goal at 0(rank:30.)
=================================================
Progress: 1023


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1024


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1025


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1026


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 1027


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 1028


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 1029


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1 = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1 = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
case lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank:8.)
rewrite Case1 in goal at 0(rank:15.)
rewrite Case1 in goal at 2(rank:15.)
rewrite <- Case1 in goal at 0(rank:15.)
rewrite <- Case1 in goal at 1(rank:15.)
rewrite <- Case1 in goal at 2(rank:15.)
rewrite <- Case1 in goal at 3(rank:15.)
rewrite Case1 in goal at 3(rank:15.)
rewrite Case1 in goal at 1(rank:15.)
=================================================
Progress: 1030


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) else match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1 = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)))(rank : 8.)


1st goal of : forall (nat_list1:nat list), match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
Cond1 : match (ZERO) with
| true -> false
| false -> true = true
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (ZERO::nat_list2)
Case1 : nat1 = ZERO
Case2 : match (nat1) with
| true -> false
| false -> true = true
Case3 : lq (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2))) = true
---------------------------------------
tf4 (match (nat1) with
| true -> plus (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list2) (nat_list2)) = tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
rewrite Case1 in goal at 0(rank:16.)
rewrite Case1 in goal at 2(rank:16.)
rewrite <- Case1 in goal at 0(rank:16.)
rewrite IH1 in goal at 0(rank:24.)
rewrite <- Case1 in goal at 1(rank:16.)
rewrite <- Case1 in goal at 2(rank:16.)
rewrite Case1 in goal at 3(rank:16.)
rewrite Case1 in goal at 1(rank:16.)
rewrite <- Case1 in goal at 3(rank:16.)
=================================================
Progress: 1031


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1032


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1033


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1034


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 1035


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 1036


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 5
case nat2(rank:15.)
rewrite <- Cond2 in goal at 1(rank:22.)
rewrite <- Cond2 in goal at 2(rank:22.)
rewrite <- IH1 in goal at 1(rank:25.)
rewrite <- Cond2 in goal at 0(rank:30.)
=================================================
Progress: 1037


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1038


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1039


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1040


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 1041


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 1042


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 1043


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = tf4 (ZERO) (tf1 (nat_list1) (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1044


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = tf4 (ZERO) (tf1 ((Nil)) ((Nil)))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1045


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = tf4 (ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:14.)
=================================================
Progress: 1046


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:14.)
=================================================
Progress: 1047


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
---------------------------------------
lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:14.)
=================================================
Progress: 1048


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
---------------------------------------
match (ZERO) with
| true -> false
| false -> true = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = tf4 (nat1) (tf1 (nat_list1) (nat_list1))
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> match (ZERO) with
| true -> false
| false -> true = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = tf4 (ZERO) (tf1 (nat_list2) (nat_list2))
Inductive1 : nat_list1 = (nat2::nat_list2)
Cond1 : ZERO = ZERO
Cond2 : lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true
Cond3 : match (ZERO) with
| true -> false
| false -> true = true
---------------------------------------
if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if lq (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case nat2(rank:15.)
=================================================
Progress: 1049


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 15.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:14.)
=================================================
Progress: 1050


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((Nil)) ((Nil))) = match (tf6 ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 1051


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2)))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 ((nat2::nat_list2)) ((nat2::nat_list2))) = match (tf6 ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), nat1 = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (nat1) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list1) (nat_list1))) = true -> tf4 (match (nat1) with
| true -> plus (nat1) (SUCC (nat1))
| false -> nat1) (tf1 (nat_list1) (nat_list1)) = match (tf6 (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) = true -> tf4 (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) = match (tf6 (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
ZERO = ZERO -> match (ZERO) with
| true -> false
| false -> true = true -> lq (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) = true -> if lq (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2))) then tf4 (match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO) (tf1 (nat_list2) (nat_list2)) else match (nat2) with
| true -> plus (match (ZERO) with
| true -> plus (ZERO) (SUCC (ZERO))
| false -> ZERO) (SUCC (ZERO))
| false -> ZERO = if if match (nat2) with
| true -> false
| false -> true then true else lq (match (tf6 (nat_list2)) with
| Tuple2 _ b -> b) (match (tf6 (nat_list2)) with
| Tuple2 a _ -> a) then fst2 (tf6 (nat_list2)) else plus (SUCC (ZERO)) (fst2 (tf6 (nat_list2)))

1 goal(s) more...

1 conjecture(s) more...
