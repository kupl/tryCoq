Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nat list), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), tsum (tri (nat_list1)) = match (triNew (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), tsum (tri (nat_list1)) = match (triNew (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
tsum (tri ((Nil))) = match (triNew ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
tsum (tri ((Nil))) = match (triNew ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tsum (tri (nat_list2)) = match (triNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tsum (tri ((nat1::nat_list2))) = match (triNew ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tsum (tri (nat_list2)) = match (triNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tsum (tri ((nat1::nat_list2))) = match (triNew ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tsum (tri (nat_list2)) = match (triNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tsum (tf3 (tri (nat_list2))) = plus (match (triNew (nat_list2)) with
| Tuple2 a _ -> a) (match (triNew (nat_list2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:3.)
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tsum (tri (nat_list2)) = match (triNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tsum (tf3 (tri (nat_list2))) = plus (match (triNew (nat_list2)) with
| Tuple2 a _ -> a) (match (triNew (nat_list2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tsum (tri (nat_list2)) = match (triNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tsum (tf3 (tri (nat_list2))) = plus (tsum (tri (nat_list2))) (match (triNew (nat_list2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: tsum (tf3 (Pnil)) = plus (tsum (Pnil)) (match (triNew ((Nil))) with
| Tuple2 _ b -> b)
Prop: tsum (tf3 (Pnil)) = plus (tsum (Pnil)) (match (triNew ((Nil))) with
| Tuple2 _ b -> b)
Prop: tsum (tf3 (Pnil)) = plus (tsum (Pnil)) (match (triNew ((Nil))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: tsum (tf3 (tri ((Nil)))) = plus (match (triNew ((Nil))) with
| Tuple2 a _ -> a) (match (triNew ((Nil))) with
| Tuple2 _ b -> b)
Prop: tsum (tf3 (tri ((SUCC (ZERO)::(ZERO::(Nil)))))) = plus (match (triNew ((SUCC (ZERO)::(ZERO::(Nil))))) with
| Tuple2 a _ -> a) (match (triNew ((SUCC (ZERO)::(ZERO::(Nil))))) with
| Tuple2 _ b -> b)
Prop: tsum (tf3 (tri ((Nil)))) = plus (match (triNew ((Nil))) with
| Tuple2 a _ -> a) (match (triNew ((Nil))) with
| Tuple2 _ b -> b)
Lemma List
forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tsum (tri (nat_list2)) = match (triNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tsum (tf3 (tri (nat_list2))) = plus (tsum (tri (nat_list2))) (match (triNew (nat_list2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : tsum (tri (nat_list2)) = match (triNew (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
tsum (tf3 (tri (nat_list2))) = plus (tsum (tri (nat_list2))) (match (triNew (nat_list2)) with
| Tuple2 _ b -> b)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)(rank : 0.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:14.)
induction plist1(rank:14.)
=================================================
Progress: 8


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (plist1:plist), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew ((Nil))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 9


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (plist1:plist), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew ((Nil))) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (plist1:plist), tsum (tf3 (plist1)) = plus (tsum (plist1)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction plist1(rank:7.)
=================================================
Progress: 10


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (plist1:plist), tsum (tf3 (plist1)) = plus (tsum (plist1)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction plist1(rank : 7.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
plist1 : plist
Base2 : plist1 = Pnil
---------------------------------------
tsum (tf3 (Pnil)) = plus (tsum (Pnil)) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 11


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
plist1 : plist
Base2 : plist1 = Pnil
---------------------------------------
tsum (tf3 (Pnil)) = plus (tsum (Pnil)) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
plist1 : plist
nat1 : nat
nat2 : nat
plist2 : plist
IH1 : tsum (tf3 (plist2)) = plus (tsum (plist2)) (ZERO)
Inductive1 : plist1 = Pcons (nat1) (nat2) (plist2)
---------------------------------------
tsum (tf3 (Pcons (nat1) (nat2) (plist2))) = plus (tsum (Pcons (nat1) (nat2) (plist2))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 12


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
plist1 : plist
nat1 : nat
nat2 : nat
plist2 : plist
IH1 : tsum (tf3 (plist2)) = plus (tsum (plist2)) (ZERO)
Inductive1 : plist1 = Pcons (nat1) (nat2) (plist2)
---------------------------------------
tsum (tf3 (Pcons (nat1) (nat2) (plist2))) = plus (tsum (Pcons (nat1) (nat2) (plist2))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
plist1 : plist
nat1 : nat
nat2 : nat
plist2 : plist
IH1 : tsum (tf3 (plist2)) = plus (tsum (plist2)) (ZERO)
Inductive1 : plist1 = Pcons (nat1) (nat2) (plist2)
---------------------------------------
plus (times (plus (nat1) (SUCC (ZERO))) (nat2)) (tsum (tf3 (plist2))) = plus (plus (times (nat1) (nat2)) (tsum (plist2))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 13


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
plist1 : plist
nat1 : nat
nat2 : nat
plist2 : plist
IH1 : tsum (tf3 (plist2)) = plus (tsum (plist2)) (ZERO)
Inductive1 : plist1 = Pcons (nat1) (nat2) (plist2)
---------------------------------------
plus (times (plus (nat1) (SUCC (ZERO))) (nat2)) (tsum (tf3 (plist2))) = plus (plus (times (nat1) (nat2)) (tsum (plist2))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
plist1 : plist
nat1 : nat
nat2 : nat
plist2 : plist
IH1 : tsum (tf3 (plist2)) = plus (tsum (plist2)) (ZERO)
Inductive1 : plist1 = Pcons (nat1) (nat2) (plist2)
---------------------------------------
plus (times (plus (nat1) (SUCC (ZERO))) (nat2)) (plus (tsum (plist2)) (ZERO)) = plus (plus (times (nat1) (nat2)) (tsum (plist2))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: plus (times (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = plus (plus (times (SUCC (ZERO)) (ZERO)) (SUCC (ZERO))) (ZERO)
Prop: plus (times (plus (ZERO) (SUCC (ZERO))) (ZERO)) (plus (ZERO) (ZERO)) = plus (plus (times (ZERO) (ZERO)) (ZERO)) (ZERO)
Prop: plus (times (plus (ZERO) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = plus (plus (times (ZERO) (ZERO)) (SUCC (ZERO))) (ZERO)
previous tactics
simpl in goal
parent
plus (nat1) (SUCC (ZERO))
lower
plus(_, SUCC(ZERO()))
upper
plus(times(_, nat2), tsum(tf3(plist2)))
remove upper
plus(nat1, SUCC(ZERO()))
remove lower
plus(nat1, SUCC(ZERO()))
remove upper
plus(nat1, SUCC(ZERO()))
remove lower
plus(nat1, SUCC(ZERO()))
remove upper
plus(nat1, SUCC(ZERO()))
remove lower
plus(nat1, SUCC(ZERO()))
parent
times (nat1) (nat2)
lower
times(_, nat2)
upper
plus(plus(_, tsum(plist2)), ZERO())
remove upper
times(nat1, nat2)
remove lower
times(nat1, nat2)
remove upper
times(nat1, nat2)
remove lower
times(nat1, nat2)
remove upper
times(nat1, nat2)
remove lower
times(nat1, nat2)
validate generalize_common_subterm_goal
Prop: plus (times (plus (ZERO) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (tsum (tf3 (Pcons (ZERO) (ZERO) (Pnil)))) = plus (plus (times (ZERO) (SUCC (SUCC (ZERO)))) (tsum (Pcons (ZERO) (ZERO) (Pnil)))) (ZERO)
Prop: plus (times (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))) (tsum (tf3 (Pcons (ZERO) (SUCC (ZERO)) (Pnil)))) = plus (plus (times (ZERO) (SUCC (ZERO))) (tsum (Pcons (ZERO) (SUCC (ZERO)) (Pnil)))) (ZERO)
Prop: plus (times (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))) (tsum (tf3 (Pnil))) = plus (plus (times (ZERO) (SUCC (ZERO))) (tsum (Pnil))) (ZERO)
asdf
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
End of Lemma List


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
plist1 : plist
nat1 : nat
nat2 : nat
plist2 : plist
IH1 : tsum (tf3 (plist2)) = plus (tsum (plist2)) (ZERO)
Inductive1 : plist1 = Pcons (nat1) (nat2) (plist2)
---------------------------------------
plus (times (plus (nat1) (SUCC (ZERO))) (nat2)) (plus (tsum (plist2)) (ZERO)) = plus (plus (times (nat1) (nat2)) (tsum (plist2))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 14


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
plist1 : plist
nat1 : nat
nat2 : nat
plist2 : plist
IH1 : tsum (tf3 (plist2)) = plus (tsum (plist2)) (ZERO)
Inductive1 : plist1 = Pcons (nat1) (nat2) (plist2)
---------------------------------------
plus (times (plus (nat1) (SUCC (ZERO))) (nat2)) (plus (tsum (plist2)) (ZERO)) = plus (plus (times (nat1) (nat2)) (tsum (plist2))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 15


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (ZERO) (ZERO)) = plus (plus (times (nat2) (nat3)) (ZERO)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 16


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (ZERO) (ZERO)) = plus (plus (times (nat2) (nat3)) (ZERO)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (ZERO) = plus (plus (times (nat2) (nat3)) (ZERO)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:9.)
=================================================
Progress: 17


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (ZERO) = plus (plus (times (nat2) (nat3)) (ZERO)) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), plus (times (plus (ZERO) (SUCC (ZERO))) (nat3)) (ZERO) = plus (plus (times (ZERO) (nat3)) (ZERO)) (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 18


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), plus (times (plus (ZERO) (SUCC (ZERO))) (nat3)) (ZERO) = plus (plus (times (ZERO) (nat3)) (ZERO)) (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), plus (nat3) (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat3(rank:10.)
=================================================
Progress: 19


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
forall (nat3:nat), plus (nat3) (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> induction nat3(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
nat3 : nat
Base3 : nat3 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 20


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
nat3 : nat
Base3 : nat3 = ZERO
---------------------------------------
plus (ZERO) (ZERO) = ZERO

3 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
nat3 : nat
nat4 : nat
IH1 : plus (nat4) (ZERO) = ZERO
Inductive1 : nat3 = SUCC (nat4)
---------------------------------------
plus (SUCC (nat4)) (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 21


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
nat3 : nat
nat4 : nat
IH1 : plus (nat4) (ZERO) = ZERO
Inductive1 : nat3 = SUCC (nat4)
---------------------------------------
plus (SUCC (nat4)) (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
nat3 : nat
nat4 : nat
IH1 : plus (nat4) (ZERO) = ZERO
Inductive1 : nat3 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (ZERO)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 22


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
nat3 : nat
nat4 : nat
IH1 : plus (nat4) (ZERO) = ZERO
Inductive1 : nat3 = SUCC (nat4)
---------------------------------------
SUCC (plus (nat4) (ZERO)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), plus (times (plus (nat2) (SUCC (ZERO))) (nat3)) (plus (nat1) (ZERO)) = plus (plus (times (nat2) (nat3)) (nat1)) (ZERO)
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
nat3 : nat
nat4 : nat
IH1 : plus (nat4) (ZERO) = ZERO
Inductive1 : nat3 = SUCC (nat4)
---------------------------------------
SUCC (ZERO) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
Prop: SUCC (plus (ZERO) (ZERO)) = ZERO
asdf
=================================================
Progress: 23


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)

---------------------------------------
forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

1 conjecture(s) more...
>>> induction plist1(rank : 14.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
---------------------------------------
forall (nat_list1:nat list), tsum (tf3 (Pnil)) = plus (tsum (Pnil)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 24


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
---------------------------------------
forall (nat_list1:nat list), tsum (tf3 (Pnil)) = plus (tsum (Pnil)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
---------------------------------------
forall (nat_list1:nat list), ZERO = match (triNew (nat_list1)) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:7.)
=================================================
Progress: 25


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
---------------------------------------
forall (nat_list1:nat list), ZERO = match (triNew (nat_list1)) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 7.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = match (triNew ((Nil))) with
| Tuple2 _ b -> b

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 26


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
ZERO = match (triNew ((Nil))) with
| Tuple2 _ b -> b

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
ZERO = match (triNew ((nat1::nat_list2))) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 27


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
ZERO = match (triNew ((nat1::nat_list2))) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
ZERO = plus (match (triNew (nat_list2)) with
| Tuple2 _ b -> b) (nat1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 28


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
ZERO = plus (match (triNew (nat_list2)) with
| Tuple2 _ b -> b) (nat1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 14.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (triNew (nat_list2)) with
| Tuple2 _ b -> b = plus (match (triNew (nat_list2)) with
| Tuple2 _ b -> b) (nat1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
Prop: 6 = plus (6) (SUCC (ZERO))
Prop: 0 = plus (0) (ZERO)
Prop: 5 = plus (5) (ZERO)
validate generalize_common_subterm_goal
Prop: 0 = plus (0) (ZERO)
Prop: 5 = plus (5) (ZERO)
Prop: 0 = plus (0) (ZERO)
Prop: match (triNew ((SUCC (ZERO)::(Nil)))) with
| Tuple2 _ b -> b = plus (match (triNew ((SUCC (ZERO)::(Nil)))) with
| Tuple2 _ b -> b) (ZERO)
Prop: match (triNew ((Nil))) with
| Tuple2 _ b -> b = plus (match (triNew ((Nil))) with
| Tuple2 _ b -> b) (ZERO)
Prop: match (triNew ((Nil))) with
| Tuple2 _ b -> b = plus (match (triNew ((Nil))) with
| Tuple2 _ b -> b) (SUCC (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
parent
plus (match (triNew (nat_list2)) with
| Tuple2 _ b -> b) (nat1)
lower
plus(_, _)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: ZERO = plus (match (triNew ((Nil))) with
| Tuple2 _ b -> b) (ZERO)
Prop: ZERO = plus (match (triNew ((ZERO::(Nil)))) with
| Tuple2 _ b -> b) (SUCC (ZERO))
Prop: ZERO = plus (match (triNew ((SUCC (SUCC (ZERO))::(Nil)))) with
| Tuple2 _ b -> b) (ZERO)
asdf
=================================================
Progress: 29


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
ZERO = plus (match (triNew (nat_list2)) with
| Tuple2 _ b -> b) (nat1)

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 14.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
ZERO = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 30


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
ZERO = plus (ZERO) (nat1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
ZERO = nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:6.)
=================================================
Progress: 31


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
ZERO = nat1

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 6.)


1st goal of : forall (plist1:plist) (nat_list1:nat list), tsum (tf3 (plist1)) = plus (tsum (plist1)) (match (triNew (nat_list1)) with
| Tuple2 _ b -> b)
plist1 : plist
Base1 : plist1 = Pnil
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : ZERO = match (triNew (nat_list2)) with
| Tuple2 _ b -> b
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (triNew (nat_list2)) with
| Tuple2 _ b -> b = nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: match (triNew ((SUCC (ZERO)::(SUCC (ZERO)::(Nil))))) with
| Tuple2 _ b -> b = SUCC (SUCC (SUCC (ZERO)))
Prop: match (triNew ((Nil))) with
| Tuple2 _ b -> b = ZERO
Prop: match (triNew ((Nil))) with
| Tuple2 _ b -> b = ZERO
asdf
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = SUCC (SUCC (ZERO))
Prop: ZERO = ZERO
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 283, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
