Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nat list), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((Nil)) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)

---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((Nil)) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction nat_list1(rank : 4.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (tf1 (tf5 ((Nil)) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
match (tf1 (tf5 ((Nil)) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((Nil)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (tf1 (tf5 ((Nil)) ((nat1::nat_list2)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((Nil)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (tf1 (tf5 ((Nil)) ((nat1::nat_list2)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) ((nat1::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((Nil)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: match (tf1 (tf5 ((SUCC (SUCC (ZERO))::(Nil))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (SUCC (SUCC (ZERO))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (ZERO))) ((Nil))) with
| Tuple2 a _ -> a
Prop: match (tf1 (tf5 ((ZERO::(Nil))) ((ZERO::(Nil))))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO))) ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Prop: match (tf1 (tf5 ((ZERO::(Nil))) ((ZERO::(Nil))))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO))) ((ZERO::(Nil)))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((Nil)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 6


1st goal of : forall (nat_list1:nat list), main (nat_list1) = mainNew (nat_list1)
nat_list1 : nat list
nat1 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((Nil)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat1::nat_list2)
---------------------------------------
match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction nat_list1(rank:14.)
=================================================
Progress: 7


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 8


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list1(rank:7.)
=================================================
Progress: 9


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list1)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 7.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (tf1 (tf5 ((ZERO::(Nil))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 10


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
Base2 : nat_list1 = (Nil)
---------------------------------------
match (tf1 (tf5 ((ZERO::(Nil))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) ((Nil))) with
| Tuple2 a _ -> a

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((ZERO::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (tf1 (tf5 ((ZERO::(Nil))) ((nat2::nat_list2)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 11


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((ZERO::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (tf1 (tf5 ((ZERO::(Nil))) ((nat2::nat_list2)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) ((nat2::nat_list2))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((ZERO::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat2) (ZERO)) (plus (nat2) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: match (tf1 (tf5 ((ZERO::(SUCC (ZERO)::(Nil)))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO))) ((Nil))) with
| Tuple2 a _ -> a
Prop: match (tf1 (tf5 ((ZERO::(SUCC (ZERO)::(Nil)))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO))) ((Nil))) with
| Tuple2 a _ -> a
Prop: match (tf1 (tf5 ((ZERO::(ZERO::(Nil)))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO))) ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((ZERO::(nat1::(Nil)))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((ZERO::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat2) (ZERO)) (plus (nat2) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat1 : nat
Base1 : nat1 = ZERO
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : match (tf1 (tf5 ((ZERO::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (ZERO) (ZERO)) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat2) (ZERO)) (plus (nat2) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((ZERO::(nat1::(Nil)))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a(rank : 0.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((ZERO::(nat1::(Nil)))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((ZERO::(nat1::(Nil)))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat_list1(rank:16.)
=================================================
Progress: 13


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

---------------------------------------
forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 14


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) ((Nil))) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) ((nat2::nat_list2)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 15


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) ((nat2::nat_list2)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) ((nat2::nat_list2))) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), match (tf1 (tf5 ((nat1::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat1) (ZERO)) (plus (nat2) (plus (nat1) (ZERO))) then plus (nat1) (ZERO) else plus (nat2) (plus (nat1) (ZERO))) (plus (nat2) (plus (nat1) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 16


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
---------------------------------------
forall (nat1:nat), match (tf1 (tf5 ((nat1::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat1) (ZERO)) (plus (nat2) (plus (nat1) (ZERO))) then plus (nat1) (ZERO) else plus (nat2) (plus (nat1) (ZERO))) (plus (nat2) (plus (nat1) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (ZERO) (ZERO)) (plus (nat2) (plus (ZERO) (ZERO))) then plus (ZERO) (ZERO) else plus (nat2) (plus (ZERO) (ZERO))) (plus (nat2) (plus (ZERO) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 17


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (ZERO) (ZERO)) (plus (nat2) (plus (ZERO) (ZERO))) then plus (ZERO) (ZERO) else plus (nat2) (plus (ZERO) (ZERO))) (plus (nat2) (plus (ZERO) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat2) (ZERO)) (plus (nat2) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 18


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat2) (ZERO)) (plus (nat2) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((nat2::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(Nil))))) ((SUCC (ZERO)::(ZERO::(Nil)))))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((ZERO::(ZERO::(Nil)))) ((SUCC (ZERO)::(ZERO::(Nil)))))) with
| Tuple2 _ b -> b
Prop: match (tf1 (tf5 ((ZERO::(SUCC (ZERO)::(Nil)))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((SUCC (ZERO)::(Nil))) ((Nil)))) with
| Tuple2 _ b -> b
Prop: match (tf1 (tf5 ((ZERO::(Nil))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((Nil)) ((Nil)))) with
| Tuple2 _ b -> b
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: match (tf1 (tf5 ((ZERO::(ZERO::(Nil)))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO))) ((Nil))) with
| Tuple2 a _ -> a
Prop: match (tf1 (tf5 ((ZERO::(ZERO::(Nil)))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO))) ((Nil))) with
| Tuple2 a _ -> a
Prop: match (tf1 (tf5 ((ZERO::(ZERO::(Nil)))) ((Nil)))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO))) ((Nil))) with
| Tuple2 a _ -> a
Lemma List
forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
End of Lemma List


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((nat2::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 19


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((nat2::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b(rank : 0.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:8.)
=================================================
Progress: 20


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat_list2(rank : 8.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) ((Nil)))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) ((Nil)))) with
| Tuple2 _ b -> b

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 21


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) ((Nil)))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) ((Nil)))) with
| Tuple2 _ b -> b

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list3))) with
| Tuple2 _ b -> b
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) ((nat1::nat_list3)))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) ((nat1::nat_list3)))) with
| Tuple2 _ b -> b

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 22


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list3))) with
| Tuple2 _ b -> b
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) ((nat1::nat_list3)))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) ((nat1::nat_list3)))) with
| Tuple2 _ b -> b

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list3))) with
| Tuple2 _ b -> b
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::tf3 (nat1) (nat_list1))) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (tf3 (nat1) (nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite IH1 in goal at 0(rank:15.)
induction nat_list1(rank:16.)
rewrite <- IH1 in goal at 2(rank:15.)
rewrite <- IH1 in goal at 0(rank:23.)
rewrite <- IH1 in goal at 1(rank:23.)
=================================================
Progress: 23


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list3))) with
| Tuple2 _ b -> b
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::tf3 (nat1) (nat_list1))) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (tf3 (nat1) (nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list3))) with
| Tuple2 _ b -> b
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 (tf3 (nat1) (nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (tf3 (nat1) (nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 24


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list3))) with
| Tuple2 _ b -> b
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), match (tf1 (tf5 (tf3 (nat1) (nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (tf3 (nat1) (nat_list1)) (nat_list3))) with
| Tuple2 _ b -> b

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((nat2::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
lemma
forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
tactics
assert forall (nat_list1:nat list) (nat_list2:nat list), match (tf1 (tf5 ((ZERO::nat_list1)) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 (nat_list1) (nat_list2))) with
| Tuple2 _ b -> b
induction nat_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 4
Tactic List : 4
rewrite lemma3 in goal at 0(rank:14.)
rewrite <- lemma3 in goal at 0(rank:22.)
rewrite <- lemma3 in goal at 2(rank:14.)
rewrite <- lemma3 in goal at 1(rank:22.)
=================================================
Progress: 25


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((ZERO::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((nat2::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 14.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((nat2::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((nat2::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 26


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
match (tf1 (tf5 ((nat2::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf1 (tf5 ((nat2::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
---------------------------------------
match (tf1 (tf5 ((SUCC (nat3)::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (SUCC (nat3)) (ZERO)) (plus (nat2) (plus (SUCC (nat3)) (ZERO))) then plus (SUCC (nat3)) (ZERO) else plus (nat2) (plus (SUCC (nat3)) (ZERO))) (plus (nat2) (plus (SUCC (nat3)) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 3
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 27


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
---------------------------------------
match (tf1 (tf5 ((SUCC (nat3)::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (SUCC (nat3)) (ZERO)) (plus (nat2) (plus (SUCC (nat3)) (ZERO))) then plus (SUCC (nat3)) (ZERO) else plus (nat2) (plus (SUCC (nat3)) (ZERO))) (plus (nat2) (plus (SUCC (nat3)) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
---------------------------------------
match (tf1 (tf5 ((SUCC (nat3)::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) then plus (SUCC (nat3)) (ZERO) else plus (nat2) (plus (SUCC (nat3)) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))(rank:6.)
rewrite <- lemma3 in goal at 0(rank:13.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
---------------------------------------
match (tf1 (tf5 ((SUCC (nat3)::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) then plus (SUCC (nat3)) (ZERO) else plus (nat2) (plus (SUCC (nat3)) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

0 goal(s) more...

1 conjecture(s) more...
>>> case gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((SUCC (nat3)::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 29


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((SUCC (nat3)::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(SUCC (nat3)::(nat2::(Nil))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 30


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(SUCC (nat3)::(nat2::(Nil))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 32


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 33


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 34


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 35


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 38


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 39


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 40


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 41


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 42


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 43


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:6.)
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil))))))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 6.)


1st goal of : forall (nat1:nat) (nat_list1:nat list), match (tf1 (tf5 ((nat1::(Nil))) (nat_list1))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list1)) with
| Tuple2 a _ -> a
nat_list1 : nat list
nat2 : nat
nat_list2 : nat list
IH1 : forall (nat1:nat), match (tf1 (tf5 ((nat1::(Nil))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive1 : nat_list1 = (nat2::nat_list2)
nat1 : nat
nat3 : nat
IH2 : match (tf1 (tf5 ((nat3::(nat2::(Nil)))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (if gq (plus (nat3) (ZERO)) (plus (nat2) (plus (nat3) (ZERO))) then plus (nat3) (ZERO) else plus (nat2) (plus (nat3) (ZERO))) (plus (nat2) (plus (nat3) (ZERO)))) (nat_list2)) with
| Tuple2 a _ -> a
Inductive2 : nat1 = SUCC (nat3)
Case1 : gq (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO)))) = true
---------------------------------------
match (tf1 (tf5 ((ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(ZERO::(SUCC (nat3)::(nat2::(Nil)))))))))))))))))))))) (nat_list2))) with
| Tuple2 _ b -> b = match (tf7 (Tuple2 (SUCC (plus (nat3) (ZERO))) (plus (nat2) (SUCC (plus (nat3) (ZERO))))) (nat_list2)) with
| Tuple2 a _ -> a

1 goal(s) more...

1 conjecture(s) more...
