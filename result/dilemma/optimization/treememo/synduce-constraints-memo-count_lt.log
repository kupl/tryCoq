Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:treememo), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)

---------------------------------------
forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)

---------------------------------------
forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)

---------------------------------------
forall (treememo1:treememo), if ismemo (treememo1) then spec (repr (target (treememo1))) else ZERO = if ismemo (treememo1) then memo (treememo1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro treememo1(rank:3.)
=================================================
Progress: 3


1st goal of : forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)

---------------------------------------
forall (treememo1:treememo), if ismemo (treememo1) then spec (repr (target (treememo1))) else ZERO = if ismemo (treememo1) then memo (treememo1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> intro treememo1(rank : 3.)


1st goal of : forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)
treememo1 : treememo
---------------------------------------
if ismemo (treememo1) then spec (repr (target (treememo1))) else ZERO = if ismemo (treememo1) then memo (treememo1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case ismemo (treememo1)(rank:4.)
=================================================
Progress: 4


1st goal of : forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)
treememo1 : treememo
---------------------------------------
if ismemo (treememo1) then spec (repr (target (treememo1))) else ZERO = if ismemo (treememo1) then memo (treememo1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> case ismemo (treememo1)(rank : 4.)


1st goal of : forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)
treememo1 : treememo
Case1 : ismemo (treememo1) = true
---------------------------------------
spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (repr (match (Mleaf (SUCC (ZERO)) (SUCC (ZERO))) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (ZERO)) (SUCC (ZERO)) else Mleaf (SUCC (ZERO)) (SUCC (ZERO))
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (ZERO)) (SUCC (ZERO)) else Mleaf (SUCC (ZERO)) (SUCC (ZERO)))) = match (Mleaf (SUCC (ZERO)) (SUCC (ZERO))) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
Prop: spec (repr (match (Mleaf (SUCC (ZERO)) (ZERO)) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (ZERO)) (ZERO) else Mleaf (SUCC (ZERO)) (ZERO)
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (ZERO)) (ZERO) else Mleaf (SUCC (ZERO)) (ZERO))) = match (Mleaf (SUCC (ZERO)) (ZERO)) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
Prop: spec (repr (match (Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mleaf (ZERO) (SUCC (ZERO)))) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mleaf (ZERO) (SUCC (ZERO))) else Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mleaf (ZERO) (SUCC (ZERO)))
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mleaf (ZERO) (SUCC (ZERO))) else Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mleaf (ZERO) (SUCC (ZERO))))) = match (Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mleaf (ZERO) (SUCC (ZERO)))) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
Lemma List
forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
End of Lemma List


1st goal of : forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)
treememo1 : treememo
Case1 : ismemo (treememo1) = true
---------------------------------------
spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 5


1st goal of : forall (treememo1:treememo), main (treememo1) = mainNew (treememo1)
treememo1 : treememo
Case1 : ismemo (treememo1) = true
---------------------------------------
spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1(rank : 0.)


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

---------------------------------------
forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro treememo1(rank:5.)
=================================================
Progress: 6


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

---------------------------------------
forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

1 conjecture(s) more...
>>> intro treememo1(rank : 5.)


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
treememo1 : treememo
---------------------------------------
ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 7


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
treememo1 : treememo
---------------------------------------
ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
treememo1 : treememo
Cond1 : ismemo (treememo1) = true
---------------------------------------
spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (repr (match (Mleaf (SUCC (ZERO)) (SUCC (ZERO))) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (ZERO)) (SUCC (ZERO)) else Mleaf (SUCC (ZERO)) (SUCC (ZERO))
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (ZERO)) (SUCC (ZERO)) else Mleaf (SUCC (ZERO)) (SUCC (ZERO)))) = match (Mleaf (SUCC (ZERO)) (SUCC (ZERO))) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
Prop: spec (repr (match (Mleaf (SUCC (SUCC (ZERO))) (ZERO)) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (SUCC (ZERO))) (ZERO) else Mleaf (SUCC (SUCC (ZERO))) (ZERO)
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (SUCC (ZERO))) (ZERO) else Mleaf (SUCC (SUCC (ZERO))) (ZERO))) = match (Mleaf (SUCC (SUCC (ZERO))) (ZERO)) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
Prop: spec (repr (match (Mleaf (ZERO) (ZERO)) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (ZERO) (ZERO) else Mleaf (ZERO) (ZERO)
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (ZERO) (ZERO) else Mleaf (ZERO) (ZERO))) = match (Mleaf (ZERO) (ZERO)) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
Lemma List
forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
End of Lemma List


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
treememo1 : treememo
Cond1 : ismemo (treememo1) = true
---------------------------------------
spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
treememo1 : treememo
Cond1 : ismemo (treememo1) = true
---------------------------------------
spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1(rank : 0.)


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

---------------------------------------
forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro treememo1(rank:7.)
=================================================
Progress: 9


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

---------------------------------------
forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

2 conjecture(s) more...
>>> intro treememo1(rank : 7.)


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
treememo1 : treememo
---------------------------------------
ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 10


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
treememo1 : treememo
---------------------------------------
ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (treememo1:treememo), ismemo (treememo1) = true -> spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
treememo1 : treememo
Cond1 : ismemo (treememo1) = true
---------------------------------------
spec (repr (match (treememo1) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then treememo1 else treememo1)) = match (treememo1) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (repr (match (Mleaf (SUCC (SUCC (ZERO))) (ZERO)) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (SUCC (ZERO))) (ZERO) else Mleaf (SUCC (SUCC (ZERO))) (ZERO)
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (SUCC (SUCC (ZERO))) (ZERO) else Mleaf (SUCC (SUCC (ZERO))) (ZERO))) = match (Mleaf (SUCC (SUCC (ZERO))) (ZERO)) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
Prop: spec (repr (match (Mnode (SUCC (SUCC (ZERO))) (ZERO) (Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mnode (ZERO) (SUCC (ZERO)) (Mleaf (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (Mleaf (ZERO) (ZERO)))) (Mleaf (ZERO) (ZERO))) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mnode (SUCC (SUCC (ZERO))) (ZERO) (Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mnode (ZERO) (SUCC (ZERO)) (Mleaf (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (Mleaf (ZERO) (ZERO)))) (Mleaf (ZERO) (ZERO)) else Mnode (SUCC (SUCC (ZERO))) (ZERO) (Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mnode (ZERO) (SUCC (ZERO)) (Mleaf (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (Mleaf (ZERO) (ZERO)))) (Mleaf (ZERO) (ZERO))
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mnode (SUCC (SUCC (ZERO))) (ZERO) (Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mnode (ZERO) (SUCC (ZERO)) (Mleaf (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (Mleaf (ZERO) (ZERO)))) (Mleaf (ZERO) (ZERO)) else Mnode (SUCC (SUCC (ZERO))) (ZERO) (Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mnode (ZERO) (SUCC (ZERO)) (Mleaf (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (Mleaf (ZERO) (ZERO)))) (Mleaf (ZERO) (ZERO)))) = match (Mnode (SUCC (SUCC (ZERO))) (ZERO) (Mnode (ZERO) (ZERO) (Mleaf (ZERO) (ZERO)) (Mnode (ZERO) (SUCC (ZERO)) (Mleaf (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (Mleaf (ZERO) (ZERO)))) (Mleaf (ZERO) (ZERO))) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
Prop: spec (repr (match (Mleaf (ZERO) (ZERO)) with
| Mleaf n1 n2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (ZERO) (ZERO) else Mleaf (ZERO) (ZERO)
| Mnode n1 n2 l1 l2 -> if lq (n2) (SUCC (SUCC (ZERO))) then Mleaf (ZERO) (ZERO) else Mleaf (ZERO) (ZERO))) = match (Mleaf (ZERO) (ZERO)) with
| Mleaf n1 n2 -> n1
| Mnode n1 n2 t1 t2 -> n1
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
