Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:nlist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (nlist1:nlist), main (nlist1) = mainNew (nlist1)

---------------------------------------
forall (nlist1:nlist), main (nlist1) = mainNew (nlist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (nlist1:nlist), main (nlist1) = mainNew (nlist1)

---------------------------------------
forall (nlist1:nlist), main (nlist1) = mainNew (nlist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (nlist1:nlist), main (nlist1) = mainNew (nlist1)

---------------------------------------
forall (nlist1:nlist), z = x

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro nlist1(rank:3.)
=================================================
Progress: 3


1st goal of : forall (nlist1:nlist), main (nlist1) = mainNew (nlist1)

---------------------------------------
forall (nlist1:nlist), z = x

0 goal(s) more...

0 conjecture(s) more...
>>> intro nlist1(rank : 3.)


1st goal of : forall (nlist1:nlist), main (nlist1) = mainNew (nlist1)
nlist1 : nlist
---------------------------------------
z = x

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 283, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
