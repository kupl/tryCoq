Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:clist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), if isparti (clist1) then spec (repr (target (clist1))) else ZERO = if isparti (clist1) then targetNew (clist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction clist1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), if isparti (clist1) then spec (repr (target (clist1))) else ZERO = if isparti (clist1) then targetNew (clist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> induction clist1(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
if isparti (Single (nat1)) then spec (repr (target (Single (nat1)))) else ZERO = if isparti (Single (nat1)) then targetNew (Single (nat1)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 4


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
if isparti (Single (nat1)) then spec (repr (target (Single (nat1)))) else ZERO = if isparti (Single (nat1)) then targetNew (Single (nat1)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
max (ZERO) (nat1) = max (nat1) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: max (ZERO) (ZERO) = max (ZERO) (ZERO)
Prop: max (ZERO) (ZERO) = max (ZERO) (ZERO)
Prop: max (ZERO) (ZERO) = max (ZERO) (ZERO)
Lemma List
forall (nat1:nat), max (ZERO) (nat1) = max (nat1) (ZERO)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
max (ZERO) (nat1) = max (nat1) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 5


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
max (ZERO) (nat1) = max (nat1) (ZERO)

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat), max (ZERO) (nat1) = max (nat1) (ZERO)(rank : 0.)


1st goal of : forall (nat1:nat), max (ZERO) (nat1) = max (nat1) (ZERO)

---------------------------------------
forall (nat1:nat), max (ZERO) (nat1) = max (nat1) (ZERO)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 6


1st goal of : forall (nat1:nat), max (ZERO) (nat1) = max (nat1) (ZERO)

---------------------------------------
forall (nat1:nat), max (ZERO) (nat1) = max (nat1) (ZERO)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat), max (ZERO) (nat1) = max (nat1) (ZERO)
nat1 : nat
---------------------------------------
max (ZERO) (nat1) = max (nat1) (ZERO)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: max (ZERO) (ZERO) = max (ZERO) (ZERO)
Prop: max (ZERO) (SUCC (ZERO)) = max (SUCC (ZERO)) (ZERO)
Prop: max (ZERO) (ZERO) = max (ZERO) (ZERO)
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
