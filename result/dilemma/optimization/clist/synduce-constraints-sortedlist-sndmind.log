Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:clist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), if match (repr (clist1)) with
| Two n1 n2 -> gq (n1) (n2)
| Tcons n tl -> tf7 (n) (tl) then spec (repr (target (clist1))) else ZERO = if match (repr (clist1)) with
| Two n1 n2 -> gq (n1) (n2)
| Tcons n tl -> tf7 (n) (tl) then targetNew (clist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction clist1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), if match (repr (clist1)) with
| Two n1 n2 -> gq (n1) (n2)
| Tcons n tl -> tf7 (n) (tl) then spec (repr (target (clist1))) else ZERO = if match (repr (clist1)) with
| Two n1 n2 -> gq (n1) (n2)
| Tcons n tl -> tf7 (n) (tl) then targetNew (clist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> induction clist1(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
nat2 : nat
Base1 : clist1 = Ctwo (nat1) (nat2)
---------------------------------------
if match (repr (Ctwo (nat1) (nat2))) with
| Two n1 n2 -> gq (n1) (n2)
| Tcons n tl -> tf7 (n) (tl) then spec (repr (target (Ctwo (nat1) (nat2)))) else ZERO = if match (repr (Ctwo (nat1) (nat2))) with
| Two n1 n2 -> gq (n1) (n2)
| Tcons n tl -> tf7 (n) (tl) then targetNew (Ctwo (nat1) (nat2)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:4.)
=================================================
Progress: 4


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
nat2 : nat
Base1 : clist1 = Ctwo (nat1) (nat2)
---------------------------------------
if match (repr (Ctwo (nat1) (nat2))) with
| Two n1 n2 -> gq (n1) (n2)
| Tcons n tl -> tf7 (n) (tl) then spec (repr (target (Ctwo (nat1) (nat2)))) else ZERO = if match (repr (Ctwo (nat1) (nat2))) with
| Two n1 n2 -> gq (n1) (n2)
| Tcons n tl -> tf7 (n) (tl) then targetNew (Ctwo (nat1) (nat2)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
nat2 : nat
Base1 : clist1 = Ctwo (nat1) (nat2)
---------------------------------------
if gq (nat1) (nat2) then spec (repr (target (Ctwo (nat1) (nat2)))) else ZERO = if gq (nat1) (nat2) then targetNew (Ctwo (nat1) (nat2)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (nat2)(rank:5.)
=================================================
Progress: 5


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
nat2 : nat
Base1 : clist1 = Ctwo (nat1) (nat2)
---------------------------------------
if gq (nat1) (nat2) then spec (repr (target (Ctwo (nat1) (nat2)))) else ZERO = if gq (nat1) (nat2) then targetNew (Ctwo (nat1) (nat2)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (nat2)(rank : 5.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
nat2 : nat
Base1 : clist1 = Ctwo (nat1) (nat2)
Case1 : gq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then nat2 else nat1 = nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (nat1) (nat2)(rank:6.)
=================================================
Progress: 6


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
nat2 : nat
Base1 : clist1 = Ctwo (nat1) (nat2)
Case1 : gq (nat1) (nat2) = true
---------------------------------------
if lq (nat1) (nat2) then nat2 else nat1 = nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (nat2)(rank : 6.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
nat2 : nat
Base1 : clist1 = Ctwo (nat1) (nat2)
Case1 : gq (nat1) (nat2) = true
Case2 : lq (nat1) (nat2) = true
---------------------------------------
nat2 = nat1

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case gq (nat1) (nat2)
case lq (nat1) (nat2)
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
nat2 : nat
Base1 : clist1 = Ctwo (nat1) (nat2)
Case1 : gq (nat1) (nat2) = true
Case2 : lq (nat1) (nat2) = true
---------------------------------------
nat2 = nat1

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 7


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
nat2 : nat
Base1 : clist1 = Ctwo (nat1) (nat2)
Case1 : gq (nat1) (nat2) = true
Case2 : lq (nat1) (nat2) = true
---------------------------------------
nat2 = nat1

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 8


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 9


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 10


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : gq (nat1) (nat2) = true
---------------------------------------
lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 11


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : gq (nat1) (nat2) = true
---------------------------------------
lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : gq (nat1) (nat2) = true
Cond2 : lq (nat1) (nat2) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : gq (nat1) (nat2) = true
Cond2 : lq (nat1) (nat2) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : gq (nat1) (nat2) = true
Cond2 : lq (nat1) (nat2) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 13


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 14


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 15


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : gq (nat1) (nat2) = true
---------------------------------------
lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 16


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : gq (nat1) (nat2) = true
---------------------------------------
lq (nat1) (nat2) = true -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), gq (nat1) (nat2) = true->lq (nat1) (nat2) = true -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : gq (nat1) (nat2) = true
Cond2 : lq (nat1) (nat2) = true
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))) = ZERO
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
