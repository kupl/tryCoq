Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:clist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), if ispart (clist1) then spec (repr (target (clist1))) else ZERO = if ispart (clist1) then targetNew (clist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction clist1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), if ispart (clist1) then spec (repr (target (clist1))) else ZERO = if ispart (clist1) then targetNew (clist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> induction clist1(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
if ispart (Single (nat1)) then spec (repr (target (Single (nat1)))) else ZERO = if ispart (Single (nat1)) then targetNew (Single (nat1)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
if ispart (Single (nat1)) then spec (repr (target (Single (nat1)))) else ZERO = if ispart (Single (nat1)) then targetNew (Single (nat1)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : if ispart (clist2) then spec (repr (target (clist2))) else ZERO = if ispart (clist2) then targetNew (clist2) else ZERO
IH2 : if ispart (clist3) then spec (repr (target (clist3))) else ZERO = if ispart (clist3) then targetNew (clist3) else ZERO
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
if ispart (Concats (clist2) (clist3)) then spec (repr (target (Concats (clist2) (clist3)))) else ZERO = if ispart (Concats (clist2) (clist3)) then targetNew (Concats (clist2) (clist3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : if ispart (clist2) then spec (repr (target (clist2))) else ZERO = if ispart (clist2) then targetNew (clist2) else ZERO
IH2 : if ispart (clist3) then spec (repr (target (clist3))) else ZERO = if ispart (clist3) then targetNew (clist3) else ZERO
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
if ispart (Concats (clist2) (clist3)) then spec (repr (target (Concats (clist2) (clist3)))) else ZERO = if ispart (Concats (clist2) (clist3)) then targetNew (Concats (clist2) (clist3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : if ispart (clist2) then spec (repr (target (clist2))) else ZERO = if ispart (clist2) then targetNew (clist2) else ZERO
IH2 : if ispart (clist3) then spec (repr (target (clist3))) else ZERO = if ispart (clist3) then targetNew (clist3) else ZERO
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
if if lq (lmax (clist2)) (lmin (clist3)) then if ispart (clist2) then ispart (clist3) else false else false then spec (repr (target (Concats (clist2) (clist3)))) else ZERO = if if lq (lmax (clist2)) (lmin (clist3)) then if ispart (clist2) then ispart (clist3) else false else false then targetNew (Concats (clist2) (clist3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (lmax (clist2)) (lmin (clist3))(rank:4.)
=================================================
Progress: 6


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : if ispart (clist2) then spec (repr (target (clist2))) else ZERO = if ispart (clist2) then targetNew (clist2) else ZERO
IH2 : if ispart (clist3) then spec (repr (target (clist3))) else ZERO = if ispart (clist3) then targetNew (clist3) else ZERO
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
if if lq (lmax (clist2)) (lmin (clist3)) then if ispart (clist2) then ispart (clist3) else false else false then spec (repr (target (Concats (clist2) (clist3)))) else ZERO = if if lq (lmax (clist2)) (lmin (clist3)) then if ispart (clist2) then ispart (clist3) else false else false then targetNew (Concats (clist2) (clist3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (lmax (clist2)) (lmin (clist3))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : if ispart (clist2) then spec (repr (target (clist2))) else ZERO = if ispart (clist2) then targetNew (clist2) else ZERO
IH2 : if ispart (clist3) then spec (repr (target (clist3))) else ZERO = if ispart (clist3) then targetNew (clist3) else ZERO
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
---------------------------------------
if if ispart (clist2) then ispart (clist3) else false then spec (repr (target (Concats (clist2) (clist3)))) else ZERO = if if ispart (clist2) then ispart (clist3) else false then targetNew (Concats (clist2) (clist3)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case ispart (clist2)(rank:5.)
=================================================
Progress: 7


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : if ispart (clist2) then spec (repr (target (clist2))) else ZERO = if ispart (clist2) then targetNew (clist2) else ZERO
IH2 : if ispart (clist3) then spec (repr (target (clist3))) else ZERO = if ispart (clist3) then targetNew (clist3) else ZERO
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
---------------------------------------
if if ispart (clist2) then ispart (clist3) else false then spec (repr (target (Concats (clist2) (clist3)))) else ZERO = if if ispart (clist2) then ispart (clist3) else false then targetNew (Concats (clist2) (clist3)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> case ispart (clist2)(rank : 5.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (tf13 (clist2) (clist2))) = targetNew (clist2)
IH2 : if ispart (clist3) then spec (repr (target (clist3))) else ZERO = if ispart (clist3) then targetNew (clist3) else ZERO
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
Case2 : ispart (clist2) = true
---------------------------------------
if ispart (clist3) then spec (repr (target (Concats (clist2) (clist3)))) else ZERO = if ispart (clist3) then targetNew (Concats (clist2) (clist3)) else ZERO

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case ispart (clist3)(rank:6.)
=================================================
Progress: 8


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (tf13 (clist2) (clist2))) = targetNew (clist2)
IH2 : if ispart (clist3) then spec (repr (target (clist3))) else ZERO = if ispart (clist3) then targetNew (clist3) else ZERO
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
Case2 : ispart (clist2) = true
---------------------------------------
if ispart (clist3) then spec (repr (target (Concats (clist2) (clist3)))) else ZERO = if ispart (clist3) then targetNew (Concats (clist2) (clist3)) else ZERO

2 goal(s) more...

0 conjecture(s) more...
>>> case ispart (clist3)(rank : 6.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (tf13 (clist2) (clist2))) = targetNew (clist2)
IH2 : spec (repr (tf13 (clist3) (clist3))) = targetNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
Case2 : ispart (clist2) = true
Case3 : ispart (clist3) = true
---------------------------------------
spec (tf1 (repr (clist3)) (repr (tf13 (clist2) (clist2)))) = targetNew (clist2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:6.)
=================================================
Progress: 9


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (tf13 (clist2) (clist2))) = targetNew (clist2)
IH2 : spec (repr (tf13 (clist3) (clist3))) = targetNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
Case2 : ispart (clist2) = true
Case3 : ispart (clist3) = true
---------------------------------------
spec (tf1 (repr (clist3)) (repr (tf13 (clist2) (clist2)))) = targetNew (clist2)

3 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 6.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (tf13 (clist2) (clist2))) = targetNew (clist2)
IH2 : spec (repr (tf13 (clist3) (clist3))) = targetNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
Case2 : ispart (clist2) = true
Case3 : ispart (clist3) = true
---------------------------------------
spec (tf1 (repr (clist3)) (repr (tf13 (clist2) (clist2)))) = spec (repr (tf13 (clist2) (clist2)))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (lmax (clist2)) (lmin (clist3))
case ispart (clist2)
case ispart (clist3)
rewrite <- IH1 in goal at 0
Prop: spec (tf1 (repr (Single (ZERO))) (Econs (ZERO) (Elt (ZERO)))) = spec (Econs (ZERO) (Elt (ZERO)))
Prop: spec (tf1 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (Econs (ZERO) (Elt (ZERO)))) = spec (Econs (ZERO) (Elt (ZERO)))
Prop: spec (tf1 (repr (Single (ZERO))) (Elt (ZERO))) = spec (Elt (ZERO))
validate generalize_common_subterm_goal
Prop: spec (tf1 (repr (Single (SUCC (ZERO)))) (Econs (SUCC (SUCC (ZERO))) (Elt (ZERO)))) = spec (Econs (SUCC (SUCC (ZERO))) (Elt (ZERO)))
Prop: spec (tf1 (repr (Single (ZERO))) (Econs (ZERO) (Elt (ZERO)))) = spec (Econs (ZERO) (Elt (ZERO)))
Prop: spec (tf1 (repr (Single (ZERO))) (Elt (ZERO))) = spec (Elt (ZERO))
Prop: tf1 (repr (Single (ZERO))) (repr (tf13 (Concats (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Single (SUCC (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))) (Single (ZERO))) (Concats (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Single (SUCC (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))) (Single (ZERO))))) = repr (tf13 (Concats (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Single (SUCC (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))) (Single (ZERO))) (Concats (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Single (SUCC (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))) (Single (ZERO))))
Prop: tf1 (repr (Single (SUCC (SUCC (ZERO))))) (repr (tf13 (Single (ZERO)) (Single (ZERO)))) = repr (tf13 (Single (ZERO)) (Single (ZERO)))
Prop: tf1 (repr (Single (ZERO))) (repr (tf13 (Single (SUCC (ZERO))) (Single (SUCC (ZERO))))) = repr (tf13 (Single (SUCC (ZERO))) (Single (SUCC (ZERO))))
Prop: spec (tf1 (repr (Single (SUCC (ZERO)))) (repr (tf13 (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Single (ZERO)) (Single (ZERO)))))) = spec (repr (tf13 (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Single (ZERO)) (Single (ZERO)))))
Prop: spec (tf1 (repr (Single (ZERO))) (repr (tf13 (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO)))))) = spec (repr (tf13 (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO)))))
Prop: spec (tf1 (repr (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) (repr (tf13 (Single (SUCC (SUCC (ZERO)))) (Single (SUCC (SUCC (ZERO))))))) = spec (repr (tf13 (Single (SUCC (SUCC (ZERO)))) (Single (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
case lq (lmax (clist2)) (lmin (clist3))
case ispart (clist2)
case ispart (clist3)
parent
tf13 (clist2) (clist2)
lower
tf13(_, _)
upper
spec(tf1(repr(clist3), repr(_)))
remove upper
tf13(clist2, clist2)
remove lower
tf13(_, _)
parent
targetNew (clist2)
lower
targetNew(_)
upper
_
remove upper
targetNew(clist3)
remove lower
targetNew(clist3)
remove upper
targetNew(clist2)
remove lower
targetNew(_)
remove upper
targetNew(clist4)
remove lower
targetNew(_)
remove upper
targetNew(clist6)
remove lower
targetNew(_)
validate generalize_common_subterm_goal
Prop: spec (tf1 (repr (Single (ZERO))) (repr (tf13 (Single (ZERO)) (Single (ZERO))))) = targetNew (Single (ZERO))
Prop: spec (tf1 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (repr (tf13 (Single (SUCC (ZERO))) (Single (SUCC (ZERO)))))) = targetNew (Single (SUCC (ZERO)))
Prop: spec (tf1 (repr (Concats (Single (SUCC (ZERO))) (Concats (Concats (Single (ZERO)) (Concats (Single (ZERO)) (Single (ZERO)))) (Concats (Single (SUCC (ZERO))) (Concats (Single (ZERO)) (Single (SUCC (ZERO)))))))) (repr (tf13 (Single (ZERO)) (Single (ZERO))))) = targetNew (Single (ZERO))
Lemma List
forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (tf13 (clist2) (clist2))) = targetNew (clist2)
IH2 : spec (repr (tf13 (clist3) (clist3))) = targetNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
Case2 : ispart (clist2) = true
Case3 : ispart (clist3) = true
---------------------------------------
spec (tf1 (repr (clist3)) (repr (tf13 (clist2) (clist2)))) = targetNew (clist2)

3 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (tf13 (clist2) (clist2))) = targetNew (clist2)
IH2 : spec (repr (tf13 (clist3) (clist3))) = targetNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
Case2 : ispart (clist2) = true
Case3 : ispart (clist3) = true
---------------------------------------
spec (tf1 (repr (clist3)) (repr (tf13 (clist2) (clist2)))) = spec (repr (tf13 (clist2) (clist2)))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 10


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (tf13 (clist2) (clist2))) = targetNew (clist2)
IH2 : spec (repr (tf13 (clist3) (clist3))) = targetNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
Case2 : ispart (clist2) = true
Case3 : ispart (clist3) = true
---------------------------------------
spec (tf1 (repr (clist3)) (repr (tf13 (clist2) (clist2)))) = targetNew (clist2)

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)(rank : 0.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)

---------------------------------------
forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist1(rank:14.)
=================================================
Progress: 11


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (tf13 (clist2) (clist2))) = targetNew (clist2)
IH2 : spec (repr (tf13 (clist3) (clist3))) = targetNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (lmax (clist2)) (lmin (clist3)) = true
Case2 : ispart (clist2) = true
Case3 : ispart (clist3) = true
---------------------------------------
spec (tf1 (repr (clist3)) (repr (tf13 (clist2) (clist2)))) = spec (repr (tf13 (clist2) (clist2)))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))(rank : 0.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))

---------------------------------------
forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist1(rank:14.)
=================================================
Progress: 12


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)

---------------------------------------
forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction clist1(rank : 14.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (clist2:clist), lq (lmax (Single (nat1))) (lmin (clist2)) = true->ispart (Single (nat1)) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (Single (nat1)) (Single (nat1))))) = targetNew (Single (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 13


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))

---------------------------------------
forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))

0 goal(s) more...

1 conjecture(s) more...
>>> induction clist1(rank : 14.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (clist2:clist), lq (lmax (Single (nat1))) (lmin (clist2)) = true->ispart (Single (nat1)) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (Single (nat1)) (Single (nat1))))) = spec (repr (tf13 (Single (nat1)) (Single (nat1))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:14.)
=================================================
Progress: 14


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (clist2:clist), lq (lmax (Single (nat1))) (lmin (clist2)) = true->ispart (Single (nat1)) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (Single (nat1)) (Single (nat1))))) = targetNew (Single (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (clist2:clist), lq (nat1) (lmin (clist2)) = true->true = true->ispart (clist2) = true -> max (nat1) (spec (repr (clist2))) = nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist2(rank:15.)
=================================================
Progress: 15


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (clist2:clist), lq (lmax (Single (nat1))) (lmin (clist2)) = true->ispart (Single (nat1)) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (Single (nat1)) (Single (nat1))))) = spec (repr (tf13 (Single (nat1)) (Single (nat1))))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 14.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (clist2:clist), lq (nat1) (lmin (clist2)) = true->true = true->ispart (clist2) = true -> max (nat1) (spec (repr (clist2))) = nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist2(rank:15.)
=================================================
Progress: 16


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (clist2:clist), lq (nat1) (lmin (clist2)) = true->true = true->ispart (clist2) = true -> max (nat1) (spec (repr (clist2))) = nat1

1 goal(s) more...

1 conjecture(s) more...
>>> induction clist2(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
lq (nat1) (lmin (Single (nat2))) = true->true = true->ispart (Single (nat2)) = true -> max (nat1) (spec (repr (Single (nat2)))) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 17


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (clist2:clist), lq (nat1) (lmin (clist2)) = true->true = true->ispart (clist2) = true -> max (nat1) (spec (repr (clist2))) = nat1

1 goal(s) more...

1 conjecture(s) more...
>>> induction clist2(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
lq (nat1) (lmin (Single (nat2))) = true->true = true->ispart (Single (nat2)) = true -> max (nat1) (spec (repr (Single (nat2)))) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:15.)
=================================================
Progress: 18


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
lq (nat1) (lmin (Single (nat2))) = true->true = true->ispart (Single (nat2)) = true -> max (nat1) (spec (repr (Single (nat2)))) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 19


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
lq (nat1) (lmin (Single (nat2))) = true->true = true->ispart (Single (nat2)) = true -> max (nat1) (spec (repr (Single (nat2)))) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 20


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
true = true->true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 21


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
true = true->true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 22


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
true = true->true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
---------------------------------------
true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 23


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
true = true->true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
---------------------------------------
true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 24


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
---------------------------------------
true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: max (SUCC (SUCC (ZERO))) (ZERO) = SUCC (SUCC (ZERO))
Prop: max (SUCC (ZERO)) (ZERO) = SUCC (ZERO)
Prop: max (ZERO) (ZERO) = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
End of Lemma List


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 25


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = targetNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:15.)
=================================================
Progress: 26


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
---------------------------------------
true = true -> max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
validate generalize_common_subterm_goal
Prop: max (ZERO) (ZERO) = ZERO
Prop: max (ZERO) (ZERO) = ZERO
Prop: max (SUCC (ZERO)) (ZERO) = SUCC (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
End of Lemma List


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 27


1st goal of : forall (clist1:clist) (clist2:clist), lq (lmax (clist1)) (lmin (clist2)) = true->ispart (clist1) = true->ispart (clist2) = true -> spec (tf1 (repr (clist2)) (repr (tf13 (clist1) (clist1)))) = spec (repr (tf13 (clist1) (clist1)))
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
max (nat1) (nat2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:15.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:15.)
=================================================
Progress: 29


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:15.)
=================================================
Progress: 30


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:15.)
=================================================
Progress: 32


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 33


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:15.)
=================================================
Progress: 34


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
---------------------------------------
true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 35


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
---------------------------------------
true = true->true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
---------------------------------------
true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:15.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
---------------------------------------
true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: max (ZERO) (ZERO) = ZERO
Prop: max (ZERO) (SUCC (ZERO)) = ZERO
Prop: max (ZERO) (ZERO) = ZERO
asdf
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
---------------------------------------
true = true -> max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond3(rank : 15.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = true->true = true->true = true -> max (nat1) (nat2) = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = true
Cond2 : true = true
Cond3 : true = true
---------------------------------------
max (nat1) (nat2) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: max (ZERO) (SUCC (ZERO)) = ZERO
Prop: max (ZERO) (ZERO) = ZERO
Prop: max (ZERO) (ZERO) = ZERO
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 283, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
