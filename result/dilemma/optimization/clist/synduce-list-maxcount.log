Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:clist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), match (tf1 (repr (clist1))) with
| Tuple2 _ b -> b = match (reprNew (clist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction clist1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), match (tf1 (repr (clist1))) with
| Tuple2 _ b -> b = match (reprNew (clist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction clist1(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
match (tf1 (repr (Single (nat1)))) with
| Tuple2 _ b -> b = match (reprNew (Single (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
match (tf1 (repr (Single (nat1)))) with
| Tuple2 _ b -> b = match (reprNew (Single (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
match (tf1 (repr (Concats (clist2) (clist3)))) with
| Tuple2 _ b -> b = match (reprNew (Concats (clist2) (clist3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
match (tf1 (repr (Concats (clist2) (clist3)))) with
| Tuple2 _ b -> b = match (reprNew (Concats (clist2) (clist3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = if nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) then plus (fst3 (reprNew (clist3))) (fst3 (reprNew (clist2))) else if lq (snd3 (reprNew (clist3))) (snd3 (reprNew (clist2))) then fst3 (reprNew (clist2)) else fst3 (reprNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b)(rank:4.)
=================================================
Progress: 6


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = if nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) then plus (fst3 (reprNew (clist3))) (fst3 (reprNew (clist2))) else if lq (snd3 (reprNew (clist3))) (snd3 (reprNew (clist2))) then fst3 (reprNew (clist2)) else fst3 (reprNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> case nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b)(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = plus (match (reprNew (clist3)) with
| Tuple2 a _ -> a) (match (reprNew (clist2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:12.)
rewrite <- IH2 in goal at 0(rank:12.)
=================================================
Progress: 7


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = plus (match (reprNew (clist3)) with
| Tuple2 a _ -> a) (match (reprNew (clist2)) with
| Tuple2 a _ -> a)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 12.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = plus (match (reprNew (clist3)) with
| Tuple2 a _ -> a) (match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:4.)
=================================================
Progress: 8


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = plus (match (reprNew (clist3)) with
| Tuple2 a _ -> a) (match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = plus (match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b) (match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: match (tf1 (tf3 (Elt (ZERO)) (Elt (ZERO)))) with
| Tuple2 _ b -> b = plus (match (tf1 (Elt (ZERO))) with
| Tuple2 _ b -> b) (match (tf1 (Elt (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (tf3 (Econs (SUCC (ZERO)) (Econs (ZERO) (Elt (ZERO)))) (Elt (ZERO)))) with
| Tuple2 _ b -> b = plus (match (tf1 (Econs (SUCC (ZERO)) (Econs (ZERO) (Elt (ZERO))))) with
| Tuple2 _ b -> b) (match (tf1 (Elt (ZERO))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (tf3 (Econs (ZERO) (Elt (SUCC (ZERO)))) (Elt (ZERO)))) with
| Tuple2 _ b -> b = plus (match (tf1 (Econs (ZERO) (Elt (SUCC (ZERO))))) with
| Tuple2 _ b -> b) (match (tf1 (Elt (ZERO))) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (tf1 (tf3 (Elt (ZERO)) (Econs (ZERO) (Econs (ZERO) (Elt (ZERO)))))) with
| Tuple2 _ b -> b = plus (match (tf1 (Elt (ZERO))) with
| Tuple2 _ b -> b) (match (tf1 (Econs (ZERO) (Econs (ZERO) (Elt (ZERO))))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (tf3 (Econs (ZERO) (Econs (ZERO) (Econs (SUCC (SUCC (ZERO))) (Elt (SUCC (SUCC (SUCC (ZERO)))))))) (Econs (SUCC (ZERO)) (Elt (ZERO))))) with
| Tuple2 _ b -> b = plus (match (tf1 (Econs (ZERO) (Econs (ZERO) (Econs (SUCC (SUCC (ZERO))) (Elt (SUCC (SUCC (SUCC (ZERO))))))))) with
| Tuple2 _ b -> b) (match (tf1 (Econs (SUCC (ZERO)) (Elt (ZERO)))) with
| Tuple2 _ b -> b)
Prop: match (tf1 (tf3 (Econs (ZERO) (Econs (SUCC (SUCC (ZERO))) (Elt (ZERO)))) (Elt (ZERO)))) with
| Tuple2 _ b -> b = plus (match (tf1 (Econs (ZERO) (Econs (SUCC (SUCC (ZERO))) (Elt (ZERO))))) with
| Tuple2 _ b -> b) (match (tf1 (Elt (ZERO))) with
| Tuple2 _ b -> b)
previous tactics
simpl in goal
case nat_eq (match (reprNew (clist3)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
