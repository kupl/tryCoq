Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:clist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), spec (repr (clist1)) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction clist1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), spec (repr (clist1)) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction clist1(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
spec (repr (Single (nat1))) = mainNew (Single (nat1))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
spec (repr (Single (nat1))) = mainNew (Single (nat1))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (repr (Concats (clist2) (clist3))) = mainNew (Concats (clist2) (clist3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (repr (Concats (clist2) (clist3))) = mainNew (Concats (clist2) (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 7
case lq (mainNew (clist2)) (mainNew (clist3))(rank:4.)
rewrite <- IH1 in goal at 2(rank:11.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 0(rank:19.)
rewrite <- IH1 in goal at 1(rank:19.)
rewrite <- IH2 in goal at 1(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
=================================================
Progress: 6


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (clist2)) (mainNew (clist3))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 7


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (mainNew (clist2)) (mainNew (clist3))
rewrite <- IH1 in goal at 0
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (Econs (ZERO) (Econs (ZERO) (Elt (ZERO))))) = spec (Econs (ZERO) (Econs (ZERO) (Elt (ZERO))))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (ZERO))) = spec (Elt (ZERO))
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (Elt (ZERO))) = spec (Elt (ZERO))
previous tactics
simpl in goal
case lq (mainNew (clist2)) (mainNew (clist3))
parent
repr (clist2)
lower
repr(_)
upper
spec(tf3(repr(clist3), _))
remove upper
repr(clist2)
remove lower
repr(_)
remove upper
tf3(repr(clist5), repr(clist4))
remove lower
tf3(repr(clist5), repr(_))
remove upper
tf3(repr(clist5), tf3(repr(clist7), repr(clist6)))
remove lower
tf3(repr(clist5), tf3(repr(clist7), repr(_)))
parent
mainNew (clist2)
lower
mainNew(_)
upper
_
remove upper
mainNew(clist3)
remove lower
mainNew(clist3)
remove upper
mainNew(clist2)
remove lower
mainNew(_)
remove upper
_
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (repr (Concats (Single (ZERO)) (Single (ZERO))))) = mainNew (Concats (Single (ZERO)) (Single (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (repr (Concats (Concats (Single (SUCC (ZERO))) (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (Single (ZERO))))) = mainNew (Concats (Concats (Single (SUCC (ZERO))) (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (Single (ZERO)))
Prop: spec (tf3 (repr (Concats (Concats (Single (SUCC (ZERO))) (Single (SUCC (ZERO)))) (Single (ZERO)))) (repr (Single (SUCC (ZERO))))) = mainNew (Single (SUCC (ZERO)))
Lemma List
forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)(rank : 0.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)

---------------------------------------
forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction clist1(rank:14.)
induction elist1(rank:14.)
=================================================
Progress: 9


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 2(rank : 11.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 1(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
=================================================
Progress: 10


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)

---------------------------------------
forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction clist1(rank : 14.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (repr (Single (nat1))) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 11


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (repr (Single (nat1))) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:7.)
=================================================
Progress: 12


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 13


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (nat1)(rank:8.)
=================================================
Progress: 14


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (nat1)(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 15


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (nat2) (nat1)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
End of Lemma List


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 16


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 17


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 18


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 19


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
Cond1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
asdf
=================================================
Progress: 20


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)

---------------------------------------
forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 14.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist1:clist), spec (tf3 (repr (clist1)) (Elt (nat1))) = spec (Elt (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 21


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist1:clist), spec (tf3 (repr (clist1)) (Elt (nat1))) = spec (Elt (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist1:clist), if lq (nat1) (spec (repr (clist1))) then nat1 else spec (repr (clist1)) = nat1

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist1(rank:7.)
=================================================
Progress: 22


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist1:clist), if lq (nat1) (spec (repr (clist1))) then nat1 else spec (repr (clist1)) = nat1

1 goal(s) more...

1 conjecture(s) more...
>>> induction clist1(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
---------------------------------------
if lq (nat1) (spec (repr (Single (nat2)))) then nat1 else spec (repr (Single (nat2))) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 23


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
---------------------------------------
if lq (nat1) (spec (repr (Single (nat2)))) then nat1 else spec (repr (Single (nat2))) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
---------------------------------------
if lq (nat1) (nat2) then nat1 else spec (repr (Single (nat2))) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat1) (nat2)(rank:8.)
=================================================
Progress: 24


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
---------------------------------------
if lq (nat1) (nat2) then nat1 else spec (repr (Single (nat2))) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (nat2)(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
Case1 : lq (nat1) (nat2) = true
---------------------------------------
nat1 = nat1

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 25


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
Case1 : lq (nat1) (nat2) = true
---------------------------------------
nat1 = nat1

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
Case1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (nat1) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
End of Lemma List


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
Case1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 26


1st goal of : forall (elist1:elist) (clist1:clist), spec (tf3 (repr (clist1)) (elist1)) = spec (elist1)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
Case1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 27


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 29


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 30


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat2(rank:9.)
=================================================
Progress: 32


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 33


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 34


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
case lq (spec (repr (clist2))) (mainNew (clist3))(rank:4.)
rewrite <- IH2 in goal at 2(rank:19.)
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 1(rank:19.)
=================================================
Progress: 35


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (spec (repr (clist2))) (mainNew (clist3))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4.)
=================================================
Progress: 36


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (spec (repr (clist2))) (mainNew (clist3))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (repr (Single (SUCC (ZERO))))) = mainNew (Single (SUCC (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (repr (Concats (Concats (Single (ZERO)) (Concats (Single (ZERO)) (Concats (Single (ZERO)) (Single (ZERO))))) (Single (ZERO))))) = mainNew (Concats (Concats (Single (ZERO)) (Concats (Single (ZERO)) (Concats (Single (ZERO)) (Single (ZERO))))) (Single (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (spec (repr (clist2))) (mainNew (clist3))
Prop: spec (tf3 (repr (Concats (Single (SUCC (SUCC (ZERO)))) (Single (SUCC (ZERO))))) (Elt (ZERO))) = spec (Elt (ZERO))
Prop: spec (tf3 (repr (Concats (Concats (Single (SUCC (ZERO))) (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) (Single (ZERO)))) (Elt (ZERO))) = spec (Elt (ZERO))
Prop: spec (tf3 (repr (Single (ZERO))) (Econs (ZERO) (Econs (ZERO) (Elt (ZERO))))) = spec (Econs (ZERO) (Econs (ZERO) (Elt (ZERO))))
=================================================
Progress: 37


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 1(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:19.)
rewrite <- IH2 in goal at 1(rank:19.)
rewrite <- IH2 in goal at 2(rank:19.)
=================================================
Progress: 38


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (clist2)) (spec (repr (clist3)))(rank:4.)
=================================================
Progress: 39


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (clist2)) (spec (repr (clist3)))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 40


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (mainNew (clist2)) (spec (repr (clist3)))
rewrite <- IH1 in goal at 0
Prop: spec (tf3 (repr (Single (ZERO))) (Econs (ZERO) (Elt (ZERO)))) = spec (Econs (ZERO) (Elt (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Concats (Single (SUCC (ZERO))) (Single (ZERO))))) (Elt (ZERO))) = spec (Elt (ZERO))
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Concats (Concats (Single (SUCC (SUCC (ZERO)))) (Concats (Concats (Concats (Concats (Single (SUCC (ZERO))) (Concats (Single (SUCC (ZERO))) (Concats (Single (SUCC (SUCC (ZERO)))) (Single (SUCC (SUCC (ZERO))))))) (Single (ZERO))) (Single (ZERO))) (Single (ZERO)))) (Concats (Single (ZERO)) (Single (ZERO)))))) (Econs (ZERO) (Elt (ZERO)))) = spec (Econs (ZERO) (Elt (ZERO)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
case lq (mainNew (clist2)) (spec (repr (clist3)))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (repr (Concats (Single (SUCC (SUCC (SUCC (ZERO))))) (Single (ZERO))))) = mainNew (Concats (Single (SUCC (SUCC (SUCC (ZERO))))) (Single (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Single (SUCC (SUCC (ZERO))))) (repr (Single (SUCC (ZERO))))) = mainNew (Single (SUCC (ZERO)))
=================================================
Progress: 41


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (clist2)) (spec (repr (clist3)))(rank:4.)
=================================================
Progress: 42


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (clist2)) (spec (repr (clist3)))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 43


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (clist2)) (spec (repr (clist3)))
rewrite <- IH1 in goal at 0
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (SUCC (SUCC (SUCC (ZERO))))))) (Elt (ZERO))) = spec (Elt (ZERO))
Prop: spec (tf3 (repr (Single (ZERO))) (Econs (ZERO) (Elt (ZERO)))) = spec (Econs (ZERO) (Elt (ZERO)))
Prop: spec (tf3 (repr (Single (SUCC (SUCC (SUCC (ZERO)))))) (Elt (ZERO))) = spec (Elt (ZERO))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 1
case lq (mainNew (clist2)) (spec (repr (clist3)))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Single (SUCC (ZERO))))) = mainNew (Single (SUCC (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO)))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
=================================================
Progress: 44


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (mainNew (clist2)) (mainNew (clist3))(rank:4.)
=================================================
Progress: 45


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (mainNew (clist2)) (mainNew (clist3))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 46


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
case lq (mainNew (clist2)) (mainNew (clist3))
rewrite <- IH1 in goal at 0
Prop: spec (tf3 (repr (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO)))) (Econs (SUCC (ZERO)) (Elt (ZERO)))) = spec (Econs (SUCC (ZERO)) (Elt (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Concats (Concats (Single (ZERO)) (Single (SUCC (ZERO)))) (Single (ZERO))))) (Elt (SUCC (ZERO)))) = spec (Elt (SUCC (ZERO)))
Prop: spec (tf3 (repr (Single (SUCC (SUCC (ZERO))))) (Elt (ZERO))) = spec (Elt (ZERO))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (Elt (ZERO))) = spec (Elt (ZERO))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (SUCC (ZERO)))) = spec (Elt (SUCC (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (SUCC (ZERO)))) = spec (Elt (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite <- IH2 in goal at 2
case lq (mainNew (clist2)) (mainNew (clist3))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (SUCC (SUCC (ZERO))))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Single (ZERO)) (Single (ZERO))))) (repr (Single (SUCC (ZERO))))) = mainNew (Single (SUCC (ZERO)))
Lemma List
forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 47


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (mainNew (clist2)) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)(rank : 0.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist1(rank:5.)
=================================================
Progress: 48


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro clist1(rank : 5.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
---------------------------------------
forall (elist1:elist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist2(rank:6.)
=================================================
Progress: 49


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
---------------------------------------
forall (elist1:elist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction clist2(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (mainNew (clist1)) (mainNew (Single (nat1))) = true -> spec (tf3 (repr (Single (nat1))) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 50


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (mainNew (clist1)) (mainNew (Single (nat1))) = true -> spec (tf3 (repr (Single (nat1))) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (mainNew (clist1)) (nat1) = true -> spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 51


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (mainNew (clist1)) (nat1) = true -> spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:7.)
=================================================
Progress: 52


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 53


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (nat1)(rank:8.)
=================================================
Progress: 54


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (nat1)(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 55


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (nat2) (nat1)
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (ZERO)) = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
End of Lemma List


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 56


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (mainNew (clist1)) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 57


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 58


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 59


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
Cond1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
Cond1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 60


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
Cond1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 61


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat2(rank:9.)
=================================================
Progress: 62


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat2(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 63


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
Cond1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 64


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 0
Prop: spec (tf3 (Elt (ZERO)) (Elt (SUCC (ZERO)))) = if lq (mainNew (Single (ZERO))) (spec (Elt (ZERO))) then spec (Elt (SUCC (ZERO))) else spec (Elt (ZERO))
Prop: spec (tf3 (Elt (ZERO)) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (spec (Elt (ZERO))) then spec (Elt (ZERO)) else spec (Elt (ZERO))
Prop: spec (tf3 (Elt (ZERO)) (Elt (ZERO))) = if lq (mainNew (Concats (Single (ZERO)) (Single (ZERO)))) (spec (Elt (ZERO))) then spec (Elt (ZERO)) else spec (Elt (ZERO))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (mainNew (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) then spec (Elt (ZERO)) else mainNew (Concats (Single (ZERO)) (Single (SUCC (ZERO))))
Prop: spec (tf3 (repr (Single (ZERO))) (Econs (ZERO) (Elt (ZERO)))) = if lq (mainNew (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) (mainNew (Single (ZERO))) then spec (Econs (ZERO) (Elt (ZERO))) else mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (SUCC (ZERO)))) then spec (Elt (ZERO)) else mainNew (Single (SUCC (ZERO)))
previous tactics
simpl in goal
parent
repr (clist2)
lower
repr(_)
upper
spec(tf3(repr(clist3), _))
remove upper
repr(clist2)
remove lower
repr(_)
remove upper
tf3(repr(clist5), repr(clist4))
remove lower
tf3(repr(clist5), repr(_))
remove upper
tf3(repr(clist5), tf3(repr(clist7), repr(clist6)))
remove lower
tf3(repr(clist5), tf3(repr(clist7), repr(_)))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Single (SUCC (ZERO))))) = if lq (mainNew (Single (SUCC (ZERO)))) (mainNew (Single (ZERO))) then mainNew (Single (SUCC (ZERO))) else mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Concats (Single (ZERO)) (Concats (Single (SUCC (ZERO))) (Single (ZERO)))))) = if lq (mainNew (Concats (Single (ZERO)) (Concats (Single (SUCC (ZERO))) (Single (ZERO))))) (mainNew (Single (ZERO))) then mainNew (Concats (Single (ZERO)) (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) else mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (repr (Single (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) then mainNew (Single (ZERO)) else mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO)))
Lemma List
forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 65


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)(rank : 0.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist1(rank:5.)
=================================================
Progress: 66


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)(rank : 0.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist1(rank:5.)
=================================================
Progress: 67


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro clist1(rank : 5.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
---------------------------------------
forall (elist1:elist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist2(rank:6.)
=================================================
Progress: 68


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro clist1(rank : 5.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:6.)
=================================================
Progress: 69


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
---------------------------------------
forall (elist1:elist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction clist2(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (repr (Single (nat1))) (elist1)) = if lq (mainNew (clist1)) (mainNew (Single (nat1))) then spec (elist1) else mainNew (Single (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 70


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (elist2:elist), spec (tf3 (Elt (nat1)) (elist2)) = if lq (mainNew (clist1)) (spec (Elt (nat1))) then spec (elist2) else spec (Elt (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 71


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (repr (Single (nat1))) (elist1)) = if lq (mainNew (clist1)) (mainNew (Single (nat1))) then spec (elist1) else mainNew (Single (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = if lq (mainNew (clist1)) (nat1) then spec (elist1) else mainNew (Single (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (mainNew (clist1)) (nat1)(rank:7.)
=================================================
Progress: 72


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (elist2:elist), spec (tf3 (Elt (nat1)) (elist2)) = if lq (mainNew (clist1)) (spec (Elt (nat1))) then spec (elist2) else spec (Elt (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (elist2:elist), spec (tf3 (Elt (nat1)) (elist2)) = if lq (mainNew (clist1)) (nat1) then spec (elist2) else spec (Elt (nat1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (mainNew (clist1)) (nat1)(rank:7.)
=================================================
Progress: 73


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = if lq (mainNew (clist1)) (nat1) then spec (elist1) else mainNew (Single (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (clist1)) (nat1)(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:8.)
=================================================
Progress: 74


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (elist2:elist), spec (tf3 (Elt (nat1)) (elist2)) = if lq (mainNew (clist1)) (nat1) then spec (elist2) else spec (Elt (nat1))

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (clist1)) (nat1)(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
---------------------------------------
forall (elist2:elist), spec (tf3 (Elt (nat1)) (elist2)) = spec (elist2)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist2(rank:8.)
=================================================
Progress: 75


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

2 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 76


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
---------------------------------------
forall (elist2:elist), spec (tf3 (Elt (nat1)) (elist2)) = spec (elist2)

2 goal(s) more...

1 conjecture(s) more...
>>> induction elist2(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist2 : elist
nat2 : nat
Base2 : elist2 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 77


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (nat1)(rank:9.)
=================================================
Progress: 78


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist2 : elist
nat2 : nat
Base2 : elist2 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist2 : elist
nat2 : nat
Base2 : elist2 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (nat1)(rank:9.)
=================================================
Progress: 79


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (nat1)(rank : 9.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 80


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (nat2) (nat1)
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
End of Lemma List


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 81


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 82


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 83


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 84


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
Cond1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = SUCC (ZERO)
Prop: ZERO = ZERO
asdf
=================================================
Progress: 85


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist2 : elist
nat2 : nat
Base2 : elist2 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (nat1)(rank : 9.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist2 : elist
nat2 : nat
Base2 : elist2 = Elt (nat2)
Case2 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 86


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist2 : elist
nat2 : nat
Base2 : elist2 = Elt (nat2)
Case2 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (spec (elist1)) then spec (elist2) else spec (elist1)
clist1 : clist
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
Case1 : lq (mainNew (clist1)) (nat1) = true
elist2 : elist
nat2 : nat
Base2 : elist2 = Elt (nat2)
Case2 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (nat2) (nat1)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: ZERO = SUCC (ZERO)
asdf
=================================================
Progress: 87


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 1
Prop: spec (tf3 (Econs (ZERO) (Elt (ZERO))) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (spec (Econs (ZERO) (Elt (ZERO)))) then spec (Elt (ZERO)) else mainNew (Single (SUCC (ZERO)))
Prop: spec (tf3 (Elt (ZERO)) (Econs (SUCC (ZERO)) (Econs (ZERO) (Econs (ZERO) (Econs (ZERO) (Elt (ZERO))))))) = if lq (mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (spec (Elt (ZERO))) then spec (Econs (SUCC (ZERO)) (Econs (ZERO) (Econs (ZERO) (Econs (ZERO) (Elt (ZERO)))))) else mainNew (Single (SUCC (SUCC (SUCC (ZERO)))))
Prop: spec (tf3 (Econs (ZERO) (Econs (SUCC (SUCC (ZERO))) (Elt (SUCC (ZERO))))) (Elt (ZERO))) = if lq (mainNew (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO)))) (spec (Econs (ZERO) (Econs (SUCC (SUCC (ZERO))) (Elt (SUCC (ZERO)))))) then spec (Elt (ZERO)) else mainNew (Concats (Concats (Concats (Concats (Single (SUCC (ZERO))) (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) (Single (ZERO))) (Concats (Single (ZERO)) (Single (ZERO)))) (Single (SUCC (ZERO))))
validate generalize_common_subterm_goal
Prop: spec (tf3 (Elt (ZERO)) (Elt (SUCC (SUCC (SUCC (SUCC (ZERO))))))) = if lq (mainNew (Concats (Single (SUCC (SUCC (ZERO)))) (Single (ZERO)))) (spec (Elt (ZERO))) then spec (Elt (SUCC (SUCC (SUCC (SUCC (ZERO)))))) else mainNew (Single (ZERO))
Prop: spec (tf3 (Elt (ZERO)) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (spec (Elt (ZERO))) then spec (Elt (ZERO)) else mainNew (Single (ZERO))
Prop: spec (tf3 (Elt (SUCC (ZERO))) (Econs (SUCC (ZERO)) (Econs (SUCC (ZERO)) (Elt (ZERO))))) = if lq (mainNew (Single (SUCC (ZERO)))) (spec (Elt (SUCC (ZERO)))) then spec (Econs (SUCC (ZERO)) (Econs (SUCC (ZERO)) (Elt (ZERO)))) else mainNew (Concats (Single (ZERO)) (Single (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (SUCC (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (ZERO))) then spec (Elt (SUCC (ZERO))) else mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (Econs (ZERO) (Elt (ZERO)))) = if lq (mainNew (Single (SUCC (ZERO)))) (mainNew (Concats (Single (ZERO)) (Single (ZERO)))) then spec (Econs (ZERO) (Elt (ZERO))) else mainNew (Concats (Single (ZERO)) (Single (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) then spec (Elt (ZERO)) else mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO)))
previous tactics
simpl in goal
parent
repr (clist2)
lower
repr(_)
upper
spec(tf3(repr(clist3), _))
remove upper
repr(clist2)
remove lower
repr(_)
remove upper
tf3(repr(clist5), repr(clist4))
remove lower
tf3(repr(clist5), repr(_))
remove upper
tf3(repr(clist5), tf3(repr(clist7), repr(clist6)))
remove lower
tf3(repr(clist5), tf3(repr(clist7), repr(_)))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Concats (Single (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Single (ZERO))))) = if lq (mainNew (Concats (Single (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Single (ZERO)))) (mainNew (Single (ZERO))) then mainNew (Concats (Single (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Single (ZERO))) else mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (SUCC (ZERO))))) (repr (Single (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (SUCC (ZERO))))) then mainNew (Single (ZERO)) else mainNew (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (SUCC (ZERO))))
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (SUCC (ZERO))))) (repr (Single (SUCC (SUCC (SUCC (ZERO))))))) = if lq (mainNew (Single (SUCC (SUCC (SUCC (ZERO)))))) (mainNew (Concats (Single (SUCC (ZERO))) (Single (SUCC (ZERO))))) then mainNew (Single (SUCC (SUCC (SUCC (ZERO))))) else mainNew (Concats (Single (SUCC (ZERO))) (Single (SUCC (ZERO))))
Lemma List
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 88


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (spec (repr (clist3))) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)(rank : 0.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist1(rank:5.)
=================================================
Progress: 89


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro clist1(rank : 5.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro elist2(rank:5.)
=================================================
Progress: 90


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro elist2(rank : 5.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
---------------------------------------
forall (elist1:elist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (mainNew (clist1)) (spec (elist2))(rank:6.)
=================================================
Progress: 91


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
---------------------------------------
forall (elist1:elist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (clist1)) (spec (elist2))(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
---------------------------------------
forall (elist1:elist) (clist2:clist), spec (tf3 (elist2) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:7.)
=================================================
Progress: 92


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
---------------------------------------
forall (elist1:elist) (clist2:clist), spec (tf3 (elist2) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist2:clist), spec (tf3 (elist2) (Elt (nat1))) = spec (Elt (nat1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 93


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist2:clist), spec (tf3 (elist2) (Elt (nat1))) = spec (Elt (nat1))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist2:clist), if lq (nat1) (spec (elist2)) then nat1 else spec (elist2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist2(rank:7.)
=================================================
Progress: 94


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist2:clist), if lq (nat1) (spec (elist2)) then nat1 else spec (elist2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> intro clist2(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
---------------------------------------
if lq (nat1) (spec (elist2)) then nat1 else spec (elist2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat1) (spec (elist2))(rank:8.)
=================================================
Progress: 95


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
---------------------------------------
if lq (nat1) (spec (elist2)) then nat1 else spec (elist2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (spec (elist2))(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
Case2 : lq (nat1) (spec (elist2)) = true
---------------------------------------
nat1 = nat1

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 96


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
Case2 : lq (nat1) (spec (elist2)) = true
---------------------------------------
nat1 = nat1

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
Case2 : lq (nat1) (spec (elist2)) = false
---------------------------------------
spec (elist2) = nat1

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
intro clist2
case lq (nat1) (spec (elist2))
reflexivity
validate generalize_common_subterm_goal
Prop: spec (Elt (ZERO)) = ZERO
Prop: spec (Elt (ZERO)) = ZERO
Prop: spec (Elt (ZERO)) = ZERO
Lemma List
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
End of Lemma List


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
Case2 : lq (nat1) (spec (elist2)) = false
---------------------------------------
spec (elist2) = nat1

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 97


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist2) (elist1)) = if lq (mainNew (clist1)) (spec (elist2)) then spec (elist1) else mainNew (clist2)
clist1 : clist
elist2 : elist
Case1 : lq (mainNew (clist1)) (spec (elist2)) = true
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
Case2 : lq (nat1) (spec (elist2)) = false
---------------------------------------
spec (elist2) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1(rank : 0.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

---------------------------------------
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro elist1(rank:7.)
intro nat1(rank:7.)
induction elist1(rank:16.)
=================================================
Progress: 98


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

---------------------------------------
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro elist1(rank : 7.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
---------------------------------------
forall (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 99


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

---------------------------------------
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
---------------------------------------
forall (elist1:elist), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction elist1(rank:8.)
=================================================
Progress: 100


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
---------------------------------------
forall (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat1 : nat
---------------------------------------
lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 101


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat1 : nat
---------------------------------------
lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat1 : nat
Cond1 : lq (nat1) (spec (elist1)) = false
---------------------------------------
spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Elt (ZERO)) = ZERO
Prop: spec (Elt (ZERO)) = ZERO
Prop: spec (Elt (SUCC (ZERO))) = ZERO
Lemma List
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
End of Lemma List


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat1 : nat
Cond1 : lq (nat1) (spec (elist1)) = false
---------------------------------------
spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 102


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat1 : nat
Cond1 : lq (nat1) (spec (elist1)) = false
---------------------------------------
spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1(rank : 0.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

---------------------------------------
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro elist1(rank:9.)
intro nat1(rank:9.)
induction elist1(rank:18.)
=================================================
Progress: 103


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
---------------------------------------
forall (elist1:elist), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction elist1(rank : 8.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
lq (nat1) (spec (Elt (nat2))) = false -> spec (Elt (nat2)) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 104


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
lq (nat1) (spec (Elt (nat2))) = false -> spec (Elt (nat2)) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 105


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = SUCC (ZERO)
Prop: ZERO = ZERO
Prop: ZERO = SUCC (SUCC (SUCC (ZERO)))
asdf
=================================================
Progress: 106


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

---------------------------------------
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro elist1(rank : 9.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
---------------------------------------
forall (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 107


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

---------------------------------------
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
---------------------------------------
forall (elist1:elist), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction elist1(rank:10.)
=================================================
Progress: 108


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
---------------------------------------
forall (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat1 : nat
---------------------------------------
lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 109


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat1 : nat
---------------------------------------
lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat1 : nat
Cond1 : lq (nat1) (spec (elist1)) = false
---------------------------------------
spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: spec (Elt (ZERO)) = ZERO
Prop: spec (Econs (ZERO) (Econs (ZERO) (Elt (ZERO)))) = ZERO
Prop: spec (Elt (ZERO)) = SUCC (ZERO)
asdf
=================================================
Progress: 110


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
---------------------------------------
forall (elist1:elist), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> induction elist1(rank : 10.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
lq (nat1) (spec (Elt (nat2))) = false -> spec (Elt (nat2)) = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 111


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
lq (nat1) (spec (Elt (nat2))) = false -> spec (Elt (nat2)) = nat1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 112


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
End of Lemma List


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 113


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
nat1 : nat
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro nat1(rank:11.)
=================================================
Progress: 114


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

4 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro nat2(rank:11.)
=================================================
Progress: 115


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

4 conjecture(s) more...
>>> intro nat2(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 116


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
=================================================
Progress: 117


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

---------------------------------------
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> induction elist1(rank : 16.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
forall (nat1:nat), lq (nat1) (spec (Elt (nat2))) = false -> spec (Elt (nat2)) = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 118


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
forall (nat1:nat), lq (nat1) (spec (Elt (nat2))) = false -> spec (Elt (nat2)) = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
forall (nat1:nat), lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:8.)
=================================================
Progress: 119


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
forall (nat1:nat), lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 8.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
nat1 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 120


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
nat1 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
nat1 : nat
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro Cond1
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 121


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

---------------------------------------
forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1

0 goal(s) more...

3 conjecture(s) more...
>>> induction elist1(rank : 18.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
forall (nat1:nat), lq (nat1) (spec (Elt (nat2))) = false -> spec (Elt (nat2)) = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 122


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
forall (nat1:nat), lq (nat1) (spec (Elt (nat2))) = false -> spec (Elt (nat2)) = nat1

1 goal(s) more...

3 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
forall (nat1:nat), lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:10.)
=================================================
Progress: 123


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
---------------------------------------
forall (nat1:nat), lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 10.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
nat1 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:10.)
=================================================
Progress: 124


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
nat1 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 10.)


1st goal of : forall (elist1:elist) (nat1:nat), lq (nat1) (spec (elist1)) = false -> spec (elist1) = nat1
elist1 : elist
nat2 : nat
Base1 : elist1 = Elt (nat2)
nat1 : nat
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat1
intro Cond1
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (ZERO)
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
asdf
=================================================
Progress: 125


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
rewrite <- IH2 in goal at 2
Prop: spec (tf3 (Elt (ZERO)) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (mainNew (Concats (Single (ZERO)) (Single (ZERO)))) then spec (Elt (ZERO)) else spec (Elt (ZERO))
Prop: spec (tf3 (Econs (ZERO) (Econs (ZERO) (Elt (SUCC (ZERO))))) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (SUCC (SUCC (SUCC (ZERO)))))) then spec (Elt (ZERO)) else spec (Econs (ZERO) (Econs (ZERO) (Elt (SUCC (ZERO)))))
Prop: spec (tf3 (Elt (SUCC (ZERO))) (Elt (SUCC (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (ZERO))) then spec (Elt (SUCC (ZERO))) else spec (Elt (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 2
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (Econs (SUCC (ZERO)) (Elt (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (SUCC (ZERO)))) then spec (Econs (SUCC (ZERO)) (Elt (ZERO))) else mainNew (Single (SUCC (ZERO)))
Prop: spec (tf3 (repr (Single (SUCC (SUCC (SUCC (ZERO)))))) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (SUCC (SUCC (SUCC (ZERO)))))) then spec (Elt (ZERO)) else mainNew (Single (SUCC (SUCC (SUCC (ZERO)))))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (ZERO))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (ZERO))) then spec (Elt (ZERO)) else mainNew (Single (ZERO))
previous tactics
simpl in goal
parent
repr (clist2)
lower
repr(_)
upper
spec(tf3(repr(clist3), _))
remove upper
repr(clist2)
remove lower
repr(_)
remove upper
tf3(repr(clist5), repr(clist4))
remove lower
tf3(repr(clist5), repr(_))
remove upper
tf3(repr(clist5), tf3(repr(clist7), repr(clist6)))
remove lower
tf3(repr(clist5), tf3(repr(clist7), repr(_)))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Single (SUCC (ZERO))))) = if lq (mainNew (Single (SUCC (ZERO)))) (mainNew (Single (ZERO))) then mainNew (Single (SUCC (ZERO))) else mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (repr (Single (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Concats (Single (ZERO)) (Single (ZERO)))) then mainNew (Single (ZERO)) else mainNew (Concats (Single (ZERO)) (Single (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Concats (Single (SUCC (SUCC (SUCC (ZERO))))) (Concats (Single (SUCC (ZERO))) (Single (ZERO)))))) (repr (Concats (Single (ZERO)) (Concats (Single (ZERO)) (Single (ZERO)))))) = if lq (mainNew (Concats (Single (ZERO)) (Concats (Single (ZERO)) (Single (ZERO))))) (mainNew (Concats (Single (SUCC (ZERO))) (Concats (Single (SUCC (SUCC (SUCC (ZERO))))) (Concats (Single (SUCC (ZERO))) (Single (ZERO)))))) then mainNew (Concats (Single (ZERO)) (Concats (Single (ZERO)) (Single (ZERO)))) else mainNew (Concats (Single (SUCC (ZERO))) (Concats (Single (SUCC (SUCC (SUCC (ZERO))))) (Concats (Single (SUCC (ZERO))) (Single (ZERO)))))
Lemma List
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 126


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (mainNew (clist2)) (mainNew (clist3)) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)(rank : 0.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist1(rank:5.)
=================================================
Progress: 127


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro clist1(rank : 5.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist2(rank:5.)
=================================================
Progress: 128


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro clist2(rank : 5.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (mainNew (clist1)) (mainNew (clist2))(rank:6.)
=================================================
Progress: 129


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (mainNew (clist1)) (mainNew (clist2))(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
---------------------------------------
forall (elist1:elist) (elist2:elist), spec (tf3 (elist1) (elist2)) = spec (elist2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist2(rank:7.)
=================================================
Progress: 130


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
---------------------------------------
forall (elist1:elist) (elist2:elist), spec (tf3 (elist1) (elist2)) = spec (elist2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction elist2(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (elist1) (Elt (nat1))) = spec (Elt (nat1))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 131


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist), spec (tf3 (elist1) (Elt (nat1))) = spec (Elt (nat1))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist), if lq (nat1) (spec (elist1)) then nat1 else spec (elist1) = nat1

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:8.)
=================================================
Progress: 132


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist), if lq (nat1) (spec (elist1)) then nat1 else spec (elist1) = nat1

2 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat1) (spec (Elt (nat2))) then nat1 else spec (Elt (nat2)) = nat1

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 133


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat1) (spec (Elt (nat2))) then nat1 else spec (Elt (nat2)) = nat1

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat1) (nat2) then nat1 else spec (Elt (nat2)) = nat1

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat1) (nat2)(rank:9.)
=================================================
Progress: 134


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat1) (nat2) then nat1 else spec (Elt (nat2)) = nat1

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (nat2)(rank : 9.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat1) (nat2) = true
---------------------------------------
nat1 = nat1

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 135


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat1) (nat2) = true
---------------------------------------
nat1 = nat1

4 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

3 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (nat1) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = SUCC (ZERO)
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
End of Lemma List


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 136


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (mainNew (clist1)) (mainNew (clist2)) then spec (elist2) else spec (elist1)
clist1 : clist
clist2 : clist
Case1 : lq (mainNew (clist1)) (mainNew (clist2)) = true
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case2 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 137


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 138


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 139


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat1) (nat2) = false -> nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat1) (nat2) = false -> nat2 = nat1
nat1 : nat
nat2 : nat
Cond1 : lq (nat1) (nat2) = false
---------------------------------------
nat2 = nat1

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 140


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (spec (repr (clist2))) (spec (repr (clist3)))(rank:4.)
=================================================
Progress: 141


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (spec (repr (clist2))) (spec (repr (clist3)))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4.)
=================================================
Progress: 142


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (spec (repr (clist2))) (spec (repr (clist3)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Single (SUCC (SUCC (ZERO)))))) = mainNew (Single (SUCC (SUCC (ZERO))))
Prop: spec (tf3 (repr (Concats (Concats (Concats (Single (SUCC (SUCC (SUCC (ZERO))))) (Single (ZERO))) (Single (ZERO))) (Single (ZERO)))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
case lq (spec (repr (clist2))) (spec (repr (clist3)))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (ZERO))) = spec (Elt (ZERO))
Prop: spec (tf3 (repr (Concats (Concats (Single (ZERO)) (Concats (Concats (Single (ZERO)) (Concats (Single (SUCC (SUCC (ZERO)))) (Single (ZERO)))) (Single (ZERO)))) (Single (ZERO)))) (Econs (SUCC (SUCC (ZERO))) (Elt (ZERO)))) = spec (Econs (SUCC (SUCC (ZERO))) (Elt (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (Econs (ZERO) (Elt (SUCC (ZERO))))) = spec (Econs (ZERO) (Elt (SUCC (ZERO))))
=================================================
Progress: 143


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (spec (repr (clist2))) (spec (repr (clist3)))(rank:4.)
=================================================
Progress: 144


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (spec (repr (clist2))) (spec (repr (clist3)))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4.)
=================================================
Progress: 145


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (spec (repr (clist3))) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (spec (repr (clist2))) (spec (repr (clist3)))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (SUCC (ZERO))))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Concats (Concats (Single (SUCC (SUCC (ZERO)))) (Single (SUCC (SUCC (SUCC (ZERO)))))) (Single (ZERO)))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 1
case lq (spec (repr (clist2))) (spec (repr (clist3)))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (Econs (ZERO) (Elt (ZERO)))) = spec (Econs (ZERO) (Elt (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (Econs (ZERO) (Elt (ZERO)))) = spec (Econs (ZERO) (Elt (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (Econs (SUCC (ZERO)) (Econs (ZERO) (Elt (ZERO))))) = spec (Econs (SUCC (ZERO)) (Econs (ZERO) (Elt (ZERO))))
=================================================
Progress: 146


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then spec (repr (clist2)) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (spec (repr (clist2))) (mainNew (clist3))(rank:4.)
=================================================
Progress: 147


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then spec (repr (clist2)) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (spec (repr (clist2))) (mainNew (clist3))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:4.)
=================================================
Progress: 148


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = mainNew (clist2)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (spec (repr (clist2))) (mainNew (clist3))
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Concats (Concats (Single (ZERO)) (Single (SUCC (ZERO)))) (Concats (Concats (Single (SUCC (ZERO))) (Concats (Concats (Concats (Single (ZERO)) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO)))) (Single (ZERO))) (Single (SUCC (ZERO))))) (Single (ZERO)))))) = mainNew (Concats (Concats (Single (ZERO)) (Single (SUCC (ZERO)))) (Concats (Concats (Single (SUCC (ZERO))) (Concats (Concats (Concats (Single (ZERO)) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO)))) (Single (ZERO))) (Single (SUCC (ZERO))))) (Single (ZERO))))
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Single (SUCC (SUCC (ZERO))))) (repr (Single (ZERO)))) = mainNew (Single (ZERO))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 2
case lq (spec (repr (clist2))) (mainNew (clist3))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (SUCC (ZERO)))) = spec (Elt (SUCC (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (SUCC (SUCC (ZERO))))) = spec (Elt (SUCC (SUCC (ZERO))))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (SUCC (SUCC (SUCC (ZERO))))))) (Elt (ZERO))) = spec (Elt (ZERO))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (SUCC (ZERO)))) = spec (Elt (SUCC (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (Elt (SUCC (ZERO)))) = spec (Elt (SUCC (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (SUCC (ZERO)))) = spec (Elt (SUCC (ZERO)))
Lemma List
forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 149


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (spec (repr (clist2))) (mainNew (clist3)) = true
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = spec (repr (clist2))

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)(rank : 0.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist1(rank:5.)
=================================================
Progress: 150


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro clist1(rank : 5.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
---------------------------------------
forall (elist1:elist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist2(rank:6.)
=================================================
Progress: 151


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
---------------------------------------
forall (elist1:elist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction clist2(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (spec (repr (clist1))) (mainNew (Single (nat1))) = true -> spec (tf3 (repr (Single (nat1))) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 152


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (spec (repr (clist1))) (mainNew (Single (nat1))) = true -> spec (tf3 (repr (Single (nat1))) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (spec (repr (clist1))) (nat1) = true -> spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 153


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (spec (repr (clist1))) (nat1) = true -> spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:7.)
=================================================
Progress: 154


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
---------------------------------------
forall (elist1:elist), spec (tf3 (Elt (nat1)) (elist1)) = spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 155


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
spec (tf3 (Elt (nat1)) (Elt (nat2))) = spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (nat1)(rank:8.)
=================================================
Progress: 156


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then nat2 else nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (nat1)(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 157


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = true
---------------------------------------
nat2 = nat2

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 0
previous tactics
simpl in goal
case lq (nat2) (nat1)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
End of Lemma List


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 158


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (spec (repr (clist1))) (mainNew (clist2)) = true -> spec (tf3 (repr (clist2)) (elist1)) = spec (elist1)
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (spec (repr (clist1))) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 159


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 160


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 161


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
---------------------------------------
lq (nat2) (nat1) = false -> nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (nat2) (nat1) = false -> nat1 = nat2
nat1 : nat
nat2 : nat
Cond1 : lq (nat2) (nat1) = false
---------------------------------------
nat1 = nat2

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
=================================================
Progress: 162


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 0
Prop: spec (tf3 (Econs (ZERO) (Elt (ZERO))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (spec (Econs (ZERO) (Elt (ZERO)))) then mainNew (Single (SUCC (ZERO))) else spec (Econs (ZERO) (Elt (ZERO)))
Prop: spec (tf3 (Elt (ZERO)) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (spec (Elt (ZERO))) then mainNew (Single (ZERO)) else spec (Elt (ZERO))
Prop: spec (tf3 (Elt (ZERO)) (Elt (SUCC (ZERO)))) = if lq (spec (Elt (SUCC (ZERO)))) (spec (Elt (ZERO))) then mainNew (Single (ZERO)) else spec (Elt (ZERO))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (mainNew (Single (ZERO))) then mainNew (Single (ZERO)) else mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (mainNew (Concats (Single (SUCC (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))) then mainNew (Single (ZERO)) else mainNew (Concats (Single (SUCC (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (mainNew (Single (ZERO))) then mainNew (Single (ZERO)) else mainNew (Single (ZERO))
previous tactics
simpl in goal
parent
repr (clist2)
lower
repr(_)
upper
spec(tf3(repr(clist3), _))
remove upper
repr(clist2)
remove lower
repr(_)
remove upper
tf3(repr(clist5), repr(clist4))
remove lower
tf3(repr(clist5), repr(_))
remove upper
tf3(repr(clist5), tf3(repr(clist7), repr(clist6)))
remove lower
tf3(repr(clist5), tf3(repr(clist7), repr(_)))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (repr (Single (SUCC (SUCC (SUCC (SUCC (ZERO)))))))) = if lq (mainNew (Single (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) then mainNew (Single (SUCC (SUCC (SUCC (SUCC (ZERO)))))) else mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Concats (Single (ZERO)) (Single (SUCC (ZERO)))))) = if lq (mainNew (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) (mainNew (Single (ZERO))) then mainNew (Concats (Single (ZERO)) (Single (SUCC (ZERO)))) else mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Single (SUCC (SUCC (ZERO)))))) = if lq (mainNew (Single (SUCC (SUCC (ZERO))))) (mainNew (Single (ZERO))) then mainNew (Single (SUCC (SUCC (ZERO)))) else mainNew (Single (ZERO))
Lemma List
forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 163


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)(rank : 0.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:6.)
=================================================
Progress: 164


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)(rank : 0.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist2(rank:6.)
=================================================
Progress: 165


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (Elt (nat1))) = if lq (spec (Elt (nat1))) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 166


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction elist2(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist) (clist1:clist), spec (tf3 (elist1) (Elt (nat1))) = if lq (spec (Elt (nat1))) (spec (elist1)) then mainNew (clist1) else spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 167


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (Elt (nat1))) = if lq (spec (Elt (nat1))) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist1:clist) (clist2:clist), if lq (nat1) (spec (repr (clist2))) then nat1 else spec (repr (clist2)) = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist2(rank:7.)
=================================================
Progress: 168


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist) (clist1:clist), spec (tf3 (elist1) (Elt (nat1))) = if lq (spec (Elt (nat1))) (spec (elist1)) then mainNew (clist1) else spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist) (clist1:clist), if lq (nat1) (spec (elist1)) then nat1 else spec (elist1) = if lq (nat1) (spec (elist1)) then mainNew (clist1) else spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:7.)
=================================================
Progress: 169


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
---------------------------------------
forall (clist1:clist) (clist2:clist), if lq (nat1) (spec (repr (clist2))) then nat1 else spec (repr (clist2)) = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)

1 goal(s) more...

1 conjecture(s) more...
>>> induction clist2(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (spec (repr (Single (nat2)))) then nat1 else spec (repr (Single (nat2))) = if lq (nat1) (mainNew (Single (nat2))) then mainNew (clist1) else mainNew (Single (nat2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 170


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist) (clist1:clist), if lq (nat1) (spec (elist1)) then nat1 else spec (elist1) = if lq (nat1) (spec (elist1)) then mainNew (clist1) else spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (spec (Elt (nat2))) then nat1 else spec (Elt (nat2)) = if lq (nat1) (spec (Elt (nat2))) then mainNew (clist1) else spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 171


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (spec (repr (Single (nat2)))) then nat1 else spec (repr (Single (nat2))) = if lq (nat1) (mainNew (Single (nat2))) then mainNew (clist1) else mainNew (Single (nat2))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (nat2) then nat1 else spec (repr (Single (nat2))) = if lq (nat1) (nat2) then mainNew (clist1) else mainNew (Single (nat2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat1) (nat2)(rank:8.)
=================================================
Progress: 172


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (spec (Elt (nat2))) then nat1 else spec (Elt (nat2)) = if lq (nat1) (spec (Elt (nat2))) then mainNew (clist1) else spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (nat2) then nat1 else spec (Elt (nat2)) = if lq (nat1) (nat2) then mainNew (clist1) else spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat1) (nat2)(rank:8.)
=================================================
Progress: 173


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (nat2) then nat1 else spec (repr (Single (nat2))) = if lq (nat1) (nat2) then mainNew (clist1) else mainNew (Single (nat2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (nat2)(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Case1 : lq (nat1) (nat2) = true
---------------------------------------
forall (clist1:clist), nat1 = mainNew (clist1)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist1(rank:9.)
=================================================
Progress: 174


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (nat2) then nat1 else spec (Elt (nat2)) = if lq (nat1) (nat2) then mainNew (clist1) else spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (nat2)(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
---------------------------------------
forall (clist1:clist), nat1 = mainNew (clist1)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist1(rank:9.)
=================================================
Progress: 175


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Case1 : lq (nat1) (nat2) = true
---------------------------------------
forall (clist1:clist), nat1 = mainNew (clist1)

3 goal(s) more...

1 conjecture(s) more...
>>> induction clist1(rank : 9.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Case1 : lq (nat1) (nat2) = true
clist1 : clist
nat3 : nat
Base3 : clist1 = Single (nat3)
---------------------------------------
nat1 = mainNew (Single (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 176


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
---------------------------------------
forall (clist1:clist), nat1 = mainNew (clist1)

3 goal(s) more...

1 conjecture(s) more...
>>> induction clist1(rank : 9.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
clist1 : clist
nat3 : nat
Base3 : clist1 = Single (nat3)
---------------------------------------
nat1 = mainNew (Single (nat3))

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 177


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Case1 : lq (nat1) (nat2) = true
clist1 : clist
nat3 : nat
Base3 : clist1 = Single (nat3)
---------------------------------------
nat1 = mainNew (Single (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), spec (tf3 (repr (clist2)) (elist1)) = if lq (spec (elist1)) (mainNew (clist2)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
nat1 : nat
Base1 : elist1 = Elt (nat1)
clist2 : clist
nat2 : nat
Base2 : clist2 = Single (nat2)
Case1 : lq (nat1) (nat2) = true
clist1 : clist
nat3 : nat
Base3 : clist1 = Single (nat3)
---------------------------------------
nat1 = nat3

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = SUCC (SUCC (SUCC (ZERO)))
Prop: SUCC (ZERO) = SUCC (SUCC (ZERO))
Prop: ZERO = ZERO
asdf
=================================================
Progress: 178


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
clist1 : clist
nat3 : nat
Base3 : clist1 = Single (nat3)
---------------------------------------
nat1 = mainNew (Single (nat3))

4 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else spec (elist1)
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
clist1 : clist
nat3 : nat
Base3 : clist1 = Single (nat3)
---------------------------------------
nat1 = nat3

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = ZERO
asdf
=================================================
Progress: 179


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 1(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 1
Prop: spec (tf3 (Elt (ZERO)) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (spec (Elt (ZERO))) then mainNew (Concats (Concats (Concats (Single (ZERO)) (Concats (Concats (Single (ZERO)) (Single (SUCC (ZERO)))) (Single (ZERO)))) (Single (ZERO))) (Concats (Single (ZERO)) (Single (ZERO)))) else mainNew (Single (ZERO))
Prop: spec (tf3 (Elt (ZERO)) (Elt (SUCC (ZERO)))) = if lq (spec (Elt (SUCC (ZERO)))) (spec (Elt (ZERO))) then mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO))) else mainNew (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO)))
Prop: spec (tf3 (Econs (SUCC (ZERO)) (Elt (ZERO))) (Econs (ZERO) (Econs (SUCC (ZERO)) (Elt (SUCC (ZERO)))))) = if lq (spec (Econs (ZERO) (Econs (SUCC (ZERO)) (Elt (SUCC (ZERO)))))) (spec (Econs (SUCC (ZERO)) (Elt (ZERO)))) then mainNew (Single (ZERO)) else mainNew (Single (ZERO))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
Prop: spec (tf3 (repr (Single (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Econs (SUCC (ZERO)) (Elt (SUCC (ZERO))))) = if lq (spec (Econs (SUCC (ZERO)) (Elt (SUCC (ZERO))))) (mainNew (Single (SUCC (SUCC (SUCC (SUCC (ZERO))))))) then mainNew (Concats (Single (ZERO)) (Single (ZERO))) else mainNew (Single (SUCC (SUCC (SUCC (SUCC (ZERO))))))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (mainNew (Single (ZERO))) then mainNew (Single (ZERO)) else mainNew (Single (ZERO))
Prop: spec (tf3 (repr (Single (ZERO))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (mainNew (Single (ZERO))) then mainNew (Single (SUCC (ZERO))) else mainNew (Single (ZERO))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (SUCC (SUCC (ZERO))))) (Elt (SUCC (SUCC (ZERO))))) = if lq (spec (Elt (SUCC (SUCC (ZERO))))) (mainNew (Single (SUCC (SUCC (ZERO))))) then mainNew (Concats (Single (ZERO)) (Concats (Concats (Concats (Concats (Concats (Concats (Single (ZERO)) (Concats (Concats (Single (ZERO)) (Concats (Concats (Single (SUCC (SUCC (ZERO)))) (Concats (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Single (ZERO)) (Single (ZERO)))) (Single (ZERO)))) (Single (ZERO)))) (Single (SUCC (ZERO))))) (Single (ZERO))) (Single (ZERO))) (Single (ZERO))) (Single (SUCC (SUCC (ZERO))))) (Single (ZERO)))) else mainNew (Single (SUCC (SUCC (ZERO))))
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (mainNew (Single (SUCC (ZERO)))) then mainNew (Single (ZERO)) else mainNew (Single (SUCC (ZERO)))
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (Econs (SUCC (SUCC (SUCC (ZERO)))) (Econs (ZERO) (Elt (SUCC (ZERO)))))) = if lq (spec (Econs (SUCC (SUCC (SUCC (ZERO)))) (Econs (ZERO) (Elt (SUCC (ZERO)))))) (mainNew (Single (SUCC (ZERO)))) then mainNew (Concats (Single (ZERO)) (Single (ZERO))) else mainNew (Single (SUCC (ZERO)))
previous tactics
simpl in goal
parent
repr (clist2)
lower
repr(_)
upper
spec(tf3(repr(clist3), _))
remove upper
repr(clist2)
remove lower
repr(_)
remove upper
tf3(repr(clist5), repr(clist4))
remove lower
tf3(repr(clist5), repr(_))
remove upper
tf3(repr(clist5), tf3(repr(clist7), repr(clist6)))
remove lower
tf3(repr(clist5), tf3(repr(clist7), repr(_)))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (SUCC (SUCC (ZERO))))) (repr (Single (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (SUCC (SUCC (ZERO))))) then mainNew (Single (ZERO)) else mainNew (Single (SUCC (SUCC (ZERO))))
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (repr (Single (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (SUCC (ZERO)))) then mainNew (Single (ZERO)) else mainNew (Single (SUCC (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) (repr (Single (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Single (ZERO))) then mainNew (Single (ZERO)) else mainNew (Single (ZERO))
Lemma List
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 180


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (spec (repr (clist3))) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)(rank : 0.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro elist1(rank:5.)
=================================================
Progress: 181


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
>>> intro elist1(rank : 5.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
---------------------------------------
forall (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist2(rank:6.)
=================================================
Progress: 182


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
---------------------------------------
forall (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

0 goal(s) more...

1 conjecture(s) more...
>>> induction elist2(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (clist1:clist) (clist2:clist), spec (tf3 (elist1) (Elt (nat1))) = if lq (spec (Elt (nat1))) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 183


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (clist1:clist) (clist2:clist), spec (tf3 (elist1) (Elt (nat1))) = if lq (spec (Elt (nat1))) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (clist1:clist) (clist2:clist), if lq (nat1) (spec (elist1)) then nat1 else spec (elist1) = if lq (nat1) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat1) (spec (elist1))(rank:7.)
=================================================
Progress: 184


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (clist1:clist) (clist2:clist), if lq (nat1) (spec (elist1)) then nat1 else spec (elist1) = if lq (nat1) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)

1 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (spec (elist1))(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
Case1 : lq (nat1) (spec (elist1)) = true
---------------------------------------
forall (clist1:clist) (clist2:clist), nat1 = mainNew (clist1)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist1(rank:8.)
=================================================
Progress: 185


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
Case1 : lq (nat1) (spec (elist1)) = true
---------------------------------------
forall (clist1:clist) (clist2:clist), nat1 = mainNew (clist1)

2 goal(s) more...

1 conjecture(s) more...
>>> induction clist1(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
Case1 : lq (nat1) (spec (elist1)) = true
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
---------------------------------------
forall (clist2:clist), nat1 = mainNew (Single (nat2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 186


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
Case1 : lq (nat1) (spec (elist1)) = true
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
---------------------------------------
forall (clist2:clist), nat1 = mainNew (Single (nat2))

3 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
Case1 : lq (nat1) (spec (elist1)) = true
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
---------------------------------------
forall (clist2:clist), nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist2(rank:8.)
=================================================
Progress: 187


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
Case1 : lq (nat1) (spec (elist1)) = true
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
---------------------------------------
forall (clist2:clist), nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
>>> intro clist2(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (spec (elist1)) then mainNew (clist1) else mainNew (clist2)
elist1 : elist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
Case1 : lq (nat1) (spec (elist1)) = true
clist1 : clist
nat2 : nat
Base2 : clist1 = Single (nat2)
clist2 : clist
---------------------------------------
nat1 = nat2

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro clist2
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
=================================================
Progress: 188


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then mainNew (clist2) else mainNew (clist3)

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 2(rank : 19.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
rewrite <- IH2 in goal at 2
Prop: spec (tf3 (Elt (ZERO)) (Elt (SUCC (ZERO)))) = if lq (spec (Elt (SUCC (ZERO)))) (mainNew (Single (ZERO))) then mainNew (Single (SUCC (ZERO))) else spec (Elt (ZERO))
Prop: spec (tf3 (Elt (SUCC (SUCC (SUCC (ZERO))))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (mainNew (Single (SUCC (ZERO)))) then mainNew (Single (ZERO)) else spec (Elt (SUCC (SUCC (SUCC (ZERO)))))
Prop: spec (tf3 (Econs (ZERO) (Elt (SUCC (ZERO)))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (mainNew (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) then mainNew (Single (SUCC (SUCC (ZERO)))) else spec (Econs (ZERO) (Elt (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 1
Prop: spec (tf3 (repr (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))) (Elt (ZERO))) = if lq (spec (Elt (ZERO))) (mainNew (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))) then mainNew (Concats (Single (ZERO)) (Single (ZERO))) else mainNew (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (Elt (SUCC (SUCC (ZERO))))) = if lq (spec (Elt (SUCC (SUCC (ZERO))))) (mainNew (Concats (Single (ZERO)) (Single (ZERO)))) then mainNew (Single (ZERO)) else mainNew (Concats (Single (ZERO)) (Single (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Concats (Single (SUCC (ZERO))) (Single (ZERO))))) (Econs (ZERO) (Econs (SUCC (ZERO)) (Elt (SUCC (ZERO)))))) = if lq (spec (Econs (ZERO) (Econs (SUCC (ZERO)) (Elt (SUCC (ZERO)))))) (mainNew (Concats (Single (ZERO)) (Concats (Single (SUCC (ZERO))) (Single (ZERO))))) then mainNew (Single (SUCC (ZERO))) else mainNew (Concats (Single (ZERO)) (Concats (Single (SUCC (ZERO))) (Single (ZERO))))
previous tactics
simpl in goal
parent
repr (clist2)
lower
repr(_)
upper
spec(tf3(repr(clist3), _))
remove upper
repr(clist2)
remove lower
repr(_)
remove upper
tf3(repr(clist5), repr(clist4))
remove lower
tf3(repr(clist5), repr(_))
remove upper
tf3(repr(clist5), tf3(repr(clist7), repr(clist6)))
remove lower
tf3(repr(clist5), tf3(repr(clist7), repr(_)))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (repr (Single (SUCC (SUCC (ZERO)))))) = if lq (mainNew (Single (SUCC (SUCC (ZERO))))) (mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) then mainNew (Single (SUCC (SUCC (ZERO)))) else mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO)))
Prop: spec (tf3 (repr (Concats (Single (ZERO)) (Single (ZERO)))) (repr (Single (ZERO)))) = if lq (mainNew (Single (ZERO))) (mainNew (Concats (Single (ZERO)) (Single (ZERO)))) then mainNew (Single (ZERO)) else mainNew (Concats (Single (ZERO)) (Single (ZERO)))
Prop: spec (tf3 (repr (Concats (Concats (Concats (Single (SUCC (ZERO))) (Single (ZERO))) (Single (SUCC (ZERO)))) (Single (ZERO)))) (repr (Single (SUCC (ZERO))))) = if lq (mainNew (Single (SUCC (ZERO)))) (mainNew (Concats (Concats (Concats (Single (SUCC (ZERO))) (Single (ZERO))) (Single (SUCC (ZERO)))) (Single (ZERO)))) then mainNew (Single (SUCC (ZERO))) else mainNew (Concats (Concats (Concats (Single (SUCC (ZERO))) (Single (ZERO))) (Single (SUCC (ZERO)))) (Single (ZERO)))
Lemma List
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 189


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = if lq (spec (repr (clist2))) (mainNew (clist3)) then mainNew (clist2) else spec (repr (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)(rank : 0.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist2(rank:5.)
=================================================
Progress: 190


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro clist2(rank : 5.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist2(rank:6.)
=================================================
Progress: 191


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
---------------------------------------
forall (elist1:elist) (elist2:elist) (clist1:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction elist2(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist) (clist1:clist), spec (tf3 (elist1) (Elt (nat1))) = if lq (spec (Elt (nat1))) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 192


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist) (clist1:clist), spec (tf3 (elist1) (Elt (nat1))) = if lq (spec (Elt (nat1))) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist) (clist1:clist), if lq (nat1) (spec (elist1)) then nat1 else spec (elist1) = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:7.)
=================================================
Progress: 193


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
---------------------------------------
forall (elist1:elist) (clist1:clist), if lq (nat1) (spec (elist1)) then nat1 else spec (elist1) = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (spec (Elt (nat2))) then nat1 else spec (Elt (nat2)) = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 194


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (spec (Elt (nat2))) then nat1 else spec (Elt (nat2)) = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (nat2) then nat1 else spec (Elt (nat2)) = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat1) (nat2)(rank:8.)
=================================================
Progress: 195


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
forall (clist1:clist), if lq (nat1) (nat2) then nat1 else spec (Elt (nat2)) = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else spec (Elt (nat2))

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (nat2)(rank : 8.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
---------------------------------------
forall (clist1:clist), nat1 = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else spec (Elt (nat2))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat1) (mainNew (clist2))(rank:9.)
=================================================
Progress: 196


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
---------------------------------------
forall (clist1:clist), nat1 = if lq (nat1) (mainNew (clist2)) then mainNew (clist1) else spec (Elt (nat2))

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (mainNew (clist2))(rank : 9.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
Case2 : lq (nat1) (mainNew (clist2)) = true
---------------------------------------
forall (clist1:clist), nat1 = mainNew (clist1)

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist1(rank:10.)
=================================================
Progress: 197


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
Case2 : lq (nat1) (mainNew (clist2)) = true
---------------------------------------
forall (clist1:clist), nat1 = mainNew (clist1)

4 goal(s) more...

1 conjecture(s) more...
>>> induction clist1(rank : 10.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
Case2 : lq (nat1) (mainNew (clist2)) = true
clist1 : clist
nat3 : nat
Base3 : clist1 = Single (nat3)
---------------------------------------
nat1 = mainNew (Single (nat3))

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 198


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
Case2 : lq (nat1) (mainNew (clist2)) = true
clist1 : clist
nat3 : nat
Base3 : clist1 = Single (nat3)
---------------------------------------
nat1 = mainNew (Single (nat3))

5 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (elist1:elist) (elist2:elist) (clist1:clist) (clist2:clist), spec (tf3 (elist1) (elist2)) = if lq (spec (elist2)) (mainNew (clist2)) then mainNew (clist1) else spec (elist1)
clist2 : clist
elist2 : elist
nat1 : nat
Base1 : elist2 = Elt (nat1)
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat1) (nat2) = true
Case2 : lq (nat1) (mainNew (clist2)) = true
clist1 : clist
nat3 : nat
Base3 : clist1 = Single (nat3)
---------------------------------------
nat1 = nat3

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
