Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:clist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), spec (repr (clist1)) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction clist1(rank:5.)
=================================================
Progress: 3


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), spec (repr (clist1)) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction clist1(rank : 5.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
Base1 : clist1 = Cnil
---------------------------------------
spec (repr (Cnil)) = mainNew (Cnil)

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:4.)
=================================================
Progress: 4


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
Base1 : clist1 = Cnil
---------------------------------------
spec (repr (Cnil)) = mainNew (Cnil)

2 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
spec (repr (Single (nat1))) = mainNew (Single (nat1))

1 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 5


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
spec (repr (Single (nat1))) = mainNew (Single (nat1))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (repr (Concats (clist2) (clist3))) = mainNew (Concats (clist2) (clist3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 6


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (repr (Concats (clist2) (clist3))) = mainNew (Concats (clist2) (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (mainNew (clist2)) (mainNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 7


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (mainNew (clist2)) (mainNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 11.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (spec (repr (clist2))) (mainNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:3.)
=================================================
Progress: 8


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (spec (repr (clist2))) (mainNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (spec (repr (clist2))) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
Prop: spec (tf3 ((Nil)) ((ZERO::(Nil)))) = plus (spec ((ZERO::(Nil)))) (spec ((Nil)))
Prop: spec (tf3 ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))) ((Nil))) = plus (spec ((Nil))) (spec ((SUCC (ZERO)::(ZERO::(ZERO::(Nil))))))
Prop: spec (tf3 ((ZERO::(Nil))) ((Nil))) = plus (spec ((Nil))) (spec ((ZERO::(Nil))))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
Prop: spec (tf3 (repr (Single (ZERO))) ((Nil))) = plus (spec ((Nil))) (mainNew (Single (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) ((Nil))) = plus (spec ((Nil))) (mainNew (Single (ZERO)))
Prop: spec (tf3 (repr (Single (ZERO))) ((Nil))) = plus (spec ((Nil))) (mainNew (Single (ZERO)))
previous tactics
simpl in goal
parent
repr (clist2)
lower
repr(_)
upper
spec(tf3(repr(clist3), _))
remove upper
repr(clist2)
remove lower
repr(_)
remove upper
tf3(repr(clist5), repr(clist4))
remove lower
tf3(repr(clist5), repr(_))
remove upper
tf3(repr(clist5), tf3(repr(clist7), repr(clist6)))
remove lower
tf3(repr(clist5), tf3(repr(clist7), repr(_)))
parent
mainNew (clist2)
lower
mainNew(_)
upper
plus(_, mainNew(clist3))
remove upper
mainNew(clist2)
remove lower
mainNew(_)
remove upper
plus(mainNew(clist4), mainNew(clist5))
remove lower
plus(mainNew(_), mainNew(clist5))
remove upper
plus(plus(mainNew(clist6), mainNew(clist7)), mainNew(clist5))
remove lower
plus(plus(mainNew(_), mainNew(clist7)), mainNew(clist5))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Single (SUCC (ZERO)))) (repr (Concats (Cnil) (Cnil)))) = plus (mainNew (Concats (Cnil) (Cnil))) (mainNew (Single (SUCC (ZERO))))
Prop: spec (tf3 (repr (Cnil)) (repr (Concats (Cnil) (Single (ZERO))))) = plus (mainNew (Concats (Cnil) (Single (ZERO)))) (mainNew (Cnil))
Prop: spec (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (repr (Concats (Single (SUCC (ZERO))) (Concats (Single (ZERO)) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Concats (Cnil) (Concats (Concats (Single (ZERO)) (Cnil)) (Single (ZERO)))) (Concats (Single (ZERO)) (Cnil)))))))) = plus (mainNew (Concats (Single (SUCC (ZERO))) (Concats (Single (ZERO)) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Concats (Concats (Cnil) (Concats (Concats (Single (ZERO)) (Cnil)) (Single (ZERO)))) (Concats (Single (ZERO)) (Cnil))))))) (mainNew (Concats (Single (SUCC (ZERO))) (Single (ZERO))))
Lemma List
forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (spec (repr (clist2))) (mainNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
Lemma List
forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (spec (repr (clist2))) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 9


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (spec (repr (clist2))) (mainNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))(rank : 0.)


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))

---------------------------------------
forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:14.)
induction clist1(rank:15.)
=================================================
Progress: 10


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (spec (repr (clist2))) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:14.)
induction nat_list2(rank:14.)
=================================================
Progress: 11


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (mainNew (clist2)) (mainNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 11.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (mainNew (clist2)) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
Prop: spec (tf3 ((SUCC (SUCC (ZERO))::(Nil))) (repr (Concats (Concats (Single (ZERO)) (Cnil)) (Cnil)))) = plus (mainNew (Concats (Concats (Single (ZERO)) (Cnil)) (Cnil))) (spec ((SUCC (SUCC (ZERO))::(Nil))))
Prop: spec (tf3 ((ZERO::(Nil))) (repr (Single (SUCC (ZERO))))) = plus (mainNew (Single (SUCC (ZERO)))) (spec ((ZERO::(Nil))))
Prop: spec (tf3 ((ZERO::(Nil))) (repr (Concats (Single (ZERO)) (Single (ZERO))))) = plus (mainNew (Concats (Single (ZERO)) (Single (ZERO)))) (spec ((ZERO::(Nil))))
previous tactics
simpl in goal
parent
repr (clist2)
lower
repr(_)
upper
spec(tf3(repr(clist3), _))
remove upper
repr(clist2)
remove lower
repr(_)
remove upper
tf3(repr(clist5), repr(clist4))
remove lower
tf3(repr(clist5), repr(_))
remove upper
tf3(repr(clist5), tf3(repr(clist7), repr(clist6)))
remove lower
tf3(repr(clist5), tf3(repr(clist7), repr(_)))
parent
mainNew (clist2)
lower
mainNew(_)
upper
plus(_, mainNew(clist3))
remove upper
mainNew(clist2)
remove lower
mainNew(_)
remove upper
plus(mainNew(clist4), mainNew(clist5))
remove lower
plus(mainNew(_), mainNew(clist5))
remove upper
plus(plus(mainNew(clist6), mainNew(clist7)), mainNew(clist5))
remove lower
plus(plus(mainNew(_), mainNew(clist7)), mainNew(clist5))
validate generalize_common_subterm_goal
Prop: spec (tf3 (repr (Concats (Cnil) (Concats (Cnil) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO)))))) (repr (Cnil))) = plus (mainNew (Cnil)) (mainNew (Concats (Cnil) (Concats (Cnil) (Concats (Concats (Single (ZERO)) (Single (ZERO))) (Single (ZERO))))))
Prop: spec (tf3 (repr (Concats (Cnil) (Cnil))) (repr (Cnil))) = plus (mainNew (Cnil)) (mainNew (Concats (Cnil) (Cnil)))
Prop: spec (tf3 (repr (Cnil)) (repr (Concats (Cnil) (Single (ZERO))))) = plus (mainNew (Concats (Cnil) (Single (ZERO)))) (mainNew (Cnil))
Lemma List
forall (nat_list1:nat list) (clist1:clist), spec (tf3 (nat_list1) (repr (clist1))) = plus (mainNew (clist1)) (spec (nat_list1))
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (mainNew (clist2)) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 12


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (mainNew (clist2)) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat_list1:nat list) (clist1:clist), spec (tf3 (nat_list1) (repr (clist1))) = plus (mainNew (clist1)) (spec (nat_list1))(rank : 0.)


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (nat_list1) (repr (clist1))) = plus (mainNew (clist1)) (spec (nat_list1))

---------------------------------------
forall (nat_list1:nat list) (clist1:clist), spec (tf3 (nat_list1) (repr (clist1))) = plus (mainNew (clist1)) (spec (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat_list1(rank:14.)
induction clist1(rank:15.)
=================================================
Progress: 13


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))

---------------------------------------
forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (clist1:clist), spec (tf3 (repr (clist1)) ((Nil))) = plus (spec ((Nil))) (mainNew (clist1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 14


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (clist1:clist), spec (tf3 (repr (clist1)) ((Nil))) = plus (spec ((Nil))) (mainNew (clist1))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (clist1:clist), spec (repr (clist1)) = mainNew (clist1)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist1(rank:8.)
=================================================
Progress: 15


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (clist1:clist), spec (repr (clist1)) = mainNew (clist1)

1 goal(s) more...

1 conjecture(s) more...
>>> induction clist1(rank : 8.)


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
clist1 : clist
Base2 : clist1 = Cnil
---------------------------------------
spec (repr (Cnil)) = mainNew (Cnil)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 16


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
clist1 : clist
Base2 : clist1 = Cnil
---------------------------------------
spec (repr (Cnil)) = mainNew (Cnil)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
clist1 : clist
nat1 : nat
Base2 : clist1 = Single (nat1)
---------------------------------------
spec (repr (Single (nat1))) = mainNew (Single (nat1))

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 17


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
clist1 : clist
nat1 : nat
Base2 : clist1 = Single (nat1)
---------------------------------------
spec (repr (Single (nat1))) = mainNew (Single (nat1))

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (repr (Concats (clist2) (clist3))) = mainNew (Concats (clist2) (clist3))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 18


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (repr (Concats (clist2) (clist3))) = mainNew (Concats (clist2) (clist3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (clist1:clist), spec (tf3 (repr (clist1)) (nat_list1)) = plus (spec (nat_list1)) (mainNew (clist1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (mainNew (clist2)) (mainNew (clist3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH1 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 19


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list1(rank : 14.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), spec (tf3 ((Nil)) (nat_list2)) = plus (spec (nat_list2)) (spec ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 20


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), spec (tf3 ((Nil)) (nat_list2)) = plus (spec (nat_list2)) (spec ((Nil)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), spec (tf3 ((Nil)) (nat_list2)) = plus (spec (nat_list2)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat_list2(rank:7.)
=================================================
Progress: 21


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
---------------------------------------
forall (nat_list2:nat list), spec (tf3 ((Nil)) (nat_list2)) = plus (spec (nat_list2)) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 7.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
spec (tf3 ((Nil)) ((Nil))) = plus (spec ((Nil))) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 22


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
Base2 : nat_list2 = (Nil)
---------------------------------------
spec (tf3 ((Nil)) ((Nil))) = plus (spec ((Nil))) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : spec (tf3 ((Nil)) (nat_list3)) = plus (spec (nat_list3)) (ZERO)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
spec (tf3 ((Nil)) ((nat1::nat_list3))) = plus (spec ((nat1::nat_list3))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 23


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : spec (tf3 ((Nil)) (nat_list3)) = plus (spec (nat_list3)) (ZERO)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
spec (tf3 ((Nil)) ((nat1::nat_list3))) = plus (spec ((nat1::nat_list3))) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list1 : nat list
Base1 : nat_list1 = (Nil)
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : spec (tf3 ((Nil)) (nat_list3)) = plus (spec (nat_list3)) (ZERO)
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
SUCC (spec (tf3 ((Nil)) (nat_list3))) = SUCC (plus (spec (nat_list3)) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:14.)
rewrite <- IH1 in goal at 0(rank:14.)
=================================================
Progress: 24


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))

---------------------------------------
forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat_list2(rank : 14.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), spec (tf3 (nat_list1) ((Nil))) = plus (spec ((Nil))) (spec (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 25


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list2 : nat list
Base1 : nat_list2 = (Nil)
---------------------------------------
forall (nat_list1:nat list), spec (tf3 (nat_list1) ((Nil))) = plus (spec ((Nil))) (spec (nat_list1))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), spec (tf3 (nat_list1) (nat_list3)) = plus (spec (nat_list3)) (spec (nat_list1))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), spec (tf3 (nat_list1) ((nat1::nat_list3))) = plus (spec ((nat1::nat_list3))) (spec (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 26


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), spec (tf3 (nat_list1) (nat_list3)) = plus (spec (nat_list3)) (spec (nat_list1))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), spec (tf3 (nat_list1) ((nat1::nat_list3))) = plus (spec ((nat1::nat_list3))) (spec (nat_list1))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), spec (tf3 (nat_list1) (nat_list3)) = plus (spec (nat_list3)) (spec (nat_list1))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), SUCC (spec (tf3 (nat_list1) (nat_list3))) = SUCC (plus (spec (nat_list3)) (spec (nat_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
induction nat_list1(rank:14.)
rewrite <- IH1 in goal at 0(rank:13.)
=================================================
Progress: 27


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), spec (tf3 (nat_list1) (nat_list3)) = plus (spec (nat_list3)) (spec (nat_list1))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), SUCC (spec (tf3 (nat_list1) (nat_list3))) = SUCC (plus (spec (nat_list3)) (spec (nat_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), spec (tf3 (nat_list1) (nat_list3)) = plus (spec (nat_list3)) (spec (nat_list1))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), SUCC (plus (spec (nat_list3)) (spec (nat_list1))) = SUCC (plus (spec (nat_list3)) (spec (nat_list1)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 28


1st goal of : forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
nat_list2 : nat list
nat1 : nat
nat_list3 : nat list
IH1 : forall (nat_list1:nat list), spec (tf3 (nat_list1) (nat_list3)) = plus (spec (nat_list3)) (spec (nat_list1))
Inductive1 : nat_list2 = (nat1::nat_list3)
---------------------------------------
forall (nat_list1:nat list), SUCC (plus (spec (nat_list3)) (spec (nat_list1))) = SUCC (plus (spec (nat_list3)) (spec (nat_list1)))

0 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (spec (repr (clist2))) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
original goal
forall (clist1:clist), main (clist1) = mainNew (clist1)
lemma
forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
tactics
assert forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
induction nat_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 4
Tactic List : 2
rewrite lemma3 in goal at 0(rank:11.)
rewrite <- lemma3 in goal at 0(rank:11.)
=================================================
Progress: 29


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
spec (tf3 (repr (clist3)) (repr (clist2))) = plus (spec (repr (clist2))) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 11.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
plus (spec (repr (clist2))) (spec (repr (clist3))) = plus (spec (repr (clist2))) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0.)
=================================================
Progress: 30


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : spec (repr (clist2)) = mainNew (clist2)
IH2 : spec (repr (clist3)) = mainNew (clist3)
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
plus (spec (repr (clist2))) (spec (repr (clist3))) = plus (spec (repr (clist2))) (spec (repr (clist3)))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0.)


No conjecture
Proof Success
Proof
assert forall (clist1:clist), main (clist1) = mainNew (clist1)
simpl in goal
induction clist1
reflexivity
reflexivity
simpl in goal
rewrite <- IH1 in goal at 0
rewrite <- IH2 in goal at 0
assert forall (nat_list1:nat list) (nat_list2:nat list), spec (tf3 (nat_list1) (nat_list2)) = plus (spec (nat_list2)) (spec (nat_list1))
induction nat_list2
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 0
reflexivity
Qed
