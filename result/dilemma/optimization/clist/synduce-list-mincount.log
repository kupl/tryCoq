Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:clist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), match (tf1 (repr (clist1))) with
| Tuple2 _ b -> b = match (reprNew (clist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction clist1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), match (tf1 (repr (clist1))) with
| Tuple2 _ b -> b = match (reprNew (clist1)) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> induction clist1(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
match (tf1 (repr (Single (nat1)))) with
| Tuple2 _ b -> b = match (reprNew (Single (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
nat1 : nat
Base1 : clist1 = Single (nat1)
---------------------------------------
match (tf1 (repr (Single (nat1)))) with
| Tuple2 _ b -> b = match (reprNew (Single (nat1))) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
match (tf1 (repr (Concats (clist2) (clist3)))) with
| Tuple2 _ b -> b = match (reprNew (Concats (clist2) (clist3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
match (tf1 (repr (Concats (clist2) (clist3)))) with
| Tuple2 _ b -> b = match (reprNew (Concats (clist2) (clist3))) with
| Tuple2 a _ -> a

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = if lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b) then fst3 (reprNew (clist2)) else if nat_eq (snd3 (reprNew (clist3))) (snd3 (reprNew (clist2))) then plus (fst3 (reprNew (clist3))) (fst3 (reprNew (clist2))) else fst3 (reprNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b)(rank:4.)
=================================================
Progress: 6


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = if lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b) then fst3 (reprNew (clist2)) else if nat_eq (snd3 (reprNew (clist3))) (snd3 (reprNew (clist2))) then plus (fst3 (reprNew (clist3))) (fst3 (reprNew (clist2))) else fst3 (reprNew (clist3))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b)(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:4.)
=================================================
Progress: 7


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b)
rewrite <- IH1 in goal at 0
Prop: match (tf1 (tf3 (repr (Single (ZERO))) (Elt (SUCC (SUCC (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = match (tf1 (Elt (SUCC (SUCC (SUCC (ZERO)))))) with
| Tuple2 _ b -> b
Prop: match (tf1 (tf3 (repr (Single (ZERO))) (Elt (ZERO)))) with
| Tuple2 _ b -> b = match (tf1 (Elt (ZERO))) with
| Tuple2 _ b -> b
Prop: match (tf1 (tf3 (repr (Single (ZERO))) (Econs (ZERO) (Elt (ZERO))))) with
| Tuple2 _ b -> b = match (tf1 (Econs (ZERO) (Elt (ZERO)))) with
| Tuple2 _ b -> b
validate generalize_common_subterm_goal
Prop: match (tf1 (tf3 (repr (Single (ZERO))) (Elt (ZERO)))) with
| Tuple2 _ b -> b = match (tf1 (Elt (ZERO))) with
| Tuple2 _ b -> b
Prop: match (tf1 (tf3 (repr (Concats (Single (SUCC (ZERO))) (Single (ZERO)))) (Elt (ZERO)))) with
| Tuple2 _ b -> b = match (tf1 (Elt (ZERO))) with
| Tuple2 _ b -> b
Prop: match (tf1 (tf3 (repr (Single (ZERO))) (Elt (SUCC (ZERO))))) with
| Tuple2 _ b -> b = match (tf1 (Elt (SUCC (ZERO)))) with
| Tuple2 _ b -> b
previous tactics
simpl in goal
case lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b)
validate generalize_common_subterm_goal
Prop: match (tf1 (tf3 (repr (Single (ZERO))) (repr (Concats (Single (ZERO)) (Single (SUCC (ZERO))))))) with
| Tuple2 _ b -> b = match (reprNew (Concats (Single (ZERO)) (Single (SUCC (ZERO))))) with
| Tuple2 a _ -> a
Prop: match (tf1 (tf3 (repr (Single (ZERO))) (repr (Concats (Single (ZERO)) (Single (ZERO)))))) with
| Tuple2 _ b -> b = match (reprNew (Concats (Single (ZERO)) (Single (ZERO)))) with
| Tuple2 a _ -> a
Prop: match (tf1 (tf3 (repr (Single (SUCC (ZERO)))) (repr (Concats (Concats (Single (ZERO)) (Concats (Concats (Single (SUCC (ZERO))) (Single (SUCC (ZERO)))) (Single (ZERO)))) (Concats (Single (ZERO)) (Single (ZERO))))))) with
| Tuple2 _ b -> b = match (reprNew (Concats (Concats (Single (ZERO)) (Concats (Concats (Single (SUCC (ZERO))) (Single (SUCC (ZERO)))) (Single (ZERO)))) (Concats (Single (ZERO)) (Single (ZERO))))) with
| Tuple2 a _ -> a
asdf
Lemma List
forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
End of Lemma List


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b

1 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
clist2 : clist
clist3 : clist
IH1 : match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b = match (reprNew (clist2)) with
| Tuple2 a _ -> a
IH2 : match (tf1 (repr (clist3))) with
| Tuple2 _ b -> b = match (reprNew (clist3)) with
| Tuple2 a _ -> a
Inductive1 : clist1 = Concats (clist2) (clist3)
Case1 : lq (match (reprNew (clist2)) with
| Tuple2 _ b -> b) (match (reprNew (clist3)) with
| Tuple2 _ b -> b) = true
---------------------------------------
match (tf1 (tf3 (repr (clist3)) (repr (clist2)))) with
| Tuple2 _ b -> b = match (tf1 (repr (clist2))) with
| Tuple2 _ b -> b

1 goal(s) more...

0 conjecture(s) more...
>>> assert forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b(rank : 0.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro clist1(rank:5.)
=================================================
Progress: 9


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

---------------------------------------
forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

0 goal(s) more...

1 conjecture(s) more...
>>> intro clist1(rank : 5.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
---------------------------------------
forall (elist1:elist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction clist2(rank:6.)
=================================================
Progress: 10


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
---------------------------------------
forall (elist1:elist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

0 goal(s) more...

1 conjecture(s) more...
>>> induction clist2(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (Single (nat1))) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (Single (nat1))) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 11


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (Single (nat1))) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (Single (nat1))) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true -> match (tf1 (tf3 (Elt (nat1)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 12


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
---------------------------------------
forall (elist1:elist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true -> match (tf1 (tf3 (Elt (nat1)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
forall (elist1:elist), match (tf1 (tf3 (Elt (nat1)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction elist1(rank:7.)
=================================================
Progress: 13


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
---------------------------------------
forall (elist1:elist), match (tf1 (tf3 (Elt (nat1)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b

1 goal(s) more...

1 conjecture(s) more...
>>> induction elist1(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
match (tf1 (tf3 (Elt (nat1)) (Elt (nat2)))) with
| Tuple2 _ b -> b = match (tf1 (Elt (nat2))) with
| Tuple2 _ b -> b

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 14


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
match (tf1 (tf3 (Elt (nat1)) (Elt (nat2)))) with
| Tuple2 _ b -> b = match (tf1 (Elt (nat2))) with
| Tuple2 _ b -> b

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then SUCC (ZERO) else plus (snd3 (tf1 (Elt (nat1)))) (if nat_eq (nat2) (fst3 (tf1 (Elt (nat1)))) then SUCC (ZERO) else ZERO) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (nat1)(rank:8.)
=================================================
Progress: 15


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
---------------------------------------
if lq (nat2) (nat1) then SUCC (ZERO) else plus (snd3 (tf1 (Elt (nat1)))) (if nat_eq (nat2) (fst3 (tf1 (Elt (nat1)))) then SUCC (ZERO) else ZERO) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (nat1)(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = true
---------------------------------------
SUCC (ZERO) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 16


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = true
---------------------------------------
SUCC (ZERO) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
SUCC (if nat_eq (nat2) (nat1) then SUCC (ZERO) else ZERO) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
case nat_eq (nat2) (nat1)(rank:8.)
=================================================
Progress: 17


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
---------------------------------------
SUCC (if nat_eq (nat2) (nat1) then SUCC (ZERO) else ZERO) = SUCC (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> case nat_eq (nat2) (nat1)(rank : 8.)


1st goal of : forall (elist1:elist) (clist1:clist) (clist2:clist), lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (match (reprNew (clist2)) with
| Tuple2 _ b -> b) = true -> match (tf1 (tf3 (repr (clist2)) (elist1))) with
| Tuple2 _ b -> b = match (tf1 (elist1)) with
| Tuple2 _ b -> b
clist1 : clist
clist2 : clist
nat1 : nat
Base1 : clist2 = Single (nat1)
Cond1 : lq (match (reprNew (clist1)) with
| Tuple2 _ b -> b) (nat1) = true
elist1 : elist
nat2 : nat
Base2 : elist1 = Elt (nat2)
Case1 : lq (nat2) (nat1) = false
Case2 : nat_eq (nat2) (nat1) = true
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (ZERO)

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (nat2) (nat1)
reflexivity
case nat_eq (nat2) (nat1)
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 283, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
