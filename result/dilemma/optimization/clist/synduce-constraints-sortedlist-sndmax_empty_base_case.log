Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:clist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), main (clist1) = mainNew (clist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), if tf5 (tf2 (clist1)) then spec (repr (target (clist1))) else ZERO = if tf5 (tf2 (clist1)) then fst3 (targetNew (clist1)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
intro clist1(rank:3.)
=================================================
Progress: 3


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)

---------------------------------------
forall (clist1:clist), if tf5 (tf2 (clist1)) then spec (repr (target (clist1))) else ZERO = if tf5 (tf2 (clist1)) then fst3 (targetNew (clist1)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> intro clist1(rank : 3.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
---------------------------------------
if tf5 (tf2 (clist1)) then spec (repr (target (clist1))) else ZERO = if tf5 (tf2 (clist1)) then fst3 (targetNew (clist1)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case tf5 (tf2 (clist1))(rank:4.)
=================================================
Progress: 4


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
---------------------------------------
if tf5 (tf2 (clist1)) then spec (repr (target (clist1))) else ZERO = if tf5 (tf2 (clist1)) then fst3 (targetNew (clist1)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> case tf5 (tf2 (clist1))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
Case1 : tf5 (tf2 (clist1)) = true
---------------------------------------
match (tf7 (tf2 (tf9 (clist1)))) with
| Tuple2 _ b -> b = match (tf11 (clist1)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case tf11 (clist1)(rank:4.)
case tf7 (tf2 (tf9 (clist1)))(rank:4.)
=================================================
Progress: 5


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
Case1 : tf5 (tf2 (clist1)) = true
---------------------------------------
match (tf7 (tf2 (tf9 (clist1)))) with
| Tuple2 _ b -> b = match (tf11 (clist1)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case tf11 (clist1)(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
Case1 : tf5 (tf2 (clist1)) = true
Case2 : tf11 (clist1) = Tuple2 (nat1) (nat2)
---------------------------------------
match (tf7 (tf2 (tf9 (clist1)))) with
| Tuple2 _ b -> b = nat1

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: match (tf7 (tf2 (tf9 (Concats (Elt (SUCC (SUCC (ZERO)))) (Elt (ZERO)))))) with
| Tuple2 _ b -> b = ZERO
Prop: match (tf7 (tf2 (tf9 (Elt (SUCC (ZERO)))))) with
| Tuple2 _ b -> b = ZERO
Prop: match (tf7 (tf2 (tf9 (Elt (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))))))) with
| Tuple2 _ b -> b = SUCC (ZERO)
asdf
=================================================
Progress: 6


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
Case1 : tf5 (tf2 (clist1)) = true
---------------------------------------
match (tf7 (tf2 (tf9 (clist1)))) with
| Tuple2 _ b -> b = match (tf11 (clist1)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
>>> case tf7 (tf2 (tf9 (clist1)))(rank : 4.)


1st goal of : forall (clist1:clist), main (clist1) = mainNew (clist1)
clist1 : clist
Case1 : tf5 (tf2 (clist1)) = true
Case2 : tf7 (tf2 (tf9 (clist1))) = Tuple2 (nat1) (nat2)
---------------------------------------
nat2 = match (tf11 (clist1)) with
| Tuple2 a _ -> a

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = match (tf11 (Empty)) with
| Tuple2 a _ -> a
Prop: SUCC (ZERO) = match (tf11 (Empty)) with
| Tuple2 a _ -> a
Prop: ZERO = match (tf11 (Empty)) with
| Tuple2 a _ -> a
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
