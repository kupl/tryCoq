Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (lst:ulist), main (lst) = mainNew (lst)(rank : 0.)


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)

---------------------------------------
forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)

---------------------------------------
forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)

---------------------------------------
forall (ulist1:ulist), if match (repr (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist1))) else ZERO = if match (repr (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction ulist1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)

---------------------------------------
forall (ulist1:ulist), if match (repr (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist1))) else ZERO = if match (repr (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> induction ulist1(rank : 4.)


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
nat1 : nat
Base1 : ulist1 = Uelt (nat1)
---------------------------------------
if match (repr (Uelt (nat1))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (Uelt (nat1)))) else ZERO = if match (repr (Uelt (nat1))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (Uelt (nat1)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
nat1 : nat
Base1 : ulist1 = Uelt (nat1)
---------------------------------------
if match (repr (Uelt (nat1))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (Uelt (nat1)))) else ZERO = if match (repr (Uelt (nat1))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (Uelt (nat1)) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
---------------------------------------
if match (repr (Usplit (ulist2) (nat1) (nat2) (ulist3))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (Usplit (ulist2) (nat1) (nat2) (ulist3)))) else ZERO = if match (repr (Usplit (ulist2) (nat1) (nat2) (ulist3))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (Usplit (ulist2) (nat1) (nat2) (ulist3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
---------------------------------------
if match (repr (Usplit (ulist2) (nat1) (nat2) (ulist3))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (Usplit (ulist2) (nat1) (nat2) (ulist3)))) else ZERO = if match (repr (Usplit (ulist2) (nat1) (nat2) (ulist3))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (Usplit (ulist2) (nat1) (nat2) (ulist3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
---------------------------------------
if match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (Usplit (ulist2) (nat1) (nat2) (ulist3)))) else ZERO = if match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (Usplit (ulist2) (nat1) (nat2) (ulist3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl)(rank:4.)
=================================================
Progress: 6


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
---------------------------------------
if match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (Usplit (ulist2) (nat1) (nat2) (ulist3)))) else ZERO = if match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (Usplit (ulist2) (nat1) (nat2) (ulist3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> case match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl)(rank : 4.)


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
Case1 : match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true
---------------------------------------
spec (repr (if gq (nat1) (nat2) then Usplit (target (ulist2)) (nat1) (nat2) (ulist3) else Usplit (ulist2) (nat1) (nat2) (target (ulist3)))) = if gq (nat1) (nat2) then max (nat1) (targetNew (ulist2)) else max (nat2) (targetNew (ulist3))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case gq (nat1) (nat2)(rank:5.)
=================================================
Progress: 7


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
Case1 : match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true
---------------------------------------
spec (repr (if gq (nat1) (nat2) then Usplit (target (ulist2)) (nat1) (nat2) (ulist3) else Usplit (ulist2) (nat1) (nat2) (target (ulist3)))) = if gq (nat1) (nat2) then max (nat1) (targetNew (ulist2)) else max (nat2) (targetNew (ulist3))

1 goal(s) more...

0 conjecture(s) more...
>>> case gq (nat1) (nat2)(rank : 5.)


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
Case1 : match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true
Case2 : gq (nat1) (nat2) = true
---------------------------------------
spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (target (ulist2))) = if lq (nat1) (targetNew (ulist2)) then targetNew (ulist2) else nat1

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (nat1) (targetNew (ulist2))(rank:6.)
=================================================
Progress: 8


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
Case1 : match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true
Case2 : gq (nat1) (nat2) = true
---------------------------------------
spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (target (ulist2))) = if lq (nat1) (targetNew (ulist2)) then targetNew (ulist2) else nat1

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (nat1) (targetNew (ulist2))(rank : 6.)


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
Case1 : match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true
Case2 : gq (nat1) (nat2) = true
Case3 : lq (nat1) (targetNew (ulist2)) = true
---------------------------------------
spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (target (ulist2))) = targetNew (ulist2)

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl)
case gq (nat1) (nat2)
case lq (nat1) (targetNew (ulist2))
parent
Econs (nat1) (Econs (nat2) (repr (ulist3)))
lower
Econs(_, Econs(nat2, repr(ulist3)))
upper
spec(tf1(_, target(ulist2)))
remove upper
Econs(nat1, Econs(nat2, repr(ulist3)))
remove lower
Econs(nat1, Econs(nat2, repr(ulist3)))
remove upper
Econs(nat1, Econs(nat2, repr(ulist3)))
remove lower
Econs(nat1, Econs(nat2, repr(ulist3)))
remove upper
Econs(nat1, Econs(nat2, repr(ulist3)))
remove lower
Econs(nat1, Econs(nat2, repr(ulist3)))
parent
targetNew (ulist2)
lower
targetNew(_)
upper
_
remove upper
_
validate generalize_common_subterm_goal
Prop: spec (tf1 (Econs (ZERO) (Econs (ZERO) (repr (Uelt (ZERO))))) (target (Usplit (Uelt (ZERO)) (ZERO) (ZERO) (Uelt (ZERO))))) = targetNew (Usplit (Uelt (ZERO)) (ZERO) (ZERO) (Uelt (ZERO)))
Prop: spec (tf1 (Econs (ZERO) (Econs (ZERO) (repr (Uelt (ZERO))))) (target (Usplit (Usplit (Usplit (Uelt (ZERO)) (SUCC (ZERO)) (ZERO) (Uelt (SUCC (SUCC (ZERO))))) (ZERO) (SUCC (ZERO)) (Uelt (ZERO))) (ZERO) (SUCC (ZERO)) (Uelt (ZERO))))) = targetNew (Usplit (Usplit (Usplit (Uelt (ZERO)) (SUCC (ZERO)) (ZERO) (Uelt (SUCC (SUCC (ZERO))))) (ZERO) (SUCC (ZERO)) (Uelt (ZERO))) (ZERO) (SUCC (ZERO)) (Uelt (ZERO)))
Prop: spec (tf1 (Econs (SUCC (SUCC (ZERO))) (Econs (ZERO) (repr (Uelt (ZERO))))) (target (Usplit (Usplit (Uelt (ZERO)) (ZERO) (ZERO) (Uelt (SUCC (ZERO)))) (ZERO) (ZERO) (Uelt (ZERO))))) = targetNew (Usplit (Usplit (Uelt (ZERO)) (ZERO) (ZERO) (Uelt (SUCC (ZERO)))) (ZERO) (ZERO) (Uelt (ZERO)))
Lemma List
forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
End of Lemma List


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
Case1 : match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true
Case2 : gq (nat1) (nat2) = true
Case3 : lq (nat1) (targetNew (ulist2)) = true
---------------------------------------
spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (target (ulist2))) = targetNew (ulist2)

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 9


1st goal of : forall (ulist1:ulist), main (ulist1) = mainNew (ulist1)
ulist1 : ulist
ulist2 : ulist
nat1 : nat
nat2 : nat
ulist3 : ulist
IH1 : if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist2))) else ZERO = if match (repr (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist2) else ZERO
IH2 : if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then spec (repr (target (ulist3))) else ZERO = if match (repr (ulist3)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) then targetNew (ulist3) else ZERO
Inductive1 : ulist1 = Usplit (ulist2) (nat1) (nat2) (ulist3)
Case1 : match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (ulist2)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true
Case2 : gq (nat1) (nat2) = true
Case3 : lq (nat1) (targetNew (ulist2)) = true
---------------------------------------
spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist3)))) (target (ulist2))) = targetNew (ulist2)

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat1(rank:5.)
=================================================
Progress: 10


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)

---------------------------------------
forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
---------------------------------------
forall (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 11


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
---------------------------------------
forall (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
---------------------------------------
forall (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction ulist1(rank:6.)
=================================================
Progress: 12


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
---------------------------------------
forall (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)

0 goal(s) more...

1 conjecture(s) more...
>>> induction ulist1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
---------------------------------------
forall (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (Uelt (nat3))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (Uelt (nat3))) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (Uelt (nat3)))) = targetNew (Uelt (nat3))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 13


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
---------------------------------------
forall (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (Uelt (nat3))) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (Uelt (nat3))) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (Uelt (nat3)))) = targetNew (Uelt (nat3))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
---------------------------------------
forall (ulist2:ulist), if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (ulist2))) else tf5 (nat1) (Econs (nat2) (repr (ulist2))) = true->gq (nat1) (nat2) = true->lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (spec (repr (ulist2))) then spec (repr (ulist2)) else nat2) then if lq (nat2) (spec (repr (ulist2))) then spec (repr (ulist2)) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (ulist2))) then spec (repr (ulist2)) else nat2) then if lq (nat2) (spec (repr (ulist2))) then spec (repr (ulist2)) else nat2 else nat1 else nat3 = nat3

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction ulist2(rank:7.)
=================================================
Progress: 14


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
---------------------------------------
forall (ulist2:ulist), if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (ulist2))) else tf5 (nat1) (Econs (nat2) (repr (ulist2))) = true->gq (nat1) (nat2) = true->lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (spec (repr (ulist2))) then spec (repr (ulist2)) else nat2) then if lq (nat2) (spec (repr (ulist2))) then spec (repr (ulist2)) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (ulist2))) then spec (repr (ulist2)) else nat2) then if lq (nat2) (spec (repr (ulist2))) then spec (repr (ulist2)) else nat2 else nat1 else nat3 = nat3

1 goal(s) more...

1 conjecture(s) more...
>>> induction ulist2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
---------------------------------------
if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true->gq (nat1) (nat2) = true->lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 15


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
---------------------------------------
if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true->gq (nat1) (nat2) = true->lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
---------------------------------------
if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true->gq (nat1) (nat2) = true->lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 16


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
---------------------------------------
if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true->gq (nat1) (nat2) = true->lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
---------------------------------------
gq (nat1) (nat2) = true->lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 17


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
---------------------------------------
gq (nat1) (nat2) = true->lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
Cond2 : gq (nat1) (nat2) = true
---------------------------------------
lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond3(rank:7.)
=================================================
Progress: 18


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
Cond2 : gq (nat1) (nat2) = true
---------------------------------------
lq (nat1) (nat3) = true -> if lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond3(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
Cond2 : gq (nat1) (nat2) = true
Cond3 : lq (nat1) (nat3) = true
---------------------------------------
if lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1)(rank:8.)
=================================================
Progress: 19


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
Cond2 : gq (nat1) (nat2) = true
Cond3 : lq (nat1) (nat3) = true
---------------------------------------
if lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) then if lq (nat1) (if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 else nat3 = nat3

2 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1)(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
Cond2 : gq (nat1) (nat2) = true
Cond3 : lq (nat1) (nat3) = true
Case1 : lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) = true
---------------------------------------
if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 = nat3

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2)(rank:9.)
=================================================
Progress: 20


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
Cond2 : gq (nat1) (nat2) = true
Cond3 : lq (nat1) (nat3) = true
Case1 : lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1) = true
---------------------------------------
if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1 = nat3

3 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2)(rank : 9.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
Cond2 : gq (nat1) (nat2) = true
Cond3 : lq (nat1) (nat3) = true
Case1 : lq (nat3) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) = true
Case2 : lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) = true
---------------------------------------
if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2 = nat3

4 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
case lq (nat2) (nat4)(rank:10.)
=================================================
Progress: 21


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
Cond2 : gq (nat1) (nat2) = true
Cond3 : lq (nat1) (nat3) = true
Case1 : lq (nat3) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) = true
Case2 : lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) = true
---------------------------------------
if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2 = nat3

4 goal(s) more...

1 conjecture(s) more...
>>> case lq (nat2) (nat4)(rank : 10.)


1st goal of : forall (nat1:nat) (nat2:nat) (ulist1:ulist) (ulist2:ulist), match (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (ulist1)) with
| Elt _ -> true
| Econs n tl -> tf7 (n) (tl) = true->gq (nat1) (nat2) = true->lq (nat1) (targetNew (ulist1)) = true -> spec (tf1 (Econs (nat1) (Econs (nat2) (repr (ulist2)))) (target (ulist1))) = targetNew (ulist1)
nat1 : nat
nat2 : nat
ulist1 : ulist
nat3 : nat
Base1 : ulist1 = Uelt (nat3)
ulist2 : ulist
nat4 : nat
Base2 : ulist2 = Uelt (nat4)
Cond1 : if lq (nat3) (nat1) then tf7 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) else tf5 (nat1) (Econs (nat2) (repr (Uelt (nat4)))) = true
Cond2 : gq (nat1) (nat2) = true
Cond3 : lq (nat1) (nat3) = true
Case1 : lq (nat3) (nat4) = true
Case2 : lq (nat1) (nat4) = true
Case3 : lq (nat2) (nat4) = true
---------------------------------------
nat4 = nat3

5 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
intro Cond3
case lq (nat3) (if lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2) then if lq (nat2) (spec (repr (Uelt (nat4)))) then spec (repr (Uelt (nat4))) else nat2 else nat1)
case lq (nat1) (if lq (nat2) (nat4) then spec (repr (Uelt (nat4))) else nat2)
case lq (nat2) (nat4)
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = ZERO
Prop: ZERO = SUCC (SUCC (SUCC (ZERO)))
Prop: ZERO = ZERO
asdf
Fatal error: exception Failure("worklist is empty")
Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Dilemma__Engine.proof_auto in file "lib/engine.ml", line 284, characters 8-69
Called from Dune__exe__Main.main in file "bin/main.ml", line 24, characters 12-79
