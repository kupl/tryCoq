Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), if balanced (tree1) then height (target (tree1)) else ZERO = if balanced (tree1) then targetNew (tree1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), if balanced (tree1) then height (target (tree1)) else ZERO = if balanced (tree1) then targetNew (tree1) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
if balanced (Leaf) then height (target (Leaf)) else ZERO = if balanced (Leaf) then targetNew (Leaf) else ZERO

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
if balanced (Leaf) then height (target (Leaf)) else ZERO = if balanced (Leaf) then targetNew (Leaf) else ZERO

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then height (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then height (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if balanced (Node (nat1) (tree2) (tree3)) then height (target (Node (nat1) (tree2) (tree3))) else ZERO = if balanced (Node (nat1) (tree2) (tree3)) then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then height (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then height (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if balanced (Node (nat1) (tree2) (tree3)) then height (target (Node (nat1) (tree2) (tree3))) else ZERO = if balanced (Node (nat1) (tree2) (tree3)) then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then height (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then height (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false then height (target (Node (nat1) (tree2) (tree3))) else ZERO = if if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false(rank:4.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then height (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then height (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
if if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false then height (target (Node (nat1) (tree2) (tree3))) else ZERO = if if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false then targetNew (Node (nat1) (tree2) (tree3)) else ZERO

0 goal(s) more...

0 conjecture(s) more...
>>> case if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then height (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then height (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false = true
---------------------------------------
SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2))) = plus (targetNew (tree3)) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (height (target (tree2))) (height (target (tree3)))(rank:5.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then height (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then height (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false = true
---------------------------------------
SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2))) = plus (targetNew (tree3)) (SUCC (ZERO))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (height (target (tree2))) (height (target (tree3)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then height (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then height (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false = true
Case2 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false
case lq (height (target (tree2))) (height (target (tree3)))
validate generalize_common_subterm_goal
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (SUCC (ZERO))
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (SUCC (ZERO))
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (SUCC (ZERO))
Lemma List
forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then height (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then height (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false = true
Case2 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : if balanced (tree2) then height (target (tree2)) else ZERO = if balanced (tree2) then targetNew (tree2) else ZERO
IH2 : if balanced (tree3) then height (target (tree3)) else ZERO = if balanced (tree3) then targetNew (tree3) else ZERO
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : if nat_eq (height (tree2)) (height (tree3)) then if balanced (tree2) then balanced (tree3) else false else false = true
Case2 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))

2 goal(s) more...

0 conjecture(s) more...
>>> assert forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction tree1(rank:6.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> induction tree1(rank : 6.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (height (target (Node (nat1) (tree2) (tree3)))) = plus (targetNew (Node (nat1) (tree2) (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (height (target (Node (nat1) (tree2) (tree3)))) = plus (targetNew (Node (nat1) (tree2) (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
case lq (height (target (tree2))) (height (target (tree3)))(rank:6.)
rewrite <- IH2 in goal at 0(rank:13.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> case lq (height (target (tree2))) (height (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:14.)
rewrite <- IH2 in goal at 0(rank:14.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH2 in goal at 0
simpl in goal
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (ZERO) then ZERO else height (target (Leaf)))) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (ZERO) then ZERO else height (target (Leaf)))) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (if lq (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (ZERO) then ZERO else height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = SUCC (plus (ZERO) (SUCC (ZERO)))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (SUCC (ZERO)) then SUCC (ZERO) else height (target (Leaf)))) = SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (ZERO) then ZERO else height (target (Leaf)))) = SUCC (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (ZERO) then ZERO else height (target (Leaf)))) = SUCC (plus (ZERO) (SUCC (ZERO)))
Lemma List
forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 15


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))

---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 16


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))

---------------------------------------
forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (SUCC (if lq (height (target (Leaf))) (nat1) then nat1 else height (target (Leaf)))) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 17


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (SUCC (if lq (height (target (Leaf))) (nat1) then nat1 else height (target (Leaf)))) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (SUCC (if lq (ZERO) (nat1) then nat1 else height (target (Leaf)))) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:9.)
=================================================
Progress: 18


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (nat1:nat), SUCC (SUCC (if lq (ZERO) (nat1) then nat1 else height (target (Leaf)))) = SUCC (plus (nat1) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (if lq (ZERO) (ZERO) then ZERO else height (target (Leaf)))) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 19


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
Base2 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (if lq (ZERO) (ZERO) then ZERO else height (target (Leaf)))) = SUCC (plus (ZERO) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (if lq (ZERO) (nat2) then nat2 else height (target (Leaf)))) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (if lq (ZERO) (SUCC (nat2)) then SUCC (nat2) else height (target (Leaf)))) = SUCC (plus (SUCC (nat2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 20


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (if lq (ZERO) (nat2) then nat2 else height (target (Leaf)))) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (if lq (ZERO) (SUCC (nat2)) then SUCC (nat2) else height (target (Leaf)))) = SUCC (plus (SUCC (nat2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (if lq (ZERO) (nat2) then nat2 else height (target (Leaf)))) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 21


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (if lq (ZERO) (nat2) then nat2 else height (target (Leaf)))) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (if lq (ZERO) (nat2) then nat2 else height (target (Leaf)))) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (SUCC (if lq (ZERO) (nat2) then nat2 else height (target (Leaf)))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
case lq (ZERO) (nat2)(rank:9.)
=================================================
Progress: 22


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (if lq (ZERO) (nat2) then nat2 else height (target (Leaf)))) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (SUCC (if lq (ZERO) (nat2) then nat2 else height (target (Leaf)))))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (ZERO) (nat2)(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (nat2)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (SUCC (nat2)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 23


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (nat2)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = true
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (SUCC (nat2)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 24


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (ZERO) (nat2)
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite <- IH1 in goal at 0
case lq (ZERO) (nat2)
reflexivity
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 25


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 26


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
induction nat1(rank:10.)
=================================================
Progress: 27


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> intro nat1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:9.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> intro Cond1(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: SUCC (ZERO) = ZERO
Lemma List
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
End of Lemma List


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
=================================================
Progress: 29


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

3 conjecture(s) more...
>>> assert forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO(rank : 0.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro nat1(rank:11.)
=================================================
Progress: 30


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> induction nat1(rank : 10.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (ZERO) (ZERO) = false -> SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
reflexivity(rank:9.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (ZERO) (ZERO) = false -> SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

3 conjecture(s) more...
>>> reflexivity(rank : 9.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : lq (ZERO) (nat2) = false -> SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (ZERO) (SUCC (nat2)) = false -> SUCC (SUCC (nat2)) = plus (SUCC (nat2)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:8.)
=================================================
Progress: 32


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : lq (ZERO) (nat2) = false -> SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (ZERO) (SUCC (nat2)) = false -> SUCC (SUCC (nat2)) = plus (SUCC (nat2)) (SUCC (ZERO))

0 goal(s) more...

3 conjecture(s) more...
>>> discriminate(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
original goal
forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
lemma
forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))
tactics
assert forall (nat1:nat), lq (ZERO) (nat1) = false -> SUCC (nat1) = plus (nat1) (SUCC (ZERO))
induction nat1
reflexivity
discriminate
Deduplication: 0
Tactic List : 5
rewrite lemma3 in goal at 1(rank:17.)
rewrite lemma3 in goal at 2(rank:17.)
rewrite lemma3 in goal at 3(rank:17.)
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
=================================================
Progress: 33


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

---------------------------------------
forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro nat1(rank : 11.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:11.)
=================================================
Progress: 34


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
---------------------------------------
lq (ZERO) (nat1) = false -> nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
>>> intro Cond1(rank : 11.)


1st goal of : forall (nat1:nat), lq (ZERO) (nat1) = false -> nat1 = ZERO
nat1 : nat
Cond1 : lq (ZERO) (nat1) = false
---------------------------------------
nat1 = ZERO

0 goal(s) more...

4 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: ZERO = ZERO
Prop: ZERO = ZERO
Prop: ZERO = ZERO
=================================================
Progress: 35


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (height (target (tree2))) (height (target (tree3)))
rewrite IH2 in goal at 0
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))
previous tactics
simpl in goal
case lq (height (target (tree2))) (height (target (tree3)))
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 36


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 37


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))

---------------------------------------
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 38


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (ZERO) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (nat2)) = plus (SUCC (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 39


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (nat2)) = plus (SUCC (nat2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (nat2)) = SUCC (plus (nat2) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 40


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 14.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (height (target (tree3)))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 41


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (height (target (tree3)))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (height (target (tree3)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH2 in goal at 0(rank:6.)
=================================================
Progress: 42


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (height (target (tree3)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 6.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (height (target (tree2))) (height (target (tree3)))
rewrite <- IH2 in goal at 0
simpl in goal
rewrite IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)) = plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = plus (height (target (Leaf))) (SUCC (ZERO))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = plus (height (target (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
case lq (height (target (tree2))) (height (target (tree3)))
rewrite <- IH2 in goal at 0
simpl in goal
Prop: SUCC (SUCC (SUCC (ZERO))) = SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: SUCC (SUCC (SUCC (ZERO))) = SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: SUCC (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))
Lemma List
forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (height (target (tree3)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 43


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (height (target (tree3)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))

---------------------------------------
forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))

---------------------------------------
forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 45


1st goal of : forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (ZERO)) = SUCC (plus (ZERO) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (nat2)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (plus (SUCC (nat2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 46


1st goal of : forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (nat2)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (plus (SUCC (nat2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), SUCC (SUCC (nat1)) = SUCC (plus (nat1) (SUCC (ZERO)))
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (nat2)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:15.)
rewrite <- IH1 in goal at 0(rank:15.)
=================================================
Progress: 47


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (SUCC (nat2)) = SUCC (plus (nat2) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 15.)


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:6.)
=================================================
Progress: 48


1st goal of : forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
nat1 : nat
nat2 : nat
IH1 : SUCC (nat2) = plus (nat2) (SUCC (ZERO))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
SUCC (plus (nat2) (SUCC (ZERO))) = SUCC (plus (nat2) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 6.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
original goal
forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
lemma
forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
tactics
assert forall (nat1:nat), SUCC (nat1) = plus (nat1) (SUCC (ZERO))
induction nat1
reflexivity
simpl in goal
rewrite IH1 in goal at 0
reflexivity
Deduplication: 1
Tactic List : 8
rewrite lemma3 in goal at 1(rank:14.)
rewrite lemma3 in goal at 2(rank:14.)
rewrite <- lemma3 in goal at 2(rank:14.)
rewrite <- lemma3 in goal at 3(rank:14.)
rewrite <- lemma3 in goal at 0(rank:22.)
rewrite <- lemma3 in goal at 1(rank:22.)
rewrite lemma3 in goal at 3(rank:22.)
rewrite lemma3 in goal at 0(rank:22.)
=================================================
Progress: 49


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 14.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
reflexivity(rank:5.)
=================================================
Progress: 50


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> reflexivity(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 9
Tactic List : 8
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma3 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite lemma3 in goal at 3(rank:21.)
rewrite <- lemma3 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 2(rank:13.)
rewrite lemma3 in goal at 2(rank:13.)
rewrite lemma3 in goal at 0(rank:21.)
=================================================
Progress: 51


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 9
rewrite lemma3 in goal at 1(rank:13.)
rewrite lemma3 in goal at 2(rank:13.)
rewrite <- lemma3 in goal at 2(rank:13.)
rewrite <- lemma3 in goal at 1(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 3(rank:21.)
rewrite <- lemma3 in goal at 3(rank:13.)
rewrite lemma3 in goal at 0(rank:21.)
=================================================
Progress: 52


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma3 in goal at 0(rank:13.)
rewrite lemma3 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 2(rank:13.)
rewrite <- lemma3 in goal at 3(rank:13.)
rewrite lemma3 in goal at 3(rank:21.)
rewrite lemma3 in goal at 1(rank:13.)
=================================================
Progress: 53


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 2(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite lemma3 in goal at 3(rank:21.)
rewrite <- lemma3 in goal at 2(rank:13.)
rewrite <- lemma3 in goal at 3(rank:13.)
rewrite lemma3 in goal at 0(rank:21.)
=================================================
Progress: 54


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 55


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 1(rank:13.)
rewrite lemma3 in goal at 2(rank:13.)
=================================================
Progress: 56


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:5.)
=================================================
Progress: 57


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:21.)
rewrite lemma3 in goal at 1(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
=================================================
Progress: 58


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:5.)
=================================================
Progress: 59


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma3 in goal at 1(rank:13.)
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 1(rank:21.)
=================================================
Progress: 60


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 7
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 2(rank:21.)
rewrite <- lemma3 in goal at 3(rank:21.)
rewrite lemma3 in goal at 3(rank:21.)
rewrite lemma3 in goal at 1(rank:21.)
=================================================
Progress: 61


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 2(rank:21.)
rewrite <- lemma3 in goal at 3(rank:21.)
=================================================
Progress: 62


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 0(rank:21.)
=================================================
Progress: 63


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 1(rank:21.)
rewrite <- lemma3 in goal at 1(rank:21.)
=================================================
Progress: 64


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:5.)
=================================================
Progress: 65


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 66


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:5.)
=================================================
Progress: 67


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Leaf))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Leaf))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 68


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 69


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 70


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 71


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 72


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 73


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 74


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 75


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 76


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 77


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 78


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 79


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 80


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 81


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 82


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 83


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 84


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 85


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 86


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 87


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 88


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 89


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- IH2 in goal at 0(rank:17.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 90


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 91


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
rewrite lemma3 in goal at 3(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 3(rank:21.)
rewrite lemma3 in goal at 1(rank:21.)
=================================================
Progress: 92


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 2(rank:21.)
rewrite <- lemma3 in goal at 3(rank:21.)
=================================================
Progress: 93


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 2(rank:21.)
=================================================
Progress: 94


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = SUCC (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 95


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 96


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 97


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 98


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 99


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 100


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 101


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 102


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 103


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 104


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 105


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 106


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 107


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 1(rank:21.)
=================================================
Progress: 108


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 2(rank:21.)
rewrite <- lemma3 in goal at 3(rank:21.)
=================================================
Progress: 109


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 3(rank:21.)
rewrite <- lemma3 in goal at 2(rank:21.)
=================================================
Progress: 110


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO))
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = plus (targetNew (Leaf)) (SUCC (ZERO))
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 111


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 112


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (height (target (Leaf))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 113


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (height (target (Leaf))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 114


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 115


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 116


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 117


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 118


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 119


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 120


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 3(rank:16.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 121


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 3(rank:17.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 122


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
rewrite <- lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 123


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 124


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 125


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 126


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 127


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 128


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 129


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 130


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 131


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 132


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 133


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 134


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 135


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
rewrite lemma3 in goal at 3(rank:21.)
rewrite <- lemma3 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 1(rank:21.)
rewrite lemma3 in goal at 1(rank:21.)
=================================================
Progress: 136


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 1(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
=================================================
Progress: 137


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
=================================================
Progress: 138


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 1(rank:21.)
rewrite <- lemma3 in goal at 2(rank:21.)
=================================================
Progress: 139


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 1(rank:21.)
=================================================
Progress: 140


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:5.)
=================================================
Progress: 141


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma3 in goal at 2(rank:13.)
rewrite lemma3 in goal at 3(rank:21.)
=================================================
Progress: 142


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 3(rank:13.)
rewrite <- lemma3 in goal at 2(rank:21.)
rewrite IH1 in goal at 0(rank:21.)
rewrite lemma3 in goal at 1(rank:21.)
=================================================
Progress: 143


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 3(rank:13.)
rewrite lemma3 in goal at 1(rank:21.)
rewrite <- lemma3 in goal at 2(rank:21.)
=================================================
Progress: 144


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 145


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 146


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 147


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 148


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 149


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 150


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 151


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 152


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 153


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 154


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 155


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 156


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
rewrite <- lemma3 in goal at 2(rank:17.)
=================================================
Progress: 157


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 3(rank:21.)
rewrite <- lemma3 in goal at 1(rank:21.)
=================================================
Progress: 158


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 3(rank:5.)
=================================================
Progress: 159


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
rewrite <- IH2 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
rewrite <- IH2 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
rewrite <- IH2 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))) = plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (SUCC (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 160


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 161


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 162


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 163


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 164


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (Leaf)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 165


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 166


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (Leaf)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 167


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 168


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 169


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 170


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (Node (nat1) (tree3) (tree4))))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 171


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (Node (nat1) (tree3) (tree4))))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 172


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 173


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 174


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 175


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 176


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 177


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 178


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 179


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 180


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 181


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 182


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 183


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
rewrite <- IH1 in goal at 0(rank:26.)
=================================================
Progress: 184


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 185


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 1(rank:13.)
rewrite <- lemma3 in goal at 3(rank:21.)
=================================================
Progress: 186


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:5.)
=================================================
Progress: 187


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 3(rank:5.)
=================================================
Progress: 188


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
rewrite lemma3 in goal at 1
rewrite <- lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)))
Prop: plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (SUCC (ZERO)))
Prop: plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (height (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (height (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf))))))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (height (target (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) = plus (SUCC (height (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) = plus (SUCC (height (target (Leaf)))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (plus (ZERO) (SUCC (ZERO)))) = plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 189


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 190


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 191


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 192


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 193


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 194


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 195


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 196


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 197


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 198


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 199


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 200


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 201


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 202


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 203


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 204


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 205


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 206


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 207


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 208


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 209


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 210


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 211


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 212


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 213


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 214


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 215


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 216


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 217


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 218


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 219


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 220


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 221


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 222


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 223


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
rewrite <- lemma3 in goal at 2(rank:17.)
=================================================
Progress: 224


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = SUCC (plus (height (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)) (Leaf))) (Leaf)))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 225


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 226


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 227


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 228


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 229


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 230


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 231


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 232


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 233


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 234


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 235


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 236


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 237


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 238


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 239


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 240


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 241


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 242


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 243


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 244


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 245


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 246


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite <- lemma3 in goal at 3(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 247


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 248


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 2(rank:5.)
=================================================
Progress: 249


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Leaf))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf)) (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Leaf))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf))))))) (Node (ZERO) (Leaf) (Leaf)))))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Leaf))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Leaf))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 250


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 251


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 252


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 253


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 254


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 255


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 256


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 257


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 258


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 259


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 260


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 261


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 262


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 263


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 264


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 265


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 266


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 267


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 268


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 269


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 270


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 271


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 272


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 273


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 274


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 275


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 276


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 277


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 278


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 279


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 280


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 281


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 282


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 283


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 284


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 285


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 286


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 287


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 288


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 289


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 290


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 291


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 292


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 293


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 294


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 295


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 296


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 297


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 298


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 299


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 300


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 301


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 302


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:8.)
=================================================
Progress: 303


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:8.)
=================================================
Progress: 304


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (if lq (height (target (Leaf))) (height (target (Node (ZERO) (Leaf) (Leaf)))) then height (target (Node (ZERO) (Leaf) (Leaf))) else height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (if lq (height (target (Leaf))) (height (target (Node (ZERO) (Leaf) (Leaf)))) then height (target (Node (ZERO) (Leaf) (Leaf))) else height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (plus (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (if lq (height (target (Leaf))) (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) then height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) else height (target (Leaf))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: plus (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (if lq (height (target (Leaf))) (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) then height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) else height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (if lq (height (target (Leaf))) (height (target (Node (ZERO) (Leaf) (Leaf)))) then height (target (Node (ZERO) (Leaf) (Leaf))) else height (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (if lq (height (target (Node (ZERO) (Leaf) (Leaf)))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (if lq (height (target (Node (ZERO) (Leaf) (Leaf)))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 305


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:8.)
=================================================
Progress: 306


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 307


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 308


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 309


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 310


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 311


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 312


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 313


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 314


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 315


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 316


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 317


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 318


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 319


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
rewrite <- IH1 in goal at 0(rank:26.)
rewrite <- IH2 in goal at 0(rank:26.)
=================================================
Progress: 320


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 321


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 322


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 323


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 324


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 325


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 326


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 327


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 328


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 329


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 330


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 331


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 332


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 333


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 334


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 335


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 336


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 337


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 338


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 339


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 340


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 341


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 342


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 343


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 344


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 345


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 346


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 17.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
plus (SUCC (SUCC (nat2))) (SUCC (ZERO)) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 347


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
plus (SUCC (SUCC (nat2))) (SUCC (ZERO)) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (SUCC (SUCC (nat2))) = false

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 348


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (SUCC (SUCC (nat2))) = false

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
true = false

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- Case1 in goal at 0(rank:8.)
=================================================
Progress: 349


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
true = false

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
true = lq (ZERO) (nat2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
discriminate
rewrite lemma3 in goal at 1
reflexivity
simpl in goal
rewrite <- Case1 in goal at 0
validate generalize_common_subterm_goal
Prop: true = lq (ZERO) (SUCC (SUCC (ZERO)))
Prop: true = lq (ZERO) (ZERO)
Prop: true = lq (ZERO) (ZERO)
asdf
previous tactics
discriminate
rewrite lemma3 in goal at 1
reflexivity
simpl in goal
=================================================
Progress: 350


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 17.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (plus (SUCC (nat2)) (SUCC (ZERO))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 351


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (plus (SUCC (nat2)) (SUCC (ZERO))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (SUCC (nat2)) = false

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 2
rewrite <- Case1 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:25.)
=================================================
Progress: 352


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (SUCC (nat2)) = false

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- Case1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (SUCC (nat2)) = lq (ZERO) (nat2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:9.)
=================================================
Progress: 353


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (SUCC (nat2)) = lq (ZERO) (nat2)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (plus (nat2) (SUCC (ZERO))) = lq (ZERO) (nat2)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:10.)
=================================================
Progress: 354


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (plus (nat2) (SUCC (ZERO))) = lq (ZERO) (nat2)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (plus (nat2) (plus (ZERO) (SUCC (ZERO)))) = lq (ZERO) (nat2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:10.)
=================================================
Progress: 355


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (plus (nat2) (plus (ZERO) (SUCC (ZERO)))) = lq (ZERO) (nat2)

3 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 10.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (plus (nat2) (SUCC (ZERO))) = lq (ZERO) (nat2)

3 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:19.)
rewrite Case1 in goal at 0(rank:26.)
rewrite lemma3 in goal at 0(rank:27.)
=================================================
Progress: 356


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (SUCC (nat2))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 17.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (plus (nat2) (SUCC (ZERO)))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 357


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
SUCC (SUCC (plus (nat2) (SUCC (ZERO)))) = SUCC (SUCC (plus (nat2) (SUCC (ZERO))))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat2) = false

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 3
Tactic List : 2
rewrite Case1 in goal at 0(rank:16.)
rewrite <- Case1 in goal at 0(rank:16.)
=================================================
Progress: 358


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
lq (ZERO) (nat2) = false

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite Case1 in goal at 0(rank : 16.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
false = false

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:7.)
=================================================
Progress: 359


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
nat1 : nat
nat2 : nat
IH1 : SUCC (SUCC (ZERO)) = SUCC (plus (nat2) (SUCC (ZERO)))
Inductive1 : nat1 = SUCC (nat2)
Case1 : lq (ZERO) (nat2) = false
---------------------------------------
false = false

1 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree2))) (nat1) then nat1 else height (target (tree2)))) = SUCC (plus (nat1) (SUCC (ZERO)))
IH2 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree3))) (nat1) then nat1 else height (target (tree3)))) = SUCC (plus (nat1) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (if lq (height (target (Node (nat2) (tree2) (tree3)))) (nat1) then nat1 else height (target (Node (nat2) (tree2) (tree3))))) = SUCC (plus (nat1) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 4
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 360


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree2))) (nat1) then nat1 else height (target (tree2)))) = SUCC (plus (nat1) (SUCC (ZERO)))
IH2 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree3))) (nat1) then nat1 else height (target (tree3)))) = SUCC (plus (nat1) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (if lq (height (target (Node (nat2) (tree2) (tree3)))) (nat1) then nat1 else height (target (Node (nat2) (tree2) (tree3))))) = SUCC (plus (nat1) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree2))) (nat1) then nat1 else height (target (tree2)))) = SUCC (plus (nat1) (SUCC (ZERO)))
IH2 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree3))) (nat1) then nat1 else height (target (tree3)))) = SUCC (plus (nat1) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (if lq (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) (nat1) then nat1 else height (target (Node (nat2) (tree2) (tree3))))) = SUCC (plus (nat1) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 361


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree2))) (nat1) then nat1 else height (target (tree2)))) = SUCC (plus (nat1) (SUCC (ZERO)))
IH2 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree3))) (nat1) then nat1 else height (target (tree3)))) = SUCC (plus (nat1) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
---------------------------------------
forall (nat1:nat), SUCC (SUCC (if lq (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) (nat1) then nat1 else height (target (Node (nat2) (tree2) (tree3))))) = SUCC (plus (nat1) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree2))) (nat1) then nat1 else height (target (tree2)))) = SUCC (plus (nat1) (SUCC (ZERO)))
IH2 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree3))) (nat1) then nat1 else height (target (tree3)))) = SUCC (plus (nat1) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (if lq (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) (ZERO) then ZERO else height (target (Node (nat2) (tree2) (tree3))))) = SUCC (plus (ZERO) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 362


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree2))) (nat1) then nat1 else height (target (tree2)))) = SUCC (plus (nat1) (SUCC (ZERO)))
IH2 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree3))) (nat1) then nat1 else height (target (tree3)))) = SUCC (plus (nat1) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (if lq (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2)))) (ZERO) then ZERO else height (target (Node (nat2) (tree2) (tree3))))) = SUCC (plus (ZERO) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree2))) (nat1) then nat1 else height (target (tree2)))) = SUCC (plus (nat1) (SUCC (ZERO)))
IH2 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree3))) (nat1) then nat1 else height (target (tree3)))) = SUCC (plus (nat1) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (height (target (tree2))) (height (target (tree3)))(rank:9.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 363


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree2))) (nat1) then nat1 else height (target (tree2)))) = SUCC (plus (nat1) (SUCC (ZERO)))
IH2 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree3))) (nat1) then nat1 else height (target (tree3)))) = SUCC (plus (nat1) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree2))) (height (target (tree3))) then height (target (tree3)) else height (target (tree2))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree2))) (height (target (tree3)))(rank : 9.)


1st goal of : forall (nat1:nat) (tree1:tree), SUCC (SUCC (if lq (height (target (tree1))) (nat1) then nat1 else height (target (tree1)))) = SUCC (plus (nat1) (SUCC (ZERO)))
tree1 : tree
nat2 : nat
tree2 : tree
tree3 : tree
IH1 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree2))) (nat1) then nat1 else height (target (tree2)))) = SUCC (plus (nat1) (SUCC (ZERO)))
IH2 : forall (nat1:nat), SUCC (SUCC (if lq (height (target (tree3))) (nat1) then nat1 else height (target (tree3)))) = SUCC (plus (nat1) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat2) (tree2) (tree3)
nat1 : nat
Base1 : nat1 = ZERO
Case1 : lq (height (target (tree2))) (height (target (tree3))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree3))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:26.)
rewrite lemma3 in goal at 1(rank:26.)
rewrite lemma3 in goal at 2(rank:26.)
rewrite lemma3 in goal at 3(rank:26.)
=================================================
Progress: 364


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 365


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 3(rank:25.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 366


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 367


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 368


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:9.)
=================================================
Progress: 369


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:9.)
=================================================
Progress: 370


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (SUCC (height (target (tree4)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
validate generalize_common_subterm_goal
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 371


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:9.)
=================================================
Progress: 372


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (SUCC (height (target (tree4)))) (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 373


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (targetNew (tree2))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 374


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 3(rank:25.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 375


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (SUCC (height (target (tree4)))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 376


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 377


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 378


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 379


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
rewrite <- IH1 in goal at 0(rank:26.)
=================================================
Progress: 380


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (SUCC (height (target (tree4)))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 381


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 382


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 383


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 384


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 385


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 386


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree3)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 387


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (targetNew (tree1))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 388


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 389


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 390


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:5.)
=================================================
Progress: 391


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma3 in goal at 2(rank:13.)
=================================================
Progress: 392


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:5.)
=================================================
Progress: 393


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (targetNew (tree2))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf))))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
=================================================
Progress: 394


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 395


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 396


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 397


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 398


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 399


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 400


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 401


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 402


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 403


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 404


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 405


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 406


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 407


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 408


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 409


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 410


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 0(rank:5.)
=================================================
Progress: 411


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite IH1 in goal at 0(rank:13.)
rewrite lemma3 in goal at 1(rank:13.)
rewrite lemma3 in goal at 2(rank:13.)
=================================================
Progress: 412


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 1(rank:13.)
rewrite <- lemma3 in goal at 1(rank:21.)
=================================================
Progress: 413


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:5.)
=================================================
Progress: 414


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 0
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: plus (plus (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 0
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: plus (SUCC (height (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)) = SUCC (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (height (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (height (target (Node (ZERO) (Leaf) (Leaf)))) = plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Leaf)))) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: SUCC (SUCC (height (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = SUCC (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
=================================================
Progress: 415


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 0
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO)) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (height (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO))))
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))) (SUCC (ZERO))) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (height (target (Node (ZERO) (Leaf) (Leaf)))) = plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)))) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 416


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 417


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 418


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (height (target (Leaf))) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 419


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (height (target (Leaf))) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 420


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 421


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 422


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (height (target (Node (nat1) (tree3) (tree4)))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 423


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (height (target (Node (nat1) (tree3) (tree4)))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 424


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 425


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 426


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 3(rank:16.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 427


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 3(rank:17.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 428


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 2(rank:5.)
=================================================
Progress: 429


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 0
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = SUCC (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf))))) (plus (ZERO) (SUCC (ZERO))))
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = SUCC (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (plus (ZERO) (SUCC (ZERO))))
Prop: plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 0
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 0
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Leaf)))) = SUCC (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO))))
Prop: SUCC (SUCC (height (target (Leaf)))) = SUCC (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO))))
Prop: SUCC (SUCC (height (target (Leaf)))) = SUCC (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (plus (ZERO) (SUCC (ZERO))))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (SUCC (SUCC (ZERO))) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 430


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = SUCC (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 431


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 432


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (targetNew (Leaf)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 433


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (targetNew (Leaf)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 434


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 435


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 436


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 437


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 438


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 439


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 440


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite lemma3 in goal at 3(rank:16.)
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 441


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 2(rank:8.)
=================================================
Progress: 442


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:8.)
=================================================
Progress: 443


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 444


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 445


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 1(rank:16.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 446


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 447


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (targetNew (tree4))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 448


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite <- lemma3 in goal at 1(rank:24.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 449


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (targetNew (tree4))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)
asdf
=================================================
Progress: 450


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (targetNew (tree1)) (SUCC (ZERO)) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (targetNew (tree3)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (targetNew (tree4)) (SUCC (ZERO)) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (targetNew (tree4))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- lemma3 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (targetNew (Leaf)) = ZERO
Prop: SUCC (targetNew (Leaf)) = ZERO
Prop: SUCC (targetNew (Leaf)) = ZERO
Prop: SUCC (SUCC (targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (SUCC (targetNew (Leaf))) = SUCC (ZERO)
Prop: SUCC (SUCC (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
intro Cond1
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (SUCC (ZERO)))) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) (Leaf)))) (Leaf)))) (SUCC (ZERO)) = ZERO
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = ZERO
Prop: plus (targetNew (Leaf)) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = SUCC (ZERO)
asdf
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)
asdf
=================================================
Progress: 451


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 2(rank:9.)
=================================================
Progress: 452


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:9.)
=================================================
Progress: 453


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 454


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 455


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 2(rank:5.)
=================================================
Progress: 456


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 457


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 458


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 459


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 460


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 461


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 462


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 463


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 464


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 465


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 466


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 467


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 3(rank:16.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 468


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 469


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 470


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 471


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 472


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 473


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 474


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 475


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 476


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:5.)
=================================================
Progress: 477


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (targetNew (tree2))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:5.)
=================================================
Progress: 478


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (targetNew (tree2))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (SUCC (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Leaf) (Leaf)))) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (SUCC (targetNew (Leaf))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (targetNew (tree2))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 479


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 480


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 481


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (targetNew (tree2))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 482


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 483


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 484


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 485


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 486


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (Leaf))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 487


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 488


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 489


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (Leaf))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 490


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 491


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 492


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 493


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 494


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 495


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 496


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- IH2 in goal at 0(rank:17.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 497


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 498


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 499


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 500


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 501


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 502


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 503


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- IH2 in goal at 0(rank:17.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 504


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 505


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 506


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (Node (nat1) (tree3) (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 507


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (Node (nat1) (tree3) (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 508


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 509


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 510


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 511


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 512


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 513


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 514


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 515


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree1))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree3))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (targetNew (tree4))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 516


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 517


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 518


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 519


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 3(rank:25.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 520


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 521


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 3(rank:25.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 522


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree3)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 523


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 524


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree3)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 525


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree1)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree3)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (targetNew (tree4)) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 526


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 1(rank:21.)
=================================================
Progress: 527


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (targetNew (tree2))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:5.)
=================================================
Progress: 528


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (targetNew (tree2))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 2(rank:21.)
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 2(rank:21.)
=================================================
Progress: 529


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (targetNew (tree2))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (targetNew (Leaf))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (targetNew (Leaf))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 530


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 531


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 532


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 533


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 534


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 535


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (Node (nat1) (tree3) (tree4))))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 536


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (Node (nat1) (tree3) (tree4))))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 537


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 538


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 539


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 540


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree1)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree3)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (SUCC (height (target (tree4)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 541


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 542


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 543


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 544


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 545


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 546


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 547


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 548


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 549


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 550


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 551


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 552


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 553


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 554


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 555


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 556


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 557


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (height (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (Leaf)))) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
=================================================
Progress: 558


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Leaf)))) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
=================================================
Progress: 559


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:13.)
rewrite lemma3 in goal at 3(rank:21.)
=================================================
Progress: 560


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:5.)
=================================================
Progress: 561


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:5.)
=================================================
Progress: 562


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:5.)
=================================================
Progress: 563


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- IH2 in goal at 0
simpl in goal
rewrite lemma3 in goal at 0
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite IH1 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Leaf))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- IH2 in goal at 0
simpl in goal
rewrite lemma3 in goal at 0
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- IH2 in goal at 0
simpl in goal
rewrite lemma3 in goal at 0
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- IH2 in goal at 0
simpl in goal
rewrite lemma3 in goal at 0
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (height (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (Leaf)) (Leaf)))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf))))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- IH2 in goal at 0
simpl in goal
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- IH2 in goal at 0
simpl in goal
validate generalize_common_subterm_goal
Prop: SUCC (height (target (Leaf))) = plus (height (target (Leaf))) (SUCC (ZERO))
Prop: SUCC (height (target (Node (ZERO) (Leaf) (Leaf)))) = plus (height (target (Leaf))) (SUCC (ZERO))
Prop: SUCC (height (target (Leaf))) = plus (height (target (Leaf))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Leaf)))) = SUCC (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Leaf)))) = SUCC (plus (height (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)) (Leaf)) (Leaf)) (Leaf)))) (SUCC (ZERO)))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 564


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 565


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 566


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 567


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 568


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 569


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 570


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 571


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 572


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 573


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 574


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 575


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 576


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 577


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 578


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 579


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 580


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 581


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 582


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 583


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 584


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 585


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite <- lemma3 in goal at 3(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 586


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 587


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 588


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 589


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 590


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 591


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 592


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 593


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 594


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 595


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 596


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 597


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (height (target (tree2))) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 598


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (targetNew (tree2)) (SUCC (ZERO))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 1(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
=================================================
Progress: 599


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 1(rank:21.)
rewrite lemma3 in goal at 2(rank:21.)
=================================================
Progress: 600


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 2(rank:5.)
=================================================
Progress: 601


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (SUCC (ZERO))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:5.)
=================================================
Progress: 602


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 0
rewrite <- lemma3 in goal at 0
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (targetNew (Leaf)))
Prop: plus (plus (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))
Prop: plus (plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 0
rewrite <- lemma3 in goal at 0
rewrite lemma3 in goal at 2
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
Prop: plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (Leaf))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 0
rewrite <- lemma3 in goal at 0
rewrite lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (height (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO)) = SUCC (targetNew (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = SUCC (targetNew (Leaf))
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = SUCC (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (SUCC (targetNew (Leaf)))
Prop: SUCC (plus (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (SUCC (targetNew (Leaf)))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (SUCC (targetNew (Leaf)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 0
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: height (target (Leaf)) = targetNew (Leaf)
Prop: height (target (Leaf)) = targetNew (Node (ZERO) (Leaf) (Leaf))
Prop: height (target (Leaf)) = targetNew (Leaf)
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (SUCC (ZERO))
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO))
Prop: SUCC (height (target (Leaf))) = plus (targetNew (Leaf)) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf)))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 603


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 604


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 605


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (plus (height (target (tree2))) (plus (ZERO) (SUCC (ZERO)))) = SUCC (SUCC (targetNew (tree3)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 606


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 607


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (height (target (Leaf))) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 608


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> height (target (Leaf)) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 609


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (SUCC (ZERO)) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (height (target (Leaf))) (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 610


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (height (target (Leaf))) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 611


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> height (target (Leaf)) = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> ZERO = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 612


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (height (target (Leaf))) (SUCC (ZERO)) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 613


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = plus (targetNew (tree2)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 614


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = plus (targetNew (Leaf)) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 615


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = plus (targetNew (tree3)) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = plus (targetNew (tree4)) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (height (target (Node (nat1) (tree3) (tree4)))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 616


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (height (target (Node (nat1) (tree3) (tree4)))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 617


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (targetNew (tree2)) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 618


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (targetNew (Leaf)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 619


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 3(rank:16.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 620


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> ZERO = targetNew (tree2)

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> ZERO = targetNew (Leaf)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 621


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> ZERO = targetNew (Leaf)

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> ZERO = targetNew (tree3)
IH2 : lq (ZERO) (height (target (tree4))) = false -> ZERO = targetNew (tree4)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> ZERO = targetNew (Node (nat1) (tree3) (tree4))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 622


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> ZERO = targetNew (tree3)
IH2 : lq (ZERO) (height (target (tree4))) = false -> ZERO = targetNew (tree4)
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> ZERO = targetNew (Node (nat1) (tree3) (tree4))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> height (target (Node (nat1) (tree3) (tree4))) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 623


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> height (target (Node (nat1) (tree3) (tree4))) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 624


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) = targetNew (tree2)

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) = targetNew (Leaf)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 625


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) = targetNew (Leaf)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 626


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
=================================================
Progress: 627


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (ZERO) = SUCC (targetNew (tree2))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = SUCC (targetNew (Leaf))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 628


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (ZERO) = SUCC (targetNew (Leaf))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = SUCC (targetNew (tree3))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = SUCC (targetNew (tree4))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = SUCC (targetNew (Node (nat1) (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 629


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (ZERO) = SUCC (targetNew (tree3))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (ZERO) = SUCC (targetNew (tree4))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (ZERO) = SUCC (targetNew (Node (nat1) (tree3) (tree4)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 630


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 631


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (targetNew (tree2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 632


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (targetNew (Leaf))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 633


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 3(rank:16.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 634


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 3(rank:17.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 635


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) = ZERO

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (height (target (tree4))) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:9.)
=================================================
Progress: 636


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite lemma3 in goal at 3(rank:17.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
=================================================
Progress: 637


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (height (target (tree4))) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (height (target (tree4))) (SUCC (ZERO)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:9.)
=================================================
Progress: 638


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (height (target (tree4))) (SUCC (ZERO)) = ZERO

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> height (target (tree1)) = targetNew (tree2)
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> height (target (tree3)) = targetNew (tree2)
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> height (target (tree4)) = targetNew (tree2)
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (height (target (tree4))) (plus (ZERO) (SUCC (ZERO))) = ZERO

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
rewrite lemma3 in goal at 0
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO))) = ZERO
Prop: plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO))) = ZERO
Prop: plus (height (target (Leaf))) (plus (ZERO) (SUCC (ZERO))) = ZERO
asdf
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = ZERO
asdf
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
validate generalize_common_subterm_goal
Prop: SUCC (height (target (Leaf))) = ZERO
Prop: SUCC (height (target (Leaf))) = ZERO
Prop: SUCC (height (target (Node (ZERO) (Leaf) (Leaf)))) = ZERO
asdf
=================================================
Progress: 639


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 2(rank:8.)
=================================================
Progress: 640


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:8.)
=================================================
Progress: 641


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 642


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 643


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:8.)
=================================================
Progress: 644


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:8.)
=================================================
Progress: 645


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (height (target (Node (ZERO) (Leaf) (Leaf)))) then height (target (Node (ZERO) (Leaf) (Leaf))) else height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (plus (if lq (height (target (Node (ZERO) (Leaf) (Leaf)))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (if lq (height (target (Leaf))) (height (target (Node (ZERO) (Leaf) (Leaf)))) then height (target (Node (ZERO) (Leaf) (Leaf))) else height (target (Leaf))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (if lq (height (target (Leaf))) (height (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (Leaf)))) then height (target (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (Leaf))) else height (target (Leaf))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: plus (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (if lq (height (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (if lq (height (target (Leaf))) (height (target (Leaf))) then height (target (Leaf)) else height (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 646


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:8.)
=================================================
Progress: 647


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (SUCC (ZERO)) = SUCC (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 648


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 2(rank:9.)
=================================================
Progress: 649


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:9.)
=================================================
Progress: 650


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:9.)
=================================================
Progress: 651


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (height (target (tree1))) = plus (targetNew (tree2)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (height (target (tree3))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (height (target (tree4))) = plus (targetNew (tree2)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (plus (height (target (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 652


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 1(rank:9.)
=================================================
Progress: 653


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:9.)
=================================================
Progress: 654


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (SUCC (height (target (tree4)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
rewrite lemma3 in goal at 3
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: SUCC (plus (height (target (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
Prop: SUCC (plus (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))) = plus (ZERO) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
intro Cond1
case lq (height (target (tree3))) (height (target (tree4)))
validate generalize_common_subterm_goal
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (height (target (Leaf))) (SUCC (ZERO)) = ZERO
Prop: plus (height (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))))) (SUCC (ZERO)) = ZERO
Prop: SUCC (plus (height (target (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
Prop: SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = SUCC (ZERO)
asdf
=================================================
Progress: 655


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 1(rank:9.)
=================================================
Progress: 656


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (height (target (tree4)))) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (height (target (tree1))) (plus (ZERO) (SUCC (ZERO))) = SUCC (targetNew (tree2))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (height (target (tree3))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (height (target (tree4))) (SUCC (ZERO)) = SUCC (targetNew (tree2))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
plus (SUCC (height (target (tree4)))) (SUCC (ZERO)) = SUCC (ZERO)

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 657


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
SUCC (SUCC (height (target (tree2)))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Leaf)))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (SUCC (height (target (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Leaf))) (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (SUCC (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf)))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 658


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (height (target (tree2)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 659


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 660


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree1))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 661


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> SUCC (plus (height (target (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 662


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 663


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 664


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 665


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 666


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 667


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 668


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 0(rank:16.)
=================================================
Progress: 669


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:17.)
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 670


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
case lq (height (target (tree3))) (height (target (tree4)))(rank:9.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
=================================================
Progress: 671


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3))))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> case lq (height (target (tree3))) (height (target (tree4)))(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
rewrite lemma3 in goal at 3(rank:25.)
=================================================
Progress: 672


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (plus (height (target (tree4))) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 17.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (SUCC (height (target (tree1)))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree3))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> SUCC (plus (height (target (tree4))) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
Case1 : lq (height (target (tree3))) (height (target (tree4))) = true
---------------------------------------
SUCC (SUCC (SUCC (height (target (tree4))))) = SUCC (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:25.)
rewrite lemma3 in goal at 1(rank:25.)
rewrite lemma3 in goal at 2(rank:25.)
=================================================
Progress: 673


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 674


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 675


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 676


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 677


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 678


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 679


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 680


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 681


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 682


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 683


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 684


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 685


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 686


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 687


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 3(rank:16.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 688


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 689


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 690


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 691


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 692


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 693


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 694


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 3(rank:16.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 695


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 696


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 697


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 698


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 699


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 700


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 701


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 702


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 703


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 704


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 705


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 706


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 707


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 708


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 709


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 710


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 711


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 1(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 3(rank:21.)
=================================================
Progress: 712


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- lemma3 in goal at 1(rank:13.)
rewrite <- lemma3 in goal at 3(rank:21.)
=================================================
Progress: 713


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 1(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite <- IH2 in goal at 0(rank:21.)
rewrite <- lemma3 in goal at 3(rank:21.)
=================================================
Progress: 714


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 3(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 715


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 716


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 717


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 718


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 719


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 720


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 721


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 722


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 723


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 724


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 725


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 8
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 3(rank:16.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 726


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite <- lemma3 in goal at 2(rank:16.)
=================================================
Progress: 727


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 728


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 729


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 730


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 731


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 732


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 733


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 734


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:13.)
rewrite <- lemma3 in goal at 2(rank:13.)
rewrite <- lemma3 in goal at 3(rank:21.)
=================================================
Progress: 735


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 3(rank:5.)
=================================================
Progress: 736


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (tree3))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 0
rewrite <- lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- IH2 in goal at 0
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (height (target (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (Leaf)))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (Leaf)))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)))) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Node (SUCC (ZERO)) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 737


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 738


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 739


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 740


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 741


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 742


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 743


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 744


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 745


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 746


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 747


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 748


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 749


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 750


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 751


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite <- lemma3 in goal at 3(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 752


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 753


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 754


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree3))) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (tree4))) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (height (target (Node (nat1) (tree3) (tree4)))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 755


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 756


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 757


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (Leaf))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 758


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite <- lemma3 in goal at 3(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 759


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 13.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = plus (SUCC (height (target (tree3)))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:21.)
rewrite lemma3 in goal at 3(rank:21.)
=================================================
Progress: 760


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 761


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 762


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 763


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 764


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 765


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 766


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 767


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 768


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 769


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 770


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 771


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 772


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 773


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (SUCC (height (target (tree2)))) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 774


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:8.)
=================================================
Progress: 775


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (plus (ZERO) (SUCC (ZERO)))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree2)))) (plus (ZERO) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (height (target (tree2))) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = plus (SUCC (ZERO)) (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 776


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- lemma3 in goal at 3(rank:5.)
=================================================
Progress: 777


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite lemma3 in goal at 0(rank:5.)
=================================================
Progress: 778


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (SUCC (targetNew (tree2))) (SUCC (ZERO)) = plus (SUCC (targetNew (tree3))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite lemma3 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite <- IH2 in goal at 0(rank:5.)
=================================================
Progress: 779


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- IH2 in goal at 0(rank : 5.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (tree3)))) (plus (ZERO) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- lemma3 in goal at 2
rewrite <- lemma3 in goal at 3
rewrite lemma3 in goal at 0
rewrite <- IH2 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (Leaf))) (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (SUCC (height (target (Leaf)))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- lemma3 in goal at 2
rewrite <- lemma3 in goal at 3
rewrite lemma3 in goal at 0
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO)))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- lemma3 in goal at 2
rewrite <- lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO)) = plus (SUCC (targetNew (Leaf))) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = plus (SUCC (targetNew (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- lemma3 in goal at 2
validate generalize_common_subterm_goal
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf))) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Leaf)))))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (SUCC (targetNew (Leaf))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Node (SUCC (ZERO)) (Leaf) (Leaf))) (Node (ZERO) (Leaf) (Leaf))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (ZERO) (Leaf) (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Leaf) (Leaf)) (Leaf)))))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Leaf) (Leaf))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
asdf
=================================================
Progress: 780


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 21.)


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
rewrite <- lemma3 in goal at 3
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Node (SUCC (SUCC (ZERO))) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Node (ZERO) (Node (ZERO) (Leaf) (Leaf)) (Leaf))) (SUCC (ZERO)))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
rewrite lemma3 in goal at 1
validate generalize_common_subterm_goal
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = plus (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: SUCC (plus (targetNew (Node (ZERO) (Leaf) (Leaf))) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Leaf) (Node (SUCC (SUCC (SUCC (ZERO)))) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Leaf) (Node (ZERO) (Leaf) (Node (SUCC (SUCC (ZERO))) (Leaf) (Node (ZERO) (Leaf) (Leaf))))) (Leaf)) (Leaf))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (plus (targetNew (Leaf)) (SUCC (ZERO))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
previous tactics
simpl in goal
rewrite IH1 in goal at 0
reflexivity
rewrite lemma3 in goal at 1
reflexivity
validate generalize_common_subterm_goal
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Node (SUCC (ZERO)) (Leaf) (Node (ZERO) (Leaf) (Leaf)))) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Leaf) (Leaf)) (Leaf)) (Node (SUCC (ZERO)) (Leaf) (Leaf)))))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
Prop: SUCC (SUCC (height (target (Leaf)))) = plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO))
asdf
Lemma List
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
End of Lemma List


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 781


1st goal of : forall (tree1:tree), SUCC (height (target (tree1))) = plus (targetNew (tree1)) (SUCC (ZERO))
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : SUCC (height (target (tree2))) = plus (targetNew (tree2)) (SUCC (ZERO))
IH2 : SUCC (height (target (tree3))) = plus (targetNew (tree3)) (SUCC (ZERO))
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (height (target (tree2))) (height (target (tree3))) = false
---------------------------------------
plus (plus (targetNew (tree2)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))(rank : 0.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree1(rank:8.)
=================================================
Progress: 782


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

---------------------------------------
forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 783


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (height (target (Leaf))) (height (target (tree2))) = false -> plus (plus (targetNew (Leaf)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:9.)
=================================================
Progress: 784


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
---------------------------------------
forall (tree2:tree), lq (ZERO) (height (target (tree2))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 9.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
reflexivity(rank:8.)
=================================================
Progress: 785


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
Base2 : tree2 = Leaf
---------------------------------------
lq (ZERO) (height (target (Leaf))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

2 goal(s) more...

2 conjecture(s) more...
>>> reflexivity(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 786


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
Base1 : tree1 = Leaf
tree2 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : lq (ZERO) (height (target (tree3))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree3)) (SUCC (ZERO)))
IH2 : lq (ZERO) (height (target (tree4))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))
Inductive1 : tree2 = Node (nat1) (tree3) (tree4)
---------------------------------------
lq (ZERO) (height (target (Node (nat1) (tree3) (tree4)))) = false -> SUCC (SUCC (ZERO)) = SUCC (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 787


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (height (target (Node (nat1) (tree3) (tree4)))) (height (target (tree2))) = false -> plus (plus (targetNew (Node (nat1) (tree3) (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction tree2(rank:8.)
=================================================
Progress: 788


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
---------------------------------------
forall (tree2:tree), lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (tree2))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))

0 goal(s) more...

2 conjecture(s) more...
>>> induction tree2(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 789


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
lq (SUCC (if lq (height (target (tree3))) (height (target (tree4))) then height (target (tree4)) else height (target (tree3)))) (height (target (Leaf))) = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (Leaf)) (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 790


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
---------------------------------------
false = false -> plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 7
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite <- lemma3 in goal at 3(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 1(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 791


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
=================================================
Progress: 792


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 5
rewrite <- lemma3 in goal at 2(rank:16.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
rewrite <- IH1 in goal at 0(rank:25.)
=================================================
Progress: 793


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 3(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 2(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 794


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
rewrite <- lemma3 in goal at 0(rank:16.)
rewrite <- IH1 in goal at 0(rank:25.)
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 795


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (plus (SUCC (targetNew (tree4))) (SUCC (ZERO))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 796


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 2(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
plus (SUCC (SUCC (targetNew (tree4)))) (SUCC (ZERO)) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
rewrite lemma3 in goal at 0(rank:24.)
rewrite lemma3 in goal at 3(rank:24.)
=================================================
Progress: 797


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (plus (targetNew (tree4)) (SUCC (ZERO)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- lemma3 in goal at 0(rank : 16.)


1st goal of : forall (tree1:tree) (tree2:tree), lq (height (target (tree1))) (height (target (tree2))) = false -> plus (plus (targetNew (tree1)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
tree1 : tree
nat1 : nat
tree3 : tree
tree4 : tree
IH1 : forall (tree2:tree), lq (height (target (tree3))) (height (target (tree2))) = false -> plus (plus (targetNew (tree3)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
IH2 : forall (tree2:tree), lq (height (target (tree4))) (height (target (tree2))) = false -> plus (plus (targetNew (tree4)) (SUCC (ZERO))) (SUCC (ZERO)) = SUCC (plus (targetNew (tree2)) (SUCC (ZERO)))
Inductive1 : tree1 = Node (nat1) (tree3) (tree4)
tree2 : tree
Base1 : tree2 = Leaf
Cond1 : false = false
---------------------------------------
SUCC (SUCC (SUCC (targetNew (tree4)))) = SUCC (SUCC (ZERO))

1 goal(s) more...

2 conjecture(s) more...
