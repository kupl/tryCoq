Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), sumtr (squaretr (tree1)) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), sumtr (squaretr (tree1)) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
sumtr (squaretr (Leaf (nat1))) = mainNew (Leaf (nat1))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
Base1 : tree1 = Leaf (nat1)
---------------------------------------
sumtr (squaretr (Leaf (nat1))) = mainNew (Leaf (nat1))

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
sumtr (squaretr (Branch (tree2) (tree3))) = mainNew (Branch (tree2) (tree3))

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
sumtr (squaretr (Branch (tree2) (tree3))) = mainNew (Branch (tree2) (tree3))

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
plus (sumtr (squaretr (tree2))) (sumtr (squaretr (tree3))) = plus (mainNew (tree2)) (mainNew (tree3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 4
rewrite IH1 in goal at 0(rank:11.)
rewrite IH2 in goal at 0(rank:11.)
rewrite <- IH1 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
plus (sumtr (squaretr (tree2))) (sumtr (squaretr (tree3))) = plus (mainNew (tree2)) (mainNew (tree3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
plus (mainNew (tree2)) (sumtr (squaretr (tree3))) = plus (mainNew (tree2)) (mainNew (tree3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
rewrite IH2 in goal at 0(rank:11.)
rewrite <- IH2 in goal at 0(rank:11.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
plus (sumtr (squaretr (tree2))) (sumtr (squaretr (tree3))) = plus (mainNew (tree2)) (mainNew (tree3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite IH2 in goal at 0(rank : 11.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
plus (sumtr (squaretr (tree2))) (mainNew (tree3)) = plus (mainNew (tree2)) (mainNew (tree3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:3.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
plus (sumtr (squaretr (tree2))) (mainNew (tree3)) = plus (mainNew (tree2)) (mainNew (tree3))

0 goal(s) more...

0 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
plus (sumtr (squaretr (tree2))) (mainNew (tree3)) = plus (sumtr (squaretr (tree2))) (mainNew (tree3))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:0.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
tree2 : tree
tree3 : tree
IH1 : sumtr (squaretr (tree2)) = mainNew (tree2)
IH2 : sumtr (squaretr (tree3)) = mainNew (tree3)
Inductive1 : tree1 = Branch (tree2) (tree3)
---------------------------------------
plus (sumtr (squaretr (tree2))) (mainNew (tree3)) = plus (sumtr (squaretr (tree2))) (mainNew (tree3))

0 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 0.)


No conjecture
Proof Success
Proof
assert forall (tree1:tree), main (tree1) = mainNew (tree1)
simpl in goal
induction tree1
reflexivity
simpl in goal
rewrite IH2 in goal at 0
rewrite <- IH1 in goal at 0
reflexivity
Qed
