Enter the definition file path (1/2) : 
> Enter the definition file path (2/2) : 
> Choose the proof type :
1) Interactive Mode 	 2) Auto Mode
Enter the goal : =================================================
Progress: 1


No conjecture
>>> assert forall (tr:tree), main (tr) = mainNew (tr)(rank : 0.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 2


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), main (tree1) = mainNew (tree1)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), spec (repr (target (tree1))) = Tuple2 (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (match (targetNew (tree1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
induction tree1(rank:4.)
=================================================
Progress: 3


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)

---------------------------------------
forall (tree1:tree), spec (repr (target (tree1))) = Tuple2 (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (match (targetNew (tree1)) with
| Tuple2 _ b -> b)

0 goal(s) more...

0 conjecture(s) more...
>>> induction tree1(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Empty
---------------------------------------
spec (repr (target (Empty))) = Tuple2 (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (match (targetNew (Empty)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
reflexivity(rank:3.)
=================================================
Progress: 4


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
Base1 : tree1 = Empty
---------------------------------------
spec (repr (target (Empty))) = Tuple2 (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (match (targetNew (Empty)) with
| Tuple2 _ b -> b)

1 goal(s) more...

0 conjecture(s) more...
>>> reflexivity(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
spec (repr (target (Node (nat1) (tree2) (tree3)))) = Tuple2 (match (targetNew (Node (nat1) (tree2) (tree3))) with
| Tuple2 a _ -> a) (match (targetNew (Node (nat1) (tree2) (tree3))) with
| Tuple2 _ b -> b)

0 goal(s) more...

0 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:3.)
=================================================
Progress: 5


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
spec (repr (target (Node (nat1) (tree2) (tree3)))) = Tuple2 (match (targetNew (Node (nat1) (tree2) (tree3))) with
| Tuple2 a _ -> a) (match (targetNew (Node (nat1) (tree2) (tree3))) with
| Tuple2 _ b -> b)

0 goal(s) more...

0 conjecture(s) more...
>>> simpl in goal(rank : 3.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (if lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) then plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a) else match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (if lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) then plus (fst3 (targetNew (tree3))) (max (plus (fst3 (targetNew (tree2))) (nat1)) (fst3 (targetNew (tree2)))) else max (plus (snd3 (targetNew (tree3))) (fst3 (targetNew (tree2)))) (snd3 (targetNew (tree2))))

0 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))(rank:4.)
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))(rank:4.)
=================================================
Progress: 6


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (if lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) then plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a) else match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (if lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) then plus (fst3 (targetNew (tree3))) (max (plus (fst3 (targetNew (tree2))) (nat1)) (fst3 (targetNew (tree2)))) else max (plus (snd3 (targetNew (tree3))) (fst3 (targetNew (tree2)))) (snd3 (targetNew (tree2))))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (if lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) then plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a) else match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))(rank:5.)
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)(rank:5.)
=================================================
Progress: 7


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (if lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) then plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a) else match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (if lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) then plus (fst3 (targetNew (tree3))) (max (plus (fst3 (targetNew (tree2))) (nat1)) (fst3 (targetNew (tree2)))) else max (plus (snd3 (targetNew (tree3))) (fst3 (targetNew (tree2)))) (snd3 (targetNew (tree2))))

0 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))(rank : 4.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (if lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) then plus (fst3 (targetNew (tree3))) (max (plus (fst3 (targetNew (tree2))) (nat1)) (fst3 (targetNew (tree2)))) else max (plus (snd3 (targetNew (tree3))) (fst3 (targetNew (tree2)))) (snd3 (targetNew (tree2))))

1 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))(rank:5.)
=================================================
Progress: 8


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (if lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) then plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a) else match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)(rank:6.)
=================================================
Progress: 9


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (if lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) then plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a) else match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (if lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) then plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a) else match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))(rank:6.)
=================================================
Progress: 10


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (if lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) then plus (fst3 (targetNew (tree3))) (max (plus (fst3 (targetNew (tree2))) (nat1)) (fst3 (targetNew (tree2)))) else max (plus (snd3 (targetNew (tree3))) (fst3 (targetNew (tree2)))) (snd3 (targetNew (tree2))))

1 goal(s) more...

0 conjecture(s) more...
>>> case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))(rank : 5.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))

2 goal(s) more...

0 conjecture(s) more...
Tactic List : 1
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)(rank:6.)
=================================================
Progress: 11


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank:6.)
case targetNew (tree2)(rank:6.)
case targetNew (tree3)(rank:6.)
=================================================
Progress: 12


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (if lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) then plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a) else match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank:6.)
case targetNew (tree2)(rank:6.)
case targetNew (tree3)(rank:6.)
=================================================
Progress: 13


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1))) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))

2 goal(s) more...

0 conjecture(s) more...
>>> case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 3
case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank:6.)
case targetNew (tree2)(rank:6.)
case targetNew (tree3)(rank:6.)
=================================================
Progress: 14


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case targetNew (tree2)(rank:6.)
case targetNew (tree3)(rank:6.)
=================================================
Progress: 15


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree2)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank:6.)
case targetNew (tree3)(rank:6.)
=================================================
Progress: 16


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank:6.)
case targetNew (tree2)(rank:6.)
=================================================
Progress: 17


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (nat3) (plus (nat1) (nat2)) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case targetNew (tree2)(rank:6.)
case targetNew (tree3)(rank:6.)
=================================================
Progress: 18


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree2)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (plus (nat2) (nat1)) (nat2) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank:6.)
case targetNew (tree3)(rank:6.)
=================================================
Progress: 19


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank:6.)
case targetNew (tree2)(rank:6.)
=================================================
Progress: 20


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (nat3) (plus (nat1) (nat2)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case targetNew (tree2)(rank:6.)
case targetNew (tree3)(rank:6.)
=================================================
Progress: 21


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree2)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank:6.)
case targetNew (tree3)(rank:6.)
=================================================
Progress: 22


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 2
case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank:6.)
case targetNew (tree2)(rank:6.)
=================================================
Progress: 23


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree2)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
case targetNew (tree2)
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
parent
plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)
lower
plus(_, _)
upper
Tuple2(plus(plus(_, nat2), nat1), _)
remove upper
plus(_, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (ZERO) (SUCC (SUCC (ZERO)))) (plus (ZERO) (SUCC (SUCC (ZERO)))) = Tuple2 (plus (plus (match (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (match (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 24


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro nat1(rank:5.)
intro nat2(rank:5.)
intro tree1(rank:5.)
induction nat1(rank:14.)
=================================================
Progress: 25


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:5.)
=================================================
Progress: 26


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro tree1(rank:5.)
induction nat1(rank:14.)
=================================================
Progress: 27


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 28


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 29


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 30


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
forall (tree1:tree), Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 31


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
forall (tree1:tree), Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
tree1 : tree
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty)) (Empty)))) with
| Tuple2 a _ -> a) (ZERO)) (SUCC (ZERO))) (plus (match (targetNew (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty)) (Empty)))) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Node (ZERO) (Empty) (Empty))) with
| Tuple2 a _ -> a) (ZERO)) (SUCC (SUCC (ZERO)))) (plus (match (targetNew (Node (ZERO) (Empty) (Empty))) with
| Tuple2 a _ -> a) (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
tree1 : tree
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 32


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
tree1 : tree
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro nat2(rank:7.)
intro tree1(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 33


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
case targetNew (tree3)
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (plus (plus (SUCC (ZERO)) (match (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Node (ZERO) (Empty) (Empty)))) (Empty)) (Empty))) with
| Tuple2 a _ -> a)) (ZERO)) (plus (SUCC (ZERO)) (match (targetNew (Node (SUCC (SUCC (ZERO))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Node (ZERO) (Empty) (Empty)))) (Empty)) (Empty))) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) = Tuple2 (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (match (targetNew (Node (SUCC (SUCC (ZERO))) (Empty) (Empty))) with
| Tuple2 a _ -> a)) (SUCC (ZERO))) (plus (SUCC (SUCC (SUCC (ZERO)))) (match (targetNew (Node (SUCC (SUCC (ZERO))) (Empty) (Empty))) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (SUCC (ZERO)) (SUCC (ZERO))) (plus (SUCC (ZERO)) (SUCC (ZERO))) = Tuple2 (plus (plus (SUCC (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (SUCC (ZERO))) (plus (SUCC (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 34


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro nat1(rank:5.)
intro tree1(rank:5.)
induction nat1(rank:14.)
induction nat2(rank:14.)
=================================================
Progress: 35


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 36


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 37


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 38


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (nat2:nat), Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 39


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
>>> case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case targetNew (tree2)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
parent
plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)
lower
plus(_, _)
upper
Tuple2(plus(plus(_, nat2), nat1), _)
remove upper
plus(_, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (ZERO) (SUCC (SUCC (ZERO)))) (plus (ZERO) (SUCC (SUCC (ZERO)))) = Tuple2 (plus (plus (match (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty)) (Node (SUCC (SUCC (ZERO))) (Empty) (Node (ZERO) (Empty) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (match (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty)) (Node (SUCC (SUCC (ZERO))) (Empty) (Node (ZERO) (Empty) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)))))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
=================================================
Progress: 40


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case targetNew (tree2)
case targetNew (tree3)
parent
plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)
lower
plus(_, _)
upper
Tuple2(_, _)
remove upper
plus(nat1, _)
parent
plus (plus (nat2) (nat2)) (nat1)
lower
plus(plus(nat2, nat2), _)
upper
Tuple2(_, plus(nat2, nat2))
remove upper
nat2
remove lower
nat2
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Empty)))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Empty)))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (ZERO)) (plus (SUCC (SUCC (SUCC (SUCC (ZERO))))) (SUCC (SUCC (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 41


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro nat1(rank:5.)
intro tree1(rank:5.)
intro tree2(rank:5.)
induction nat1(rank:14.)
induction nat2(rank:14.)
intro nat2(rank:5.)
=================================================
Progress: 42


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro nat2(rank:5.)
intro tree1(rank:5.)
intro tree2(rank:5.)
induction nat2(rank:14.)
=================================================
Progress: 43


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro tree1(rank:5.)
intro tree2(rank:5.)
induction nat1(rank:14.)
=================================================
Progress: 44


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro tree2(rank:5.)
induction nat1(rank:14.)
induction nat2(rank:14.)
=================================================
Progress: 45


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction nat2(rank:14.)
=================================================
Progress: 46


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 47


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro tree2(rank:5.)
induction nat2(rank:14.)
=================================================
Progress: 48


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 49


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro tree2(rank:5.)
induction nat1(rank:14.)
=================================================
Progress: 50


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 51


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 52


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 53


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 54


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 55


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 56


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 57


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (SUCC (SUCC (ZERO)))) (plus (ZERO) (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 58


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat1(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
induction nat2(rank:16.)
intro nat2(rank:7.)
=================================================
Progress: 59


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (nat3) (plus (nat1) (nat2)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
Case5 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case targetNew (tree3)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty)) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Node (ZERO) (Empty) (Empty)))))) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty)) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Node (ZERO) (Empty) (Empty)))))) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) = Tuple2 (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (SUCC (SUCC (SUCC (ZERO))))) (plus (SUCC (SUCC (SUCC (ZERO)))) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a))
=================================================
Progress: 60


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree2)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case2 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case targetNew (tree3)
case targetNew (tree2)
parent
plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)
lower
plus(_, _)
upper
Tuple2(_, _)
remove upper
plus(nat1, _)
parent
plus (plus (nat2) (nat2)) (nat1)
lower
plus(plus(nat2, nat2), _)
upper
Tuple2(_, plus(nat2, nat2))
remove upper
nat2
remove lower
nat2
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
=================================================
Progress: 61


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (nat3) (plus (nat1) (nat2)) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree2)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (plus (nat2) (nat1)) (nat2) = true
Case3 : lq (nat3) (plus (nat1) (nat2)) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case spec (tf1 (repr (target (tree2))) (target (tree3)))
case targetNew (tree2)
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
parent
plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)
lower
plus(_, _)
upper
Tuple2(plus(plus(_, nat2), nat1), _)
remove upper
plus(_, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (SUCC (ZERO))) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (SUCC (SUCC (ZERO)))) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
=================================================
Progress: 62


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (nat3) (plus (nat1) (nat2)) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (nat3) (plus (nat1) (nat2)) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case spec (tf1 (repr (target (tree2))) (target (tree3)))
case targetNew (tree3)
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
=================================================
Progress: 63


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (plus (nat2) (nat1)) (nat2) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
>>> case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (plus (nat2) (nat1)) (nat2) = true
Case3 : lq (nat3) (plus (nat1) (nat2)) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case targetNew (tree2)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
parent
plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)
lower
plus(_, _)
upper
Tuple2(plus(plus(_, nat2), nat1), _)
remove upper
plus(_, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
=================================================
Progress: 64


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case2 : lq (plus (nat2) (nat1)) (nat2) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case2 : lq (plus (nat2) (nat1)) (nat2) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case targetNew (tree2)
case targetNew (tree3)
parent
plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)
lower
plus(_, _)
upper
Tuple2(_, _)
remove upper
plus(nat1, _)
parent
plus (plus (nat2) (nat2)) (nat1)
lower
plus(plus(nat2, nat2), _)
upper
Tuple2(_, plus(nat2, nat2))
remove upper
nat2
remove lower
nat2
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (SUCC (ZERO))) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (SUCC (ZERO))) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
End of Lemma List


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case2 : lq (plus (nat2) (nat1)) (nat2) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
=================================================
Progress: 65


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case2 : lq (plus (nat2) (nat1)) (nat2) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 6
intro nat1(rank:5.)
intro tree1(rank:5.)
intro tree2(rank:5.)
induction nat1(rank:14.)
induction nat2(rank:14.)
intro nat2(rank:5.)
=================================================
Progress: 66


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 4
intro nat2(rank:5.)
intro tree1(rank:5.)
intro tree2(rank:5.)
induction nat2(rank:14.)
=================================================
Progress: 67


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro tree1(rank:5.)
intro tree2(rank:5.)
induction nat1(rank:14.)
=================================================
Progress: 68


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 3
intro tree2(rank:5.)
induction nat1(rank:14.)
induction nat2(rank:14.)
=================================================
Progress: 69


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
induction nat1(rank:14.)
induction nat2(rank:14.)
=================================================
Progress: 70


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 71


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro tree2(rank:5.)
induction nat2(rank:14.)
=================================================
Progress: 72


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 73


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 2
intro tree2(rank:5.)
induction nat1(rank:14.)
=================================================
Progress: 74


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 75


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 76


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree2(rank:5.)
=================================================
Progress: 77


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:6.)
=================================================
Progress: 78


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat1(rank:6.)
=================================================
Progress: 79


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 80


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 81


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 82


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat1(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
induction nat2(rank:16.)
intro nat2(rank:7.)
=================================================
Progress: 83


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (nat3) (plus (nat1) (nat2)) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
Case5 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case targetNew (tree3)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (SUCC (ZERO))) (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (SUCC (ZERO))) (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
=================================================
Progress: 84


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case2 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree2)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case2 : lq (plus (nat2) (nat1)) (nat2) = true
Case3 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case targetNew (tree3)
case targetNew (tree2)
parent
plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)
lower
plus(_, _)
upper
Tuple2(_, _)
remove upper
plus(nat1, _)
parent
plus (plus (nat2) (nat2)) (nat1)
lower
plus(plus(nat2, nat2), _)
upper
Tuple2(_, plus(nat2, nat2))
remove upper
nat2
remove lower
nat2
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (plus (ZERO) (ZERO))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
=================================================
Progress: 85


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (nat3) (plus (nat1) (nat2)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree2)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (nat3) (plus (nat1) (nat2)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
case targetNew (tree2)
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
parent
plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)
lower
plus(_, _)
upper
Tuple2(plus(plus(_, nat2), nat1), _)
remove upper
plus(_, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO)))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (SUCC (ZERO))) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
=================================================
Progress: 86


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (nat3) (plus (nat1) (nat2)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (nat3) (plus (nat1) (nat2)) = true
Case2 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
case targetNew (tree3)
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty)))) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty)))) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Node (SUCC (SUCC (ZERO))) (Empty) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Node (SUCC (SUCC (ZERO))) (Empty) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Empty))))) with
| Tuple2 a _ -> a))
=================================================
Progress: 87


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
>>> case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (nat3) (plus (nat1) (nat2)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case targetNew (tree2)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
parent
plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)
lower
plus(_, _)
upper
Tuple2(plus(plus(_, nat2), nat1), _)
remove upper
plus(_, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (SUCC (ZERO))) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Node (SUCC (ZERO)) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty))) (Empty)))) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Node (SUCC (ZERO)) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty))) (Empty)))) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (ZERO) (SUCC (ZERO))) (plus (ZERO) (SUCC (ZERO))) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO)))
=================================================
Progress: 88


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (match (targetNew (tree3)) with
| Tuple2 _ b -> b)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (nat2))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree3)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree2) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case targetNew (tree2)
case targetNew (tree3)
parent
plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)
lower
plus(_, _)
upper
Tuple2(_, _)
remove upper
plus(nat1, _)
parent
plus (plus (nat2) (nat2)) (nat1)
lower
plus(plus(nat2, nat2), _)
upper
Tuple2(_, plus(nat2, nat2))
remove upper
nat2
remove lower
nat2
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (SUCC (SUCC (ZERO)))) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (SUCC (SUCC (SUCC (ZERO)))) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (plus (ZERO) (ZERO))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))) (Empty))))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))) (Empty))))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))))
=================================================
Progress: 89


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case spec (tf1 (repr (target (tree2))) (target (tree3)))(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (nat3) (plus (nat1) (nat2)) = true
Case2 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
Case5 : spec (tf1 (repr (target (tree2))) (target (tree3))) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case targetNew (tree3)
case spec (tf1 (repr (target (tree2))) (target (tree3)))
parent
plus (nat1) (nat2)
lower
plus(_, nat2)
upper
Tuple2(_, _)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
remove upper
plus(nat1, nat2)
remove lower
plus(nat1, nat2)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (SUCC (ZERO))) (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (Empty)) with
| Tuple2 a _ -> a))
Prop: Tuple2 (plus (ZERO) (SUCC (SUCC (ZERO)))) (plus (ZERO) (SUCC (SUCC (ZERO)))) = Tuple2 (plus (plus (SUCC (SUCC (ZERO))) (match (targetNew (Node (ZERO) (Empty) (Empty))) with
| Tuple2 a _ -> a)) (ZERO)) (plus (SUCC (SUCC (ZERO))) (match (targetNew (Node (ZERO) (Empty) (Empty))) with
| Tuple2 a _ -> a))
=================================================
Progress: 90


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (match (targetNew (tree2)) with
| Tuple2 _ b -> b)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (nat3) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) = true
Case3 : lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree2)) with
| Tuple2 a _ -> a))

3 goal(s) more...

0 conjecture(s) more...
>>> case targetNew (tree2)(rank : 6.)


1st goal of : forall (tree1:tree), main (tree1) = mainNew (tree1)
tree1 : tree
nat1 : nat
tree2 : tree
tree3 : tree
IH1 : spec (repr (target (tree2))) = Tuple2 (nat2) (nat3)
IH2 : spec (repr (target (tree3))) = Tuple2 (nat2) (nat3)
Inductive1 : tree1 = Node (nat1) (tree2) (tree3)
Case1 : lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = true
Case2 : lq (if lq (plus (nat3) (nat2)) (nat3) then match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b else plus (match (Tuple2 (nat2) (nat3)) with
| Tuple2 _ b -> b) (match (Tuple2 (nat2) (nat3)) with
| Tuple2 a _ -> a)) (plus (nat2) (nat2)) = true
Case3 : lq (plus (nat2) (nat1)) (nat2) = true
Case4 : targetNew (tree3) = Tuple2 (nat2) (nat3)
Case5 : targetNew (tree2) = Tuple2 (nat2) (nat3)
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

3 goal(s) more...

0 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
case lq (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a))
case lq (if lq (plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (match (targetNew (tree2)) with
| Tuple2 _ b -> b) then match (targetNew (tree2)) with
| Tuple2 _ b -> b else plus (match (targetNew (tree3)) with
| Tuple2 _ b -> b) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)) (plus (match (targetNew (tree3)) with
| Tuple2 a _ -> a) (if lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a) then match (targetNew (tree2)) with
| Tuple2 a _ -> a else plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)))
case lq (plus (match (targetNew (tree2)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree2)) with
| Tuple2 a _ -> a)
case targetNew (tree3)
case targetNew (tree2)
parent
plus (nat1) (match (spec (tf1 (repr (target (tree2))) (target (tree3)))) with
| Tuple2 a _ -> a)
lower
plus(_, _)
upper
Tuple2(_, _)
remove upper
plus(nat1, _)
parent
plus (plus (nat2) (nat2)) (nat1)
lower
plus(plus(nat2, nat2), _)
upper
Tuple2(_, plus(nat2, nat2))
remove upper
nat2
remove lower
nat2
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
remove upper
plus(plus(nat2, nat2), nat1)
remove lower
plus(plus(nat2, nat2), nat1)
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
=================================================
Progress: 91


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 92


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 93


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 94


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (nat2:nat), Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (ZERO) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 95


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 96


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 97


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 98


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 99


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 100


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 101


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 102


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 103


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 104


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 105


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty))) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty))) (Empty)))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty))) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty))) (Empty)))))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 106


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat1(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
induction nat2(rank:16.)
intro nat2(rank:7.)
=================================================
Progress: 107


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 108


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 109


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 110


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 111


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 112


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 113


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 114


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

1 conjecture(s) more...
>>> induction nat1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 115


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro nat2(rank:6.)
=================================================
Progress: 116


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 117


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 118


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (plus (ZERO) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (ZERO) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (ZERO)) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO)))) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 119


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro nat1(rank:7.)
intro tree1(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 120


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:6.)
=================================================
Progress: 121


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:6.)
=================================================
Progress: 122


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:7.)
=================================================
Progress: 123


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 124


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 125


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:6.)
=================================================
Progress: 126


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:7.)
=================================================
Progress: 127


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 128


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro nat2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 129


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (SUCC (ZERO)) (SUCC (ZERO)) = Tuple2 (plus (plus (match (targetNew (Node (ZERO) (Empty) (Empty))) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (ZERO)) (plus (match (targetNew (Node (ZERO) (Empty) (Empty))) with
| Tuple2 a _ -> a) (SUCC (ZERO)))
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 130


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 131


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (nat2:nat), Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
induction nat2(rank:7.)
=================================================
Progress: 132


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 133


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 134


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 135


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 136


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 137


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 138


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:7.)
=================================================
Progress: 139


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 140


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 141


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 142


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
intro Cond1
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))) = Tuple2 (plus (plus (match (targetNew (Node (ZERO) (Empty) (Empty))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (match (targetNew (Node (ZERO) (Empty) (Empty))) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))))
Prop: Tuple2 (SUCC (ZERO)) (SUCC (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO)))
=================================================
Progress: 143


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:5.)
=================================================
Progress: 144


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:5.)
=================================================
Progress: 145


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro tree1(rank:5.)
=================================================
Progress: 146


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro tree1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:5.)
=================================================
Progress: 147


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:5.)
=================================================
Progress: 148


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 5.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 149


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 6
intro nat1(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
induction nat2(rank:16.)
intro nat2(rank:7.)
=================================================
Progress: 150


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 151


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 152


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 153


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 154


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 155


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 156


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Empty) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Empty) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Empty) (Empty))))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Empty) (Empty))))))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
=================================================
Progress: 157


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
=================================================
Progress: 158


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:7.)
=================================================
Progress: 159


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree1(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 160


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 161


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat2(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat2(rank:16.)
=================================================
Progress: 162


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 163


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro tree2(rank:7.)
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 164


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 165


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat2(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat2(rank:16.)
=================================================
Progress: 166


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 167


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro tree2(rank:7.)
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 168


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 169


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat2(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat2(rank:16.)
=================================================
Progress: 170


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 171


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro tree2(rank:7.)
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 172


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 173


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (SUCC (plus (ZERO) (SUCC (ZERO))))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty)))) (Empty))) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty)) (Empty))) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty)))) (Empty))) (Node (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty)) (Empty))) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 174


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 175


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 176


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 177


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 178


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 179


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (ZERO)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (ZERO)) (plus (SUCC (nat3)) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 180


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (ZERO)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (ZERO)) (plus (SUCC (nat3)) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 181


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (ZERO)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 182


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (ZERO)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (ZERO)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 183


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 184


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
forall (nat2:nat), Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

1 goal(s) more...

1 conjecture(s) more...
>>> induction nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (ZERO) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 185


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO))) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty)))))))) with
| Tuple2 a _ -> a)) (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty)))))))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO)))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (SUCC (SUCC (SUCC (ZERO)))) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Empty))))))) with
| Tuple2 a _ -> a)) (plus (SUCC (SUCC (SUCC (ZERO)))) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Empty))))))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO)))))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 186


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat1(rank:7.)
=================================================
Progress: 187


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat2(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat2(rank:16.)
=================================================
Progress: 188


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 189


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 3
intro tree2(rank:7.)
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 190


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
induction nat1(rank:16.)
induction nat2(rank:16.)
=================================================
Progress: 191


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 192


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 193


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 194


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 195


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 196


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 197


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 198


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 199


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 200


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat2(rank:16.)
=================================================
Progress: 201


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 202


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 203


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 204


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 205


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 206


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat2(rank:16.)
=================================================
Progress: 207


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 208


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 209


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 210


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 211


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 212


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat2(rank:16.)
=================================================
Progress: 213


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 214


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 215


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 216


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 217


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 218


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 219


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 220


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))
nat1 : nat
---------------------------------------
forall (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))
nat1 : nat
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
forall (tree1:tree), Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 221


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (ZERO) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (ZERO)) (plus (ZERO) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))

2 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (Node (SUCC (ZERO)) (Empty) (Empty))) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Node (SUCC (ZERO)) (Empty) (Empty))) with
| Tuple2 a _ -> a)
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Lemma List
forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 222


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)) (nat1)) (plus (nat2) (match (targetNew (tree1)) with
| Tuple2 a _ -> a))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

2 goal(s) more...

1 conjecture(s) more...
>>> assert forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 223


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 224


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 225


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat2(rank:16.)
=================================================
Progress: 226


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 227


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 228


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 229


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 230


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 231


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 232


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 233


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 234


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
forall (tree1:tree), Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 235


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 236


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 237


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 238


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 239


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 240


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 241


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 242


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 243


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 244


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
---------------------------------------
lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Prop: Tuple2 (plus (SUCC (ZERO)) (ZERO)) (plus (SUCC (ZERO)) (ZERO)) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Lemma List
forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 245


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
nat1 : nat
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro tree1(rank:9.)
induction nat1(rank:18.)
=================================================
Progress: 246


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
discriminate(rank:6.)
=================================================
Progress: 247


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Base2 : nat2 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

2 goal(s) more...

1 conjecture(s) more...
>>> discriminate(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (SUCC (nat3)) (ZERO)) (SUCC (nat3)) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (ZERO)) (plus (SUCC (nat3)) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:6.)
=================================================
Progress: 248


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (SUCC (nat3)) (ZERO)) (SUCC (nat3)) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (ZERO)) (plus (SUCC (nat3)) (SUCC (nat3)))

1 goal(s) more...

1 conjecture(s) more...
>>> simpl in goal(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:6.)
=================================================
Progress: 249


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond1(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:6.)
=================================================
Progress: 250


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
>>> intro Cond2(rank : 6.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat3) (ZERO)) (nat3) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:8.)
=================================================
Progress: 251


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))
nat1 : nat
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
forall (tree1:tree), Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))
nat1 : nat
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
tree1 : tree
---------------------------------------
Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))
nat1 : nat
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
tree1 : tree
---------------------------------------
Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 252


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))
nat1 : nat
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
tree1 : tree
---------------------------------------
Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (nat1) (nat1) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat1(rank:9.)
=================================================
Progress: 253


1st goal of : forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 254


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 255


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
---------------------------------------
forall (nat2:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:8.)
=================================================
Progress: 256


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 257


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 258


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 259


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
forall (tree1:tree), Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat1 : nat
nat2 : nat
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
tree1 : tree
---------------------------------------
Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (SUCC (SUCC (ZERO)))) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))))
=================================================
Progress: 260


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 261


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 262


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 263


1st goal of : forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Lemma List
forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 264


1st goal of : forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 265


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 266


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 267


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 268


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 269


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 270


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 271


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 272


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 273


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
=================================================
Progress: 274


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 275


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
=================================================
Progress: 276


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty)) (Empty))))) (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a)) (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty)) (Empty))))) (target (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (SUCC (ZERO))) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
=================================================
Progress: 277


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (SUCC (SUCC (ZERO)))) (plus (ZERO) (ZERO))
=================================================
Progress: 278


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))) (Node (ZERO) (Empty) (Empty))) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty))) (Empty)) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Node (SUCC (SUCC (SUCC (SUCC (ZERO))))) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))) (Node (ZERO) (Empty) (Empty))) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty))) (Empty)) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 279


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat2) (nat1)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
induction nat2(rank:18.)
intro nat2(rank:9.)
=================================================
Progress: 280


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 281


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat2) (nat1)) (nat2) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
induction nat2(rank:18.)
intro nat2(rank:9.)
=================================================
Progress: 282


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 283


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 284


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (ZERO)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (ZERO)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO))) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)) (Empty)) (Empty)))) (Node (ZERO) (Empty) (Empty))))) (target (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)) (Empty)) (Empty)))) (Node (ZERO) (Empty) (Empty))))) (target (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (ZERO)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (ZERO)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 285


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (ZERO)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 286


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (ZERO)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (ZERO)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))(rank : 0.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 287


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 288


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 289


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 290


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 291


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 292


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 293


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 294


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 295


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (plus (nat1) (ZERO)) (nat1) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
=================================================
Progress: 296


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 297


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 298


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 299


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 300


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 301


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 302


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty)) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty)) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty))) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 303


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
=================================================
Progress: 304


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 305


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 306


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 307


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 308


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 309


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 310


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 311


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 312


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 313


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty))) (Node (ZERO) (Empty) (Empty))) (Node (ZERO) (Empty) (Empty)))))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (SUCC (ZERO)) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty))) (Node (ZERO) (Empty) (Empty))) (Node (ZERO) (Empty) (Empty)))))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (SUCC (ZERO)))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
=================================================
Progress: 314


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 315


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 316


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 317


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 318


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 319


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 320


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 321


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (ZERO)))) (SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO)))))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Node (SUCC (ZERO)) (Empty) (Empty)) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (nat1)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 322


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (nat1)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (nat1)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (nat1)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
induction nat2(rank:18.)
intro nat2(rank:9.)
=================================================
Progress: 323


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 324


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 325


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 326


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3))) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 327


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3))) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 328


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 329


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 330


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3))) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 331


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3))) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 332


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 333


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
---------------------------------------
forall (nat2:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 334


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 335


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat) (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 336


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 337


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 338


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 339


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 340


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 341


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 342


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 343


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 344


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 345


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 346


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 347


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 348


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 349


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 350


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 351


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (plus (ZERO) (nat1)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 352


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 353


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 354


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 355


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 356


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat3) (ZERO)) (nat3) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
>>> rewrite IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat3) (ZERO)) (nat3) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

3 goal(s) more...

1 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
rewrite IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) = Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO))) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Empty))))))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Empty) (Empty))))))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat3) (ZERO)) (nat3) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
Lemma List
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat3) (ZERO)) (nat3) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

3 goal(s) more...

1 conjecture(s) more...
=================================================
Progress: 357


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat3) (ZERO)) (nat3) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

1 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 4
intro nat1(rank:7.)
intro tree1(rank:7.)
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 358


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat3) (ZERO)) (nat3) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat3) (ZERO)) (nat3) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (ZERO)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (ZERO))) (SUCC (plus (nat3) (SUCC (nat3))))

3 goal(s) more...

1 conjecture(s) more...
>>> assert forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))(rank : 0.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 359


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro nat1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 360


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 2
intro tree2(rank:7.)
induction nat1(rank:16.)
=================================================
Progress: 361


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 362


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
---------------------------------------
forall (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree2(rank:7.)
=================================================
Progress: 363


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
---------------------------------------
forall (nat1:nat) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat1(rank:8.)
=================================================
Progress: 364


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
---------------------------------------
forall (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 365


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 366


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 367


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
tree1 : tree
tree2 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat1) (ZERO)) (nat1) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
=================================================
Progress: 368


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 369


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 370


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro nat2(rank:8.)
=================================================
Progress: 371


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (ZERO) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 372


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 373


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2))) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 374


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2))) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 375


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 376


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 377


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 378


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 379


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 380


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 381


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (ZERO)))) (SUCC (SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty)) (Node (SUCC (ZERO)) (Empty) (Empty)))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Node (SUCC (ZERO)) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Empty)) (Node (SUCC (ZERO)) (Empty) (Empty)))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat1) (SUCC (SUCC (nat1)))) (ZERO)))) (SUCC (SUCC (plus (nat1) (SUCC (SUCC (nat1))))))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 382


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat1) (SUCC (SUCC (nat1)))) (ZERO)))) (SUCC (SUCC (plus (nat1) (SUCC (SUCC (nat1))))))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat1) (SUCC (SUCC (nat1)))) (ZERO)))) (SUCC (SUCC (plus (nat1) (SUCC (SUCC (nat1))))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat1) (SUCC (SUCC (nat1)))) (ZERO)))) (SUCC (SUCC (plus (nat1) (SUCC (SUCC (nat1))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
=================================================
Progress: 383


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 384


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 385


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 386


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 387


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 388


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:8.)
=================================================
Progress: 389


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (nat2)) (plus (ZERO) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 390


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:8.)
=================================================
Progress: 391


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:8.)
=================================================
Progress: 392


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:9.)
=================================================
Progress: 393


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:8.)
=================================================
Progress: 394


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:9.)
=================================================
Progress: 395


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:8.)
=================================================
Progress: 396


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:9.)
=================================================
Progress: 397


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (SUCC (ZERO))) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (ZERO))))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
intro Cond1
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
Prop: Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO))) (SUCC (plus (SUCC (ZERO)) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))))
validate generalize_common_subterm_goal
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (SUCC (ZERO)))))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
Lemma List
forall (nat1:nat) (nat2:nat) (nat3:nat), lq (plus (nat3) (nat2)) (nat3) = true -> Tuple2 (SUCC (plus (plus (nat3) (nat1)) (nat2))) (SUCC (plus (nat3) (nat1))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (nat1))) (nat2)))) (SUCC (SUCC (plus (nat3) (SUCC (nat1)))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 398


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (nat3:nat), lq (plus (nat3) (nat2)) (nat3) = true -> Tuple2 (SUCC (plus (plus (nat3) (nat1)) (nat2))) (SUCC (plus (nat3) (nat1))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (nat1))) (nat2)))) (SUCC (SUCC (plus (nat3) (SUCC (nat1)))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (nat3:nat), lq (plus (nat3) (nat2)) (nat3) = true -> Tuple2 (SUCC (plus (plus (nat3) (nat1)) (nat2))) (SUCC (plus (nat3) (nat1))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (nat1))) (nat2)))) (SUCC (SUCC (plus (nat3) (SUCC (nat1)))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (nat3:nat), lq (plus (nat3) (nat2)) (nat3) = true -> Tuple2 (SUCC (plus (plus (nat3) (nat1)) (nat2))) (SUCC (plus (nat3) (nat1))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (nat1))) (nat2)))) (SUCC (SUCC (plus (nat3) (SUCC (nat1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro nat2(rank:9.)
=================================================
Progress: 399


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3)))) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
nat2 : nat
nat3 : nat
IH1 : lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (ZERO)))) (SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO)))))))
previous tactics
simpl in goal
intro Cond1
Prop: Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO)))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (SUCC (ZERO)))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (ZERO))))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
validate generalize_common_subterm_goal
Prop: Tuple2 (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (SUCC (ZERO))))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (SUCC (ZERO)))))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
=================================================
Progress: 400


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:8.)
=================================================
Progress: 401


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:8.)
=================================================
Progress: 402


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
induction nat2(rank:9.)
=================================================
Progress: 403


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 404


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (ZERO) (ZERO)) (nat1)) (plus (ZERO) (ZERO))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 405


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 406


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 407


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 408


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 409


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2))) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 410


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2))) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 411


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite <- IH1 in goal at 0(rank:8.)
=================================================
Progress: 412


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
---------------------------------------
forall (nat1:nat) (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 413


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
---------------------------------------
forall (nat1:nat), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

2 conjecture(s) more...
>>> induction nat1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
simpl in goal(rank:8.)
=================================================
Progress: 414


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (ZERO) (nat1)) (ZERO) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (nat1))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 415


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 416


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro nat2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 417


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Node (ZERO) (Empty) (Empty)))) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Node (ZERO) (Empty) (Empty)))) with
| Tuple2 a _ -> a)
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))) (Empty)))) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Node (SUCC (ZERO)) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))) (Empty)))) with
| Tuple2 a _ -> a)
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (Empty)) with
| Tuple2 a _ -> a)
Lemma List
forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 418


1st goal of : forall (nat1:nat) (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (plus (nat1) (ZERO)) (plus (nat1) (ZERO)) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat1)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)(rank : 0.)


1st goal of : forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

---------------------------------------
forall (tree1:tree), lq (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a) = true -> Tuple2 (ZERO) (ZERO) = Tuple2 (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (ZERO)) (match (targetNew (tree1)) with
| Tuple2 a _ -> a)

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 1
intro tree1(rank:9.)
=================================================
Progress: 419


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) (ZERO)) (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (ZERO))))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO))))))) (ZERO)))) (SUCC (SUCC (plus (SUCC (SUCC (SUCC (ZERO)))) (SUCC (SUCC (SUCC (SUCC (SUCC (ZERO)))))))))
Prop: Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (ZERO)))) (SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO)))))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
intro Cond1
Prop: Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (ZERO)) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)))))
Prop: Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))))))
validate generalize_common_subterm_goal
Prop: Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
Prop: Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO))))))
Lemma List
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (SUCC (plus (plus (nat2) (nat1)) (ZERO))) (SUCC (plus (nat2) (nat1))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (nat1))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (nat1)))))
End of Lemma List


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 420


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (SUCC (plus (plus (nat2) (nat1)) (ZERO))) (SUCC (plus (nat2) (nat1))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (nat1))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (nat1)))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (SUCC (plus (plus (nat2) (nat1)) (ZERO))) (SUCC (plus (nat2) (nat1))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (nat1))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (nat1)))))

---------------------------------------
forall (nat1:nat) (nat2:nat), lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (SUCC (plus (plus (nat2) (nat1)) (ZERO))) (SUCC (plus (nat2) (nat1))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (nat1))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (nat1)))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 3
intro nat1(rank:9.)
intro nat2(rank:9.)
induction nat2(rank:18.)
=================================================
Progress: 421


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 422


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
nat2 : nat
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
validate generalize_common_subterm_goal
Prop: Tuple2 (SUCC (ZERO)) (SUCC (ZERO)) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO))) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (ZERO)))
Prop: Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (SUCC (SUCC (ZERO))))
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
=================================================
Progress: 423


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 424


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 425


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 426


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 427


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 428


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 429


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 430


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 431


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 432


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 433


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 434


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 435


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 436


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 437


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 438


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 439


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 440


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 441


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 442


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2)))) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
>>> rewrite <- IH1 in goal at 0(rank : 8.)


1st goal of : forall (nat1:nat), lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1)) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
nat1 : nat
nat2 : nat
IH1 : lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
rewrite <- IH1 in goal at 0
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (SUCC (ZERO)))))) (ZERO)))) (SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (SUCC (SUCC (ZERO))))))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
previous tactics
simpl in goal
intro Cond1
Prop: Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (ZERO)) (ZERO))) (SUCC (plus (SUCC (ZERO)) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (ZERO)))))
Prop: Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
validate generalize_common_subterm_goal
Prop: Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO)))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (SUCC (plus (plus (ZERO) (ZERO)) (ZERO))) (SUCC (plus (ZERO) (ZERO))) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (ZERO)))))
Prop: Tuple2 (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO))) (ZERO))) (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (ZERO)))) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))))))
=================================================
Progress: 443


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:8.)
=================================================
Progress: 444


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (ZERO) (ZERO)) (ZERO) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))

1 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 445


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 446


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 447


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 448


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 449


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree1 : tree
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
rewrite IH1 in goal at 0(rank:9.)
=================================================
Progress: 450


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 451


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree), lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (nat2)) (plus (nat1) (nat2)) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (nat1)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))
tree1 : tree
nat1 : nat
Base1 : nat1 = ZERO
nat2 : nat
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (nat2) (nat2) = Tuple2 (plus (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2)) (ZERO)) (plus (match (targetNew (tree1)) with
| Tuple2 a _ -> a) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro nat2
intro Cond1
validate generalize_common_subterm_goal
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
Prop: Tuple2 (ZERO) (ZERO) = Tuple2 (plus (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO)) (ZERO)) (plus (match (targetNew (Empty)) with
| Tuple2 a _ -> a) (ZERO))
=================================================
Progress: 452


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 453


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (ZERO) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 454


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (nat2)) (SUCC (nat2))) (ZERO)) (plus (SUCC (nat2)) (SUCC (nat2)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 455


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 456


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 457


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Empty) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (SUCC (ZERO)) (Empty) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)) (Empty)) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty)))) (Node (SUCC (ZERO)) (Empty) (Empty)))))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (ZERO) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty)) (Node (ZERO) (Node (SUCC (ZERO)) (Node (ZERO) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)) (Empty)) (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty)))) (Node (SUCC (ZERO)) (Empty) (Empty)))))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
End of Lemma List


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 458


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat1) (nat1)) (ZERO)) (plus (nat1) (nat1))
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))
Inductive1 : nat1 = SUCC (nat2)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
=================================================
Progress: 459


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 460


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (nat1) (ZERO)

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 461


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (SUCC (nat3)) (SUCC (nat3))) (nat1)) (plus (SUCC (nat3)) (SUCC (nat3)))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 462


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 463


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 464


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat3) (nat3)) (nat1)) (plus (nat3) (nat3))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (SUCC (SUCC (ZERO))))) (SUCC (plus (ZERO) (SUCC (ZERO))))
=================================================
Progress: 465


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 466


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 467


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 468


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 469


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
Base1 : nat2 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
false = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (nat1))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 470


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (SUCC (nat3)) (nat1)) (SUCC (nat3)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))) (nat1))) (SUCC (plus (SUCC (nat3)) (SUCC (SUCC (nat3)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro tree1(rank:7.)
=================================================
Progress: 471


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:7.)
=================================================
Progress: 472


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:7.)
=================================================
Progress: 473


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
---------------------------------------
lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 7.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro tree1
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO))))) (ZERO)))) (SUCC (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (SUCC (ZERO)))))))
Prop: Tuple2 (plus (ZERO) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) (plus (ZERO) (match (spec (tf1 (repr (target (Node (SUCC (ZERO)) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (ZERO)))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Prop: Tuple2 (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)) (Empty)))))) with
| Tuple2 a _ -> a)) (plus (SUCC (SUCC (ZERO))) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (SUCC (ZERO)) (Node (SUCC (SUCC (ZERO))) (Empty) (Empty)) (Empty)))))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (ZERO) (SUCC (SUCC (ZERO)))) (SUCC (SUCC (ZERO)))))) (SUCC (SUCC (plus (ZERO) (SUCC (SUCC (ZERO))))))
Lemma List
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (nat1)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 474


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat1 : nat
tree2 : tree
nat2 : nat
nat3 : nat
IH1 : forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat3) (nat1)) (nat3) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat3) (SUCC (nat3))) (nat1))) (SUCC (plus (nat3) (SUCC (nat3))))
Inductive1 : nat2 = SUCC (nat3)
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true
Cond2 : lq (plus (nat3) (nat1)) (nat3) = true
---------------------------------------
Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat3) (SUCC (SUCC (nat3)))) (nat1)))) (SUCC (SUCC (plus (nat3) (SUCC (SUCC (nat3))))))

0 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (nat1)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))(rank : 0.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (nat1)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

---------------------------------------
forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (nat1)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 6
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
induction nat2(rank:18.)
intro nat2(rank:9.)
=================================================
Progress: 475


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond2(rank:8.)
=================================================
Progress: 476


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true->lq (plus (nat2) (nat1)) (nat2) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
Cond2 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (SUCC (SUCC (SUCC (ZERO)))) (Empty) (Node (ZERO) (Node (ZERO) (Empty) (Empty)) (Empty))))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
=================================================
Progress: 477


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (plus (plus (nat2) (nat2)) (nat1)) (plus (nat2) (nat2))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (nat2) (nat2)) (ZERO)) (plus (nat2) (nat2))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (ZERO)) (SUCC (ZERO))) (ZERO)) (plus (SUCC (ZERO)) (SUCC (ZERO)))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (ZERO) (ZERO)) (ZERO)) (plus (ZERO) (ZERO))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (plus (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))) (ZERO)) (plus (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO))))
=================================================
Progress: 478


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond2(rank : 8.)


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 0
previous tactics
simpl in goal
intro Cond1
intro Cond2
validate generalize_common_subterm_goal
Prop: Tuple2 (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Node (ZERO) (Empty) (Empty)))) (target (Empty)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))) (ZERO))) (SUCC (plus (SUCC (ZERO)) (SUCC (SUCC (ZERO)))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Empty))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Prop: Tuple2 (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty)))))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (Empty))) (target (Node (ZERO) (Empty) (Node (ZERO) (Empty) (Empty)))))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (ZERO) (SUCC (ZERO))) (ZERO))) (SUCC (plus (ZERO) (SUCC (ZERO))))
Lemma List
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
End of Lemma List


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
=================================================
Progress: 479


1st goal of : forall (nat1:nat) (nat2:nat) (tree1:tree) (tree2:tree), lq (plus (nat2) (nat1)) (nat2) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = true -> Tuple2 (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) (plus (nat1) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a)) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (nat1))) (SUCC (plus (nat2) (SUCC (nat2))))
nat2 : nat
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (plus (nat2) (ZERO)) (nat2) = true
Cond2 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))

1 goal(s) more...

2 conjecture(s) more...
>>> assert forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))(rank : 0.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

---------------------------------------
forall (nat1:nat) (tree1:tree) (tree2:tree), lq (plus (nat1) (ZERO)) (nat1) = true->lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))

0 goal(s) more...

3 conjecture(s) more...
Tactic List : 4
intro nat1(rank:9.)
intro tree1(rank:9.)
intro tree2(rank:9.)
induction nat1(rank:18.)
=================================================
Progress: 480


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
forall (tree1:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro tree1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
tree1 : tree
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
intro Cond1(rank:8.)
=================================================
Progress: 481


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> intro Cond1(rank : 8.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
Tactic List : 1
discriminate(rank:7.)
=================================================
Progress: 482


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
Base1 : nat1 = ZERO
Cond1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true
---------------------------------------
false = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (ZERO))) (SUCC (SUCC (ZERO)))

1 goal(s) more...

2 conjecture(s) more...
>>> discriminate(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
Deduplication: 0
Tactic List : 1
simpl in goal(rank:7.)
=================================================
Progress: 483


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (SUCC (nat2)) (ZERO)) (SUCC (nat2)) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))) (ZERO))) (SUCC (plus (SUCC (nat2)) (SUCC (SUCC (nat2)))))

0 goal(s) more...

2 conjecture(s) more...
>>> simpl in goal(rank : 7.)


1st goal of : forall (nat1:nat) (tree1:tree) (tree2:tree), lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat1) (ZERO)) (nat1) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat1) (SUCC (nat1))) (ZERO))) (SUCC (plus (nat1) (SUCC (nat1))))
tree1 : tree
tree2 : tree
nat1 : nat
nat2 : nat
IH1 : lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (plus (plus (nat2) (SUCC (nat2))) (ZERO))) (SUCC (plus (nat2) (SUCC (nat2))))
Inductive1 : nat1 = SUCC (nat2)
---------------------------------------
lq (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 _ b -> b) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = true->lq (plus (nat2) (ZERO)) (nat2) = true -> Tuple2 (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) (match (spec (tf1 (repr (target (tree1))) (target (tree2)))) with
| Tuple2 a _ -> a) = Tuple2 (SUCC (SUCC (plus (plus (nat2) (SUCC (SUCC (nat2)))) (ZERO)))) (SUCC (SUCC (plus (nat2) (SUCC (SUCC (nat2))))))

0 goal(s) more...

2 conjecture(s) more...
